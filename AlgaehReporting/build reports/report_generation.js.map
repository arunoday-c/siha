{"version":3,"sources":["../src/report_generation.js"],"names":["chromePath","chrome","default","chromePuppeteer","XlsxTemplate","require","outputFolder","path","join","process","cwd","fs","existsSync","mkdirSync","compile","templateName","data","filePath","readFile","html","hbs","comp","console","log","compileExcel","registerHelper","sumby","callBack","Array","isArray","sumof","_","sumBy","s","length","value1","value2","options","fn","inverse","value","type","dt","Date","isNaN","format","startCase","toLower","parseInt","conditional","searchKey","inputArray","comp_type","obj","find","item","earnings_id","amount","deductions_id","contributions_id","styleSheetName","fullPath","style","readFileSync","_extention","extname","replace","img","groupby","groupBy","chain","map","detail","key","array","index","fieldName","JSON","stringify","filename","name","stringToappend","filetype","reqHeader","host","split","imageLocation","arrayFirstRowToObject","module","exports","getReport","req","res","input","query","_mysql","algaehMysql","_inputParam","parse","report","executeQuery","values","reportName","userIdentity","printQuery","then","_reportCount","i","_reportOutput","r","_data","_inputOrders","eval","report_input_series","_value","_params","reportParams","f","undefined","push","queryObject","report_query","_path","report_name","_reportType","_supportingJS","_header","headers","startGenerate","_outPath","puppeteer","launch","browser","newPage","page","_pdfTemplating","report_header_file_name","user_name","report_name_for_header","top","report_footer_file_name","bottom","result","setContent","emulateMedia","pageOrentation","landscape","pageSize","pdf","printBackground","displayHeaderFooter","close","_outfileName","_rOut","releaseConnection","error","status","send","exists","writeHead","_fs","createReadStream","on","unlink","pipe","executePDF","mysql","inputs","args","loadash","moment","mainData","resultReq","catch","data_manupulation","data_string","_resu","e","getReportMultiPrint","next","templates","subReportCollection","inputParameters","promises","p","inputData","reportSequence","Promise","resolve","reject","resourceTemplate","inputOrders","ip","_myquery","mysqlQueryFormat","all","records","end","merdgeTosingleReport","getAllReports","getExcelReport","templatePath","executeExcel","_input","hospital_id","_inp","excelOutput","fileNameExcel","template","copySheets","c","shts","copySheet","copySheetName","newSheetName","sheets","substitute","dataGenerated","generate","outputFileSync","encoding","getRawReport","legth","write","reportRaw","Error"],"mappings":"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","file":"report_generation.js","sourcesContent":["import fs from \"fs-extra\";\r\nimport puppeteer from \"puppeteer\";\r\nimport algaehMysql from \"algaeh-mysql\";\r\nimport _ from \"lodash\";\r\nimport path from \"path\";\r\nimport moment from \"moment\";\r\nimport merge from \"easy-pdf-merge\";\r\nimport hbs from \"handlebars\";\r\nimport \"babel-polyfill\";\r\nimport chrome from \"algaeh-keys\";\r\n\r\nconst chromePath =\r\n  chrome.default.chromePuppeteer != null ? chrome.default.chromePuppeteer : {};\r\n\r\nconst XlsxTemplate = require(\"xlsx-template\");\r\n\r\nlet outputFolder = path.join(\r\n  path.join(process.cwd(), \"algaeh_report_tool/templates\", \"Output\")\r\n);\r\nif (!fs.existsSync(outputFolder)) {\r\n  fs.mkdirSync(outputFolder);\r\n}\r\n\r\nconst compile = async function(templateName, data) {\r\n  try {\r\n    const filePath = path.join(\r\n      process.cwd(),\r\n      \"algaeh_report_tool/templates\",\r\n      `${templateName}.hbs`\r\n    );\r\n    const html = await fs.readFile(filePath, \"utf-8\");\r\n    const comp = await hbs.compile(html)(data);\r\n    //\r\n    return comp;\r\n  } catch (error) {\r\n    console.log(\"Error in compile\", compile);\r\n    return \"\";\r\n  }\r\n\r\n  // return \"رقم الفاتورة\";\r\n};\r\n\r\nconst compileExcel = async function(templateName, data) {\r\n  const filePath = path.join(\r\n    process.cwd(),\r\n    \"algaeh_report_tool/templates\",\r\n    `${templateName}.hbs`\r\n  );\r\n  const html = await fs.readFile(filePath, \"utf-8\");\r\n  return hbs.compile(html)(data);\r\n};\r\n\r\nhbs.registerHelper(\"sumOf\", function(data, sumby, callBack) {\r\n  data = Array.isArray(data) ? data : [];\r\n  const sumof = _.sumBy(data, function(s) {\r\n    return s[sumby];\r\n  });\r\n  if (typeof callBack == \"function\") callBack(sumof);\r\n  else {\r\n    return sumof;\r\n  }\r\n});\r\nhbs.registerHelper(\"countOf\", function(data) {\r\n  data = Array.isArray(data) ? data : [];\r\n  return data.length;\r\n});\r\nhbs.registerHelper(\"if\", function(value1, value2, options) {\r\n  if (value1 == value2) return options.fn(this);\r\n  else return options.inverse(this);\r\n});\r\n\r\nhbs.registerHelper(\"dateTime\", function(value, type) {\r\n  type = type || \"date\";\r\n\r\n  if (value == null) {\r\n    return \"\";\r\n  }\r\n  if (value != \"\") {\r\n    const dt = value instanceof Date && !isNaN(value);\r\n    if (!dt) {\r\n      return value;\r\n    }\r\n    if (type == \"date\") {\r\n      return moment(value).format(\"DD-MM-YYYY\");\r\n    } else {\r\n      return moment(value).format(\"hh:mm A\");\r\n    }\r\n  } else {\r\n    return value;\r\n  }\r\n});\r\n\r\nhbs.registerHelper(\"capitalization\", function(value) {\r\n  return _.startCase(_.toLower(value));\r\n});\r\n//created by irfan\r\nhbs.registerHelper(\"inc\", function(value, options) {\r\n  return parseInt(value) + 1;\r\n});\r\n\r\n//created by irfan:to check array has elements\r\nhbs.registerHelper(\"hasElement\", function(conditional, options) {\r\n  if (conditional.length > 0) {\r\n    return options.fn(this);\r\n  } else {\r\n    return options.inverse(this);\r\n  }\r\n});\r\n//created by irfan:\r\nhbs.registerHelper(\"dynamicSalary\", function(searchKey, inputArray, comp_type) {\r\n  if (comp_type == \"E\") {\r\n    const obj = inputArray.find(item => {\r\n      return item.earnings_id == searchKey;\r\n    });\r\n    return obj ? obj.amount : \"0\";\r\n  } else if (comp_type == \"D\") {\r\n    const obj = inputArray.find(item => {\r\n      return item.deductions_id == searchKey;\r\n    });\r\n    return obj ? obj.amount : \"0\";\r\n  } else if (comp_type == \"C\") {\r\n    const obj = inputArray.find(item => {\r\n      return item.contributions_id == searchKey;\r\n    });\r\n    return obj ? obj.amount : \"0\";\r\n  }\r\n});\r\n\r\nhbs.registerHelper(\"importStyle\", function(styleSheetName) {\r\n  const fullPath = path.join(\r\n    process.cwd(),\r\n    \"algaeh_report_tool/templates\",\r\n    `${styleSheetName}`\r\n  );\r\n  const style = fs.readFileSync(fullPath, \"utf-8\");\r\n  return \"<style type='text/css'>\" + style + \"</style>\";\r\n});\r\n\r\nhbs.registerHelper(\"loadPage\", function(filePath, data) {\r\n  const fullPath = path.join(\r\n    process.cwd(),\r\n    \"algaeh_report_tool/templates\",\r\n    `${filePath}`\r\n  );\r\n  const html = fs.readFileSync(fullPath, \"utf-8\");\r\n  return hbs.compile(html)(data);\r\n});\r\n\r\nhbs.registerHelper(\"imageSource\", function(filePath) {\r\n  const fullPath = path.join(\r\n    process.cwd(),\r\n    \"algaeh_report_tool/templates\",\r\n    `${filePath}`\r\n  );\r\n  const _extention = path.extname(fullPath).replace(\".\", \"\");\r\n  const img = fs.readFileSync(fullPath, \"base64\");\r\n  return \"data:image/\" + _extention + \";base64,\" + img;\r\n});\r\n\r\nhbs.registerHelper(\"groupBy\", function(data, groupby) {\r\n  const groupBy = _.chain(data)\r\n    .groupBy(groupby)\r\n    .map(function(detail, key) {\r\n      return {\r\n        [groupby]: key,\r\n        groupDetail: detail\r\n      };\r\n    })\r\n    .value();\r\n\r\n  return groupBy;\r\n});\r\nhbs.registerHelper(\"currentDateTime\", function(type) {\r\n  if (type == null || type == \"\") {\r\n    return moment().format(\"DD-MM-YYYY\");\r\n  } else if (type == \"time\") {\r\n    return moment().format(\"hh:mm A\");\r\n  } else {\r\n    return moment().format(\"DD-MM-YYYY\");\r\n  }\r\n});\r\nhbs.registerHelper(\"firstElement\", function(array, index, fieldName) {\r\n  array = array || [];\r\n  index = index || 0;\r\n  if (array.length > 0) {\r\n    return array[index][fieldName];\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\nhbs.registerHelper(\"consoleLog\", function(data) {\r\n  if (typeof data == \"string\") {\r\n    return data;\r\n  } else {\r\n    return JSON.stringify(data);\r\n  }\r\n});\r\n\r\nhbs.registerHelper(\"imageUrl\", function(\r\n  filename,\r\n  index,\r\n  name,\r\n  stringToappend,\r\n  filetype,\r\n  reqHeader\r\n) {\r\n  const host = reqHeader[\"host\"].split(\":\")[0];\r\n\r\n  if (Array.isArray(filename)) {\r\n    if (filename.length > 0) {\r\n      stringToappend = stringToappend || \"\";\r\n      const imageLocation =\r\n        \"http://\" +\r\n        host +\r\n        \":3006/api/v1/Document/get?destinationName=\" +\r\n        filename[index][name] +\r\n        stringToappend +\r\n        \"&fileType=\" +\r\n        filetype;\r\n\r\n      return imageLocation;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  } else {\r\n    return (\r\n      \"http://\" +\r\n      host +\r\n      \":3006/api/v1/Document/get?destinationName=\" +\r\n      filename +\r\n      \"&fileType=\" +\r\n      filetype\r\n    );\r\n  }\r\n});\r\n\r\nconst groupBy = (data, groupby) => {\r\n  const groupBy = _.chain(data)\r\n    .groupBy(groupby)\r\n    .map(function(detail, key) {\r\n      return {\r\n        [groupby]: key,\r\n        groupDetail: detail\r\n      };\r\n    })\r\n    .value();\r\n  return groupBy;\r\n};\r\nconst arrayFirstRowToObject = (data, index) => {\r\n  index = index || 0;\r\n  if (data == null) {\r\n    return {};\r\n  } else if (data.length > 0 && data.length <= index) {\r\n    return data[index];\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getReport: async (req, res) => {\r\n    const input = req.query;\r\n    const _mysql = new algaehMysql();\r\n    try {\r\n      const _inputParam = JSON.parse(input.report);\r\n      _mysql\r\n        .executeQuery({\r\n          query:\r\n            \"SELECT report_name_for_header,report_name,report_query,report_input_series,data_manupulation,\\\r\n            report_header_file_name,report_footer_file_name from algaeh_d_reports where status='A' and report_name in (?);\\\r\n            select H.hospital_name,H.hospital_address,H.arabic_hospital_name, \\\r\n            O.organization_name,O.business_registration_number,O.legal_name,O.tax_number,O.address1,O.address2 ,\\\r\n            O.email,O.phone1 from hims_d_hospital H,hims_d_organization O \\\r\n            where O.hims_d_organization_id =H.organization_id and H.hims_d_hospital_id=?;\",\r\n          values: [_inputParam.reportName, req.userIdentity[\"hospital_id\"]],\r\n          printQuery: true\r\n        })\r\n        .then(data => {\r\n          _inputParam[\"hospital_id\"] = req.userIdentity[\"hospital_id\"];\r\n          _inputParam[\"crypto\"] = req.userIdentity;\r\n\r\n          console.log(\"input:\", _inputParam);\r\n          const _reportCount = data[0].length;\r\n          if (_reportCount > 0) {\r\n            let _reportOutput = [];\r\n            for (let r = 0; r < _reportCount; r++) {\r\n              const _data = data[0][r];\r\n\r\n              const _inputOrders = eval(_data.report_input_series);\r\n\r\n              let _value = [];\r\n              for (var i = 0; i < _inputOrders.length; i++) {\r\n                const _params = _.find(\r\n                  _inputParam.reportParams,\r\n                  f => f.name == _inputOrders[i]\r\n                );\r\n                if (_params != undefined) {\r\n                  _value.push(_params.value);\r\n                }\r\n              }\r\n\r\n              let queryObject = {\r\n                query: _data.report_query,\r\n                values: _value,\r\n                printQuery: true\r\n              };\r\n              if (_data.report_query == null || _data.report_query == \"\") {\r\n                queryObject = {\r\n                  query: \"select 1\",\r\n                  printQuery: true\r\n                };\r\n              }\r\n\r\n              _mysql\r\n                .executeQuery(queryObject)\r\n                .then(result => {\r\n                  //console.log(\"result\", result);\r\n                  const _path = path.join(\r\n                    process.cwd(),\r\n                    \"algaeh_report_tool/templates/Output\",\r\n                    _data.report_name + moment().format(\"YYYYMMDDHHmmss\")\r\n                  );\r\n                  const _reportType = \"PDF\";\r\n                  const _supportingJS = path.join(\r\n                    process.cwd(),\r\n                    \"algaeh_report_tool/templates\",\r\n                    `${_data.report_name}.js`\r\n                  );\r\n                  const _header = req.headers;\r\n\r\n                  const startGenerate = async () => {\r\n                    const _outPath = _path + \".pdf\";\r\n                    _reportOutput.push(_outPath);\r\n                    const browser = await puppeteer.launch(chromePath);\r\n                    const page = await browser.newPage();\r\n                    const _pdfTemplating = {};\r\n                    if (\r\n                      _data.report_header_file_name != null &&\r\n                      _data.report_header_file_name != \"\"\r\n                    ) {\r\n                      const _header = await compile(\r\n                        _data.report_header_file_name,\r\n                        {\r\n                          reqHeader: _header,\r\n                          ...data[1][0],\r\n                          user_name: req.userIdentity[\"username\"],\r\n                          report_name_for_header: _data.report_name_for_header\r\n                        }\r\n                      );\r\n                      _pdfTemplating[\"headerTemplate\"] = _header;\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        top: \"150px\"\r\n                      };\r\n                    }\r\n                    if (\r\n                      _data.report_footer_file_name != null &&\r\n                      _data.report_footer_file_name != \"\"\r\n                    ) {\r\n                      _pdfTemplating[\"footerTemplate\"] = await compile(\r\n                        _data.report_footer_file_name,\r\n                        {\r\n                          reqHeader: _header,\r\n                          ...data[1][0],\r\n                          report_name_for_header: _data.report_name_for_header\r\n                        }\r\n                      );\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        ..._pdfTemplating[\"margin\"],\r\n                        bottom: \"70px\"\r\n                      };\r\n                    } else {\r\n                      _pdfTemplating[\r\n                        \"footerTemplate\"\r\n                      ] = `<style> .pdffooter { font-size: 8px;\r\n                        font-family: Arial, Helvetica, sans-serif; font-weight: bold; width: 100%; text-align: center; color: grey; padding-left: 10px; }\r\n                      .showreportname{float:left;padding-left:5px;font-size: 08px;}\r\n                      .showcompay{float:right;padding-right:5px;font-size: 08px;}\r\n                      </style>\r\n                      <div class=\"pdffooter\">\r\n                      <span class=\"showreportname\">${\r\n                        _data.report_name_for_header\r\n                      }</span>\r\n                      <span>Page </span>\r\n                      <span class=\"pageNumber\"></span> / <span class=\"totalPages\"></span>\r\n                      <span class=\"showcompay\">Powered by Algaeh Techonologies.</span>\r\n                    </div>`;\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        ..._pdfTemplating[\"margin\"],\r\n                        bottom: \"50px\"\r\n                      };\r\n                    }\r\n\r\n                    await page.setContent(\r\n                      await compile(_data.report_name, {\r\n                        ...result,\r\n                        reqHeader: _header\r\n                      })\r\n                    );\r\n                    await page.emulateMedia(\"screen\");\r\n                    const pageOrentation =\r\n                      _inputParam.pageOrentation == null\r\n                        ? {}\r\n                        : _inputParam.pageOrentation == \"landscape\"\r\n                        ? { landscape: true }\r\n                        : {};\r\n\r\n                    const pageSize =\r\n                      _inputParam.pageSize == null\r\n                        ? { format: \"A4\" }\r\n                        : { format: _inputParam.pageSize };\r\n                    await page.pdf({\r\n                      path: _outPath,\r\n                      ...pageSize,\r\n                      ...pageOrentation,\r\n                      printBackground: true,\r\n                      displayHeaderFooter: true,\r\n                      ..._pdfTemplating\r\n                      // headerTemplate:\r\n                      //   \"<h1>H1 tag</h1><h2>H2 tag</h2><hr style='border-bottom: 2px solid #8c8b8b;' />\"\r\n                    });\r\n                    await browser.close();\r\n\r\n                    if (r == _reportCount - 1) {\r\n                      let _outfileName =\r\n                        \"merdge_\" + moment().format(\"YYYYMMDDHHmmss\") + \".pdf\";\r\n                      let _rOut = path.join(\r\n                        process.cwd(),\r\n                        \"algaeh_report_tool/templates/Output\",\r\n                        _outfileName\r\n                      );\r\n\r\n                      if (_reportOutput.length > 1) {\r\n                        _mysql.releaseConnection();\r\n                        merge(_reportOutput, _rOut, error => {\r\n                          if (error) {\r\n                            res\r\n                              .status(400)\r\n                              .send({ error: JSON.stringify(error) });\r\n                          } else {\r\n                            fs.exists(_rOut, exists => {\r\n                              if (exists) {\r\n                                res.writeHead(200, {\r\n                                  \"content-type\": \"application/pdf\",\r\n                                  \"content-disposition\":\r\n                                    \"attachment;filename=\" + _outfileName\r\n                                });\r\n                                const _fs = fs.createReadStream(_rOut);\r\n                                _fs.on(\"end\", () => {\r\n                                  fs.unlink(_rOut);\r\n                                  for (\r\n                                    let f = 0;\r\n                                    f < _reportOutput.length;\r\n                                    f++\r\n                                  ) {\r\n                                    fs.unlink(_reportOutput[f]);\r\n                                  }\r\n                                });\r\n                                _fs.pipe(res);\r\n                              } else {\r\n                                res\r\n                                  .status(400)\r\n                                  .send({ error: \"ERROR File does not exist\" });\r\n                              }\r\n                            });\r\n                          }\r\n                        });\r\n                      } else {\r\n                        fs.exists(_reportOutput[0], exists => {\r\n                          if (exists) {\r\n                            res.writeHead(200, {\r\n                              \"content-type\": \"application/pdf\",\r\n                              \"content-disposition\":\r\n                                \"attachment;filename=\" + _outfileName\r\n                            });\r\n                            const _fs = fs.createReadStream(_reportOutput[0]);\r\n                            _fs.on(\"end\", () => {\r\n                              fs.unlink(_reportOutput[0]);\r\n                            });\r\n                            _fs.pipe(res);\r\n                          } else {\r\n                            res\r\n                              .status(400)\r\n                              .send({ error: \"ERROR File does not exist\" });\r\n                          }\r\n                        });\r\n                      }\r\n                    }\r\n                  };\r\n\r\n                  if (fs.existsSync(_supportingJS)) {\r\n                    const { executePDF } = require(_supportingJS);\r\n                    executePDF({\r\n                      mysql: _mysql,\r\n                      inputs: _inputOrders,\r\n                      args: _inputParam,\r\n                      loadash: _,\r\n                      moment: moment,\r\n                      mainData: data[1],\r\n                      result: result\r\n                    })\r\n                      .then(resultReq => {\r\n                        result = resultReq;\r\n                        startGenerate();\r\n                      })\r\n                      .catch(error => {\r\n                        console.log(\"Error\", error);\r\n                      });\r\n                  } else {\r\n                    if (\r\n                      _data.data_manupulation != null &&\r\n                      _data.data_manupulation != \"\"\r\n                    ) {\r\n                      const data_string = \"`\" + _data.data_manupulation + \"`\";\r\n                      const _resu = eval(data_string);\r\n                      result = JSON.parse(_resu);\r\n                    }\r\n                    startGenerate();\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  _mysql.releaseConnection();\r\n                  console.log(\"Error In query execution : \", error);\r\n                  res.status(400).send({ error: JSON.stringify(error) });\r\n                });\r\n            }\r\n          } else {\r\n            res.status(400).send({ error: \"No such report exists\" });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          _mysql.releaseConnection();\r\n          console.log(\r\n            \"Error in report table query execution : \",\r\n            JSON.stringify(error)\r\n          );\r\n          res.status(400).send({ error: JSON.stringify(error) });\r\n        });\r\n    } catch (e) {\r\n      _mysql.releaseConnection();\r\n      console.log(\"Error in try catch : \", JSON.stringify(error));\r\n      res.status(400).send({ error: JSON.stringify(e) });\r\n    }\r\n  },\r\n  getReportMultiPrint: async (req, res, next) => {\r\n    const input = req.query;\r\n\r\n    const _mysql = new algaehMysql();\r\n    try {\r\n      const _inputParam = JSON.parse(input.report);\r\n\r\n      _mysql\r\n        .executeQuery({\r\n          query:\r\n            \"SELECT report_name_for_header,report_name,report_query,report_input_series,data_manupulation,\\\r\n            report_header_file_name,report_footer_file_name from algaeh_d_reports where status='A' and report_name in (?);\\\r\n            select H.hospital_name,H.hospital_address,H.arabic_hospital_name, \\\r\n            O.organization_name,O.business_registration_number,O.legal_name,O.tax_number,O.address1,O.address2 ,\\\r\n            O.email,O.phone1 from hims_d_hospital H,hims_d_organization O \\\r\n            where O.hims_d_organization_id =H.organization_id and H.hims_d_hospital_id=?;\",\r\n          values: [_inputParam.reportName, req.userIdentity[\"x-branch\"]],\r\n          printQuery: true\r\n        })\r\n        .then(data => {\r\n          const templates = data[0];\r\n          let subReportCollection = [];\r\n          const inputParameters = _inputParam.reportParams;\r\n          let promises = [];\r\n          for (let p = 0; p < inputParameters.length; p++) {\r\n            const inputData = inputParameters[p];\r\n            let reportSequence = _inputParam.reportName;\r\n            for (let i = 0; i < reportSequence.length; i++) {\r\n              promises.push(\r\n                new Promise((resolve, reject) => {\r\n                  const resourceTemplate = _.find(\r\n                    templates,\r\n                    f => f.report_name == reportSequence[i]\r\n                  );\r\n                  const inputOrders = eval(\r\n                    resourceTemplate.report_input_series\r\n                  );\r\n                  let _value = [];\r\n                  for (var ip = 0; ip < inputOrders.length; ip++) {\r\n                    const _params = _.find(\r\n                      inputData,\r\n                      f => f.name == inputOrders[ip]\r\n                    );\r\n                    if (_params != undefined) {\r\n                      _value.push(_params.value);\r\n                    }\r\n                  }\r\n                  const _myquery = _mysql.mysqlQueryFormat(\r\n                    resourceTemplate.report_query,\r\n                    _value\r\n                  );\r\n                  _mysql\r\n                    .executeQuery({\r\n                      query: _myquery,\r\n                      printQuery: true\r\n                    })\r\n                    .then(result => {\r\n                      const _path = path.join(\r\n                        process.cwd(),\r\n                        \"algaeh_report_tool/templates/Output\",\r\n                        resourceTemplate.report_name +\r\n                          moment().format(\"YYYYMMDDHHmmss\") +\r\n                          \"_\" +\r\n                          i +\r\n                          \"_\" +\r\n                          p\r\n                      );\r\n                      const _outPath = _path + \".pdf\";\r\n                      subReportCollection.push(_outPath);\r\n                      const startGenerate = async () => {\r\n                        const browser = await puppeteer.launch(chromePath);\r\n                        const page = await browser.newPage();\r\n                        const _pdfTemplating = {};\r\n                        if (\r\n                          resourceTemplate.report_header_file_name != null &&\r\n                          resourceTemplate.report_header_file_name != \"\"\r\n                        ) {\r\n                          const _header = await compile(\r\n                            resourceTemplate.report_header_file_name,\r\n                            {\r\n                              ...data[1][0],\r\n                              reqHeader: req.headers,\r\n                              user_name: req.userIdentity[\"username\"],\r\n                              report_name_for_header:\r\n                                resourceTemplate.report_name_for_header\r\n                            }\r\n                          );\r\n                          _pdfTemplating[\"headerTemplate\"] = _header;\r\n                          _pdfTemplating[\"margin\"] = {\r\n                            top: \"140px\"\r\n                          };\r\n                        }\r\n                        if (\r\n                          resourceTemplate.report_footer_file_name != null &&\r\n                          resourceTemplate.report_footer_file_name != \"\"\r\n                        ) {\r\n                          _pdfTemplating[\"footerTemplate\"] = await compile(\r\n                            resourceTemplate.report_footer_file_name,\r\n                            {\r\n                              ...data[1][0],\r\n                              reqHeader: req.headers,\r\n                              report_name_for_header:\r\n                                resourceTemplate.report_name_for_header\r\n                            }\r\n                          );\r\n                          _pdfTemplating[\"margin\"] = {\r\n                            ..._pdfTemplating[\"margin\"],\r\n                            bottom: \"70px\"\r\n                          };\r\n                        } else {\r\n                          _pdfTemplating[\r\n                            \"footerTemplate\"\r\n                          ] = `<style> .pdffooter { font-size: 8px;\r\n                        font-family: Arial, Helvetica, sans-serif; font-weight: bold; width: 100%; text-align: center; color: grey; padding-left: 10px; }\r\n                      .showreportname{float:left;padding-left:5px;font-size: 08px;}\r\n                      .showcompay{float:right;padding-right:5px;font-size: 08px;}\r\n                      </style>\r\n                      <div class=\"pdffooter\">\r\n                      <span class=\"showreportname\">${\r\n                        resourceTemplate.report_name_for_header\r\n                      }</span>\r\n                      <span>Page </span>\r\n                      <span class=\"pageNumber\"></span> / <span class=\"totalPages\"></span>\r\n                      <span class=\"showcompay\">Powered by Algaeh Technologies.</span>\r\n                    </div>`;\r\n                          _pdfTemplating[\"margin\"] = {\r\n                            ..._pdfTemplating[\"margin\"],\r\n                            bottom: \"50px\"\r\n                          };\r\n                        }\r\n\r\n                        await page.setContent(\r\n                          await compile(resourceTemplate.report_name, {\r\n                            ...result,\r\n                            reqHeader: req.headers\r\n                          })\r\n                        );\r\n                        await page.emulateMedia(\"screen\");\r\n\r\n                        const pageOrentation =\r\n                          _inputParam.pageOrentation == null\r\n                            ? {}\r\n                            : _inputParam.pageOrentation == \"landscape\"\r\n                            ? { landscape: true }\r\n                            : {};\r\n                        const pageSize =\r\n                          _inputParam.pageSize == null\r\n                            ? { format: \"A4\" }\r\n                            : { format: _inputParam.pageSize };\r\n                        await page.pdf({\r\n                          path: _outPath,\r\n                          ...pageSize,\r\n                          ...pageOrentation,\r\n                          printBackground: true,\r\n                          displayHeaderFooter: true,\r\n                          ..._pdfTemplating\r\n                        });\r\n                        await browser.close();\r\n                        resolve();\r\n                      };\r\n\r\n                      const _supportingJS = path.join(\r\n                        process.cwd(),\r\n                        \"algaeh_report_tool/templates\",\r\n                        `${resourceTemplate.report_name}.js`\r\n                      );\r\n\r\n                      if (fs.existsSync(_supportingJS)) {\r\n                        const { executePDF } = require(_supportingJS);\r\n                        executePDF({\r\n                          mysql: _mysql,\r\n                          inputs: _inputParam,\r\n                          loadash: _,\r\n                          moment: moment,\r\n                          mainData: data[1],\r\n                          result: result\r\n                        })\r\n                          .then(resultReq => {\r\n                            result = resultReq;\r\n                            startGenerate();\r\n                          })\r\n                          .catch(error => {\r\n                            console.log(\"Error\", error);\r\n                          });\r\n                      } else {\r\n                        if (\r\n                          resourceTemplate.data_manupulation != null &&\r\n                          resourceTemplate.data_manupulation != \"\"\r\n                        ) {\r\n                          const data_string =\r\n                            \"`\" + resourceTemplate.data_manupulation + \"`\";\r\n                          const _resu = eval(data_string);\r\n                          result = JSON.parse(_resu);\r\n                        }\r\n                        startGenerate();\r\n                      }\r\n                    })\r\n                    .catch(error => {\r\n                      console.error(\r\n                        \"Error Report Name\",\r\n                        resourceTemplate.report_name\r\n                      );\r\n                      console.error(\"Error Query\", _myquery);\r\n                      console.error();\r\n                      reject(error);\r\n                    });\r\n                })\r\n              );\r\n            }\r\n          }\r\n\r\n          Promise.all(promises)\r\n            .then(() => {\r\n              _mysql.releaseConnection();\r\n              req.records = subReportCollection;\r\n              next();\r\n            })\r\n            .catch(error => {\r\n              _mysql.releaseConnection();\r\n\r\n              res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n              res.end(error);\r\n            });\r\n        })\r\n        .catch(error => {\r\n          _mysql.releaseConnection();\r\n          res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n          res.end(error);\r\n        });\r\n    } catch (e) {\r\n      _mysql.releaseConnection();\r\n      res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n      res.end(e);\r\n    }\r\n  },\r\n  merdgeTosingleReport: (req, res) => {\r\n    const getAllReports = req.records;\r\n    let _outfileName = \"merdge_\" + moment().format(\"YYYYMMDDHHmmss\") + \".pdf\";\r\n    let _rOut = path.join(\r\n      process.cwd(),\r\n      \"algaeh_report_tool/templates/Output\",\r\n      _outfileName\r\n    );\r\n\r\n    merge(getAllReports, _rOut, error => {\r\n      if (error) {\r\n        console.error(error);\r\n        res.writeHead(400, {\r\n          \"Content-Type\": \"text/plain\"\r\n        });\r\n        res.end(JSON.stringify(error));\r\n      } else {\r\n        fs.exists(_rOut, exists => {\r\n          if (exists) {\r\n            res.writeHead(200, {\r\n              \"content-type\": \"application/pdf\",\r\n              \"content-disposition\": \"attachment;filename=\" + _outfileName\r\n            });\r\n            const _fs = fs.createReadStream(_rOut);\r\n            _fs.on(\"end\", () => {\r\n              fs.unlink(_rOut);\r\n              for (let f = 0; f < getAllReports.length; f++) {\r\n                fs.unlink(getAllReports[f]);\r\n              }\r\n            });\r\n            _fs.pipe(res);\r\n          } else {\r\n            res.writeHead(400, {\r\n              \"Content-Type\": \"text/plain\"\r\n            });\r\n            res.end(\"ERROR File does not exist\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  },\r\n  getExcelReport: async (req, res) => {\r\n    const input = req.query;\r\n    let templatePath = path.join(\r\n      process.cwd(),\r\n      \"algaeh_report_tool/templates/Excel\"\r\n    );\r\n    const _inputParam = JSON.parse(input.report);\r\n    const { executeExcel } = require(path.join(\r\n      templatePath,\r\n      _inputParam.reportName + \".js\"\r\n    ));\r\n    const _mysql = new algaehMysql();\r\n    const _input = { hospital_id: req.userIdentity[\"x-branch\"] };\r\n    for (let i = 0; i < _inputParam.reportParams.length; i++) {\r\n      const _inp = _inputParam.reportParams[i];\r\n      _input[_inp.name] = _inp.value;\r\n    }\r\n    executeExcel({\r\n      mysql: _mysql,\r\n      inputs: _input,\r\n      loadash: _,\r\n      moment: moment\r\n    }).then(result => {\r\n      let excelOutput = path.join(\r\n        outputFolder,\r\n        \"out_\" + moment().format(\"YYYYMMDDHHmmss\") + \".xlsx\"\r\n      );\r\n      const fileNameExcel = _inputParam.reportName + \".xlsx\";\r\n\r\n      fs.readFile(path.join(templatePath, fileNameExcel), function(\r\n        error,\r\n        data\r\n      ) {\r\n        if (error) {\r\n          console.error(error);\r\n        } else {\r\n          var template = new XlsxTemplate(data);\r\n          if (result.copySheets != null && result.copySheets.length > 0) {\r\n            for (let c = 0; c < result.copySheets.length; c++) {\r\n              const shts = result.copySheets[c];\r\n              template.copySheet(shts.copySheetName, shts.newSheetName);\r\n            }\r\n          }\r\n\r\n          for (let s = 0; s < template.sheets.length; s++) {\r\n            template.substitute(\r\n              template.sheets[s][\"name\"],\r\n              result.data[template.sheets[s][\"name\"]]\r\n            );\r\n          }\r\n\r\n          var dataGenerated = template.generate();\r\n          fs.outputFileSync(excelOutput, dataGenerated, { encoding: \"binary\" });\r\n          res.writeHead(200, {\r\n            \"content-type\":\r\n              \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n            \"content-disposition\": \"attachment;filename=\" + fileNameExcel\r\n          });\r\n          const _fs = fs.createReadStream(excelOutput);\r\n          _fs.on(\"end\", () => {\r\n            fs.unlink(excelOutput);\r\n          });\r\n\r\n          _fs.pipe(res);\r\n        }\r\n      });\r\n    });\r\n\r\n    // let excelOutput = path.join(\r\n    //   outputFolder,\r\n    //   \"out_\" + moment().format(\"YYYYMMDDHHmmss\") + \".xlsx\"\r\n    // );\r\n    // let values = {\r\n    //   extractDate: new Date(),\r\n    //   dates: [\r\n    //     new Date(\"2013-06-01\"),\r\n    //     new Date(\"2013-06-02\"),\r\n    //     new Date(\"2013-06-03\")\r\n    //   ],\r\n    //   people: [\r\n    //     { name: \"John Smith\", age: 20 },\r\n    //     { name: \"Bob Johnson\", age: 22 }\r\n    //   ]\r\n    // };\r\n    // let values2 = {\r\n    //   extractDate: new Date(),\r\n    //   dates: [\r\n    //     new Date(\"2014-06-01\"),\r\n    //     new Date(\"2014-06-02\"),\r\n    //     new Date(\"2014-06-03\")\r\n    //   ],\r\n    //   people: [\r\n    //     { name: \"John1 Smith\", age: 21 },\r\n    //     { name: \"Bob1 Johnson\", age: 23 }\r\n    //   ]\r\n    // };\r\n    // const fileNameExcel = _inputParam.reportName + \".xlsx\";\r\n    //\r\n    // fs.readFile(path.join(templatePath, fileNameExcel), function(error, data) {\r\n    //   if (error) {\r\n    //     console.error(error);\r\n    //   } else {\r\n    //     var template = new XlsxTemplate(data);\r\n    //     var sheetNumber = 1;\r\n    //     template.copySheet(\"Sheet1\", \"Sheet2\");\r\n    //     template.substitute(sheetNumber, values);\r\n    //     template.substitute(\"Sheet2\", values2);\r\n    //     var data = template.generate();\r\n    //     fs.outputFileSync(excelOutput, data, { encoding: \"binary\" });\r\n    //   }\r\n    // });\r\n  },\r\n  getRawReport: async (req, res) => {\r\n    const input = req.query;\r\n    const _mysql = new algaehMysql();\r\n    try {\r\n      const _inputParam = JSON.parse(input.report);\r\n      _mysql\r\n        .executeQuery({\r\n          query:\r\n            \"SELECT report_name_for_header,report_name,report_query,report_input_series,data_manupulation,\\\r\n            report_header_file_name,report_footer_file_name from algaeh_d_reports where status='A' and report_name in (?);\\\r\n            select H.hospital_name,H.hospital_address,H.arabic_hospital_name, \\\r\n            O.organization_name,O.business_registration_number,O.legal_name,O.tax_number,O.address1,O.address2 ,\\\r\n            O.email,O.phone1 from hims_d_hospital H,hims_d_organization O \\\r\n            where O.hims_d_organization_id =H.organization_id and H.hims_d_hospital_id=?;\",\r\n          values: [_inputParam.reportName, req.userIdentity[\"hospital_id\"]],\r\n          printQuery: true\r\n        })\r\n        .then(data => {\r\n          _inputParam[\"hospital_id\"] = req.userIdentity[\"hospital_id\"];\r\n          const _reportCount = data[0].length;\r\n          if (_reportCount > 0) {\r\n            let _reportOutput = [];\r\n            for (let r = 0; r < _reportCount; r++) {\r\n              const _data = data[0][r];\r\n\r\n              const _inputOrders = eval(_data.report_input_series);\r\n\r\n              let _value = [];\r\n              for (var i = 0; i < _inputOrders.length; i++) {\r\n                const _params = _.find(\r\n                  _inputParam.reportParams,\r\n                  f => f.name == _inputOrders[i]\r\n                );\r\n                if (_params != undefined) {\r\n                  _value.push(_params.value);\r\n                }\r\n              }\r\n              let queryObject = {\r\n                query: _data.report_query,\r\n                values: _value,\r\n                printQuery: true\r\n              };\r\n              if (_data.report_query == null || _data.report_query == \"\") {\r\n                queryObject = {\r\n                  query: \"select 1\",\r\n                  printQuery: true\r\n                };\r\n              }\r\n              _mysql\r\n                .executeQuery(queryObject)\r\n                .then(result => {\r\n                  if (result.legth == 0) {\r\n                    res.writeHead(400, {\r\n                      \"content-type\": \"text/plain\"\r\n                    });\r\n                    res.write(\"No record\");\r\n                    return;\r\n                  }\r\n\r\n                  const _supportingJS = path.join(\r\n                    process.cwd(),\r\n                    \"algaeh_report_tool/templates\",\r\n                    `${_data.report_name}.js`\r\n                  );\r\n                  const _header = req.headers;\r\n\r\n                  const startGenerate = async () => {\r\n                    const _pdfTemplating = {};\r\n                    if (\r\n                      _data.report_header_file_name != null &&\r\n                      _data.report_header_file_name != \"\"\r\n                    ) {\r\n                      const _header = await compile(\r\n                        _data.report_header_file_name,\r\n                        {\r\n                          reqHeader: _header,\r\n                          ...data[1][0],\r\n                          user_name: req.userIdentity[\"username\"],\r\n                          report_name_for_header: _data.report_name_for_header\r\n                        }\r\n                      );\r\n                      _pdfTemplating[\"headerTemplate\"] = _header;\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        top: \"150px\"\r\n                      };\r\n                    }\r\n                    if (\r\n                      _data.report_footer_file_name != null &&\r\n                      _data.report_footer_file_name != \"\"\r\n                    ) {\r\n                      _pdfTemplating[\"footerTemplate\"] = await compile(\r\n                        _data.report_footer_file_name,\r\n                        {\r\n                          reqHeader: _header,\r\n                          ...data[1][0],\r\n                          report_name_for_header: _data.report_name_for_header\r\n                        }\r\n                      );\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        ..._pdfTemplating[\"margin\"],\r\n                        bottom: \"70px\"\r\n                      };\r\n                    } else {\r\n                      _pdfTemplating[\r\n                        \"footerTemplate\"\r\n                      ] = `<style> .pdffooter { font-size: 8px;\r\n                    font-family: Arial, Helvetica, sans-serif; font-weight: bold; width: 100%; text-align: center; color: grey; padding-left: 10px; }\r\n                    .showreportname{float:left;padding-left:5px;font-size: 08px;}\r\n                    .showcompay{float:right;padding-right:5px;font-size: 08px;}\r\n                    </style>\r\n                    <div class=\"pdffooter\">\r\n                    <span class=\"showreportname\">${\r\n                      _data.report_name_for_header\r\n                    }</span>\r\n                    <span>Page </span>\r\n                    <span class=\"pageNumber\"></span> / <span class=\"totalPages\"></span>\r\n                    <span class=\"showcompay\">Powered by Algaeh Techonologies.</span>\r\n                    </div>`;\r\n                      _pdfTemplating[\"margin\"] = {\r\n                        ..._pdfTemplating[\"margin\"],\r\n                        bottom: \"50px\"\r\n                      };\r\n                    }\r\n\r\n                    const reportRaw = await compile(_data.report_name, {\r\n                      ...result,\r\n                      reqHeader: _header\r\n                    });\r\n                    if (reportRaw != \"\") {\r\n                      res.writeHead(200, {\r\n                        \"content-type\": \"text/html\"\r\n                      });\r\n                      res.write(\r\n                        reportRaw + \"~@\" + JSON.stringify(_pdfTemplating)\r\n                      );\r\n                      res.end();\r\n                    } else {\r\n                      res.writeHead(400, {\r\n                        \"content-type\": \"text/plain\"\r\n                      });\r\n                      res.write(\"No record\");\r\n                      res.end();\r\n                      return;\r\n                    }\r\n                  };\r\n\r\n                  if (fs.existsSync(_supportingJS)) {\r\n                    const { executePDF } = require(_supportingJS);\r\n                    executePDF({\r\n                      mysql: _mysql,\r\n                      inputs: _inputOrders,\r\n                      args: _inputParam,\r\n                      loadash: _,\r\n                      moment: moment,\r\n                      mainData: data[1],\r\n                      result: result\r\n                    })\r\n                      .then(resultReq => {\r\n                        result = resultReq;\r\n                        startGenerate();\r\n                      })\r\n                      .catch(error => {\r\n                        console.log(\"Error\", error);\r\n                      });\r\n                  } else {\r\n                    if (\r\n                      _data.data_manupulation != null &&\r\n                      _data.data_manupulation != \"\"\r\n                    ) {\r\n                      const data_string = \"`\" + _data.data_manupulation + \"`\";\r\n                      const _resu = eval(data_string);\r\n                      result = JSON.parse(_resu);\r\n                    }\r\n                    startGenerate();\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  _mysql.releaseConnection();\r\n                  res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n                  res.write(error);\r\n                  res.end();\r\n                });\r\n            }\r\n          } else {\r\n            res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n            res.write(new Error(\"No such report exists\"));\r\n            res.end();\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Error Showing :\", error);\r\n          _mysql.releaseConnection();\r\n          res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n          res.write(error);\r\n          res.end();\r\n        });\r\n    } catch (e) {\r\n      _mysql.releaseConnection();\r\n      res.writeHead(400, { \"Content-Type\": \"text/plain\" });\r\n      res.write(e);\r\n      res.end();\r\n    }\r\n  }\r\n};\r\n"]}