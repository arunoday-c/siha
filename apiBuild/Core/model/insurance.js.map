{"version":3,"sources":["../../../src/model/insurance.js"],"names":["getPatientInsurance","req","res","next","patientInsuranceModel","patient_id","patient_visit_id","db","httpStatus","dataBaseNotInitilizedError","getConnection","error","connection","query","result","records","e","addPatientInsuranceData","options","body","input","hims_f_patient_insurance_mapping_id","primary_insurance_provider_id","primary_sub_id","primary_network_id","primary_inc_card_path","primary_policy_num","primary_effective_start_date","primary_effective_end_date","primary_card_number","secondary_insurance_provider_id","secondary_sub_id","secondary_network_id","secondary_effective_start_date","secondary_effective_end_date","secondary_card_number","secondary_inc_card_path","secondary_policy_num","created_by","userIdentity","algaeh_d_app_user_id","updated_by","Date","resdata","rollback","onFailure","onSuccess","addPatientInsurance","patientInsuranceMappingModel","getListOfInsuranceProvider","insuranceWhereCondition","hims_d_insurance_provider_id","where","condition","values","getSubInsurance","insurance_sub_code","addInsuranceProvider","insuranceProviderModel","insurance_provider_code","insurance_provider_name","deductible_proc","deductible_lab","co_payment","insurance_type","package_claim","hospital_id","credit_period","insurance_limit","payment_type","insurance_remarks","cpt_mandate","child_id","currency","preapp_valid_days","claim_submit_days","lab_result_check","resubmit_all","ins_rej_per","effective_start_date","effective_end_date","inputparam","arabic_provider_name","payer_id","company_service_price_type","updateInsuranceProvider","addSubInsuranceProvider","insuranceSubProviderModel","insurtColumns","join","sampleInputObject","arrayObj","newFieldToInsert","updateSubInsuranceProvider","insurance_sub_name","arabic_sub_name","insurance_provider_id","card_format","transaction_number","hims_d_insurance_sub_id","addNetwork","NetworkModel","hims_d_insurance_network_id","network_type","insurance_sub_id","sub_insurance_status","record_status","NetworkOfficeMaster","NetworkOfficeModel","hims_d_insurance_network_office_id","network_id","deductible","deductable_type","min_value","max_value","copay_consultation","for_alllab","copay_percent","deductible_rad","for_allrad","copay_percent_rad","copay_percent_trt","copay_percent_dental","copay_medicine","insur_network_limit","deductible_trt","deductible_dental","deductible_medicine","lab_min","lab_max","rad_min","rad_max","trt_max","trt_min","dental_min","dental_max","medicine_min","medicine_max","invoice_max_liability","for_alltrt","for_alldental","for_allmedicine","invoice_max_deduct","price_from","employer","policy_number","follow_up","preapp_limit","deductible_ip","copay_ip","ip_min","ip_max","for_allip","consult_limit","preapp_limit_from","copay_maternity","maternity_min","maternity_max","copay_optical","optical_min","optical_max","copay_diagnostic","diagnostic_min","diagnostic_max","addPlanAndPolicy","beginTransaction","flag","jsonArr","i","obj","created_date","updated_date","String","format","length","result_service_network","result_service_Ins","console","log","resultoff","commit","deleteSubInsurance","getPriceList","priselistWhereCondition","insurance_id","services_id","getNetworkAndNetworkOfficRecords","insuranceProviderId","updatePriceList","services_insurance","hims_d_services_insurance_id","insurance_service_name","cpt_code","gross_amt","corporate_discount_amt","net_amount","pre_approval","covered","inputParam","updateNetworkAndNetworkOffice","networkAndNetworkOfficeModel","arabic_network_type","results","updatePriceListBulk","corporate_discount_percent","strQuery","parameters","update","discountType","corporate_discount","deleteNetworkAndNetworkOfficRecords","getInsuranceProviders","selectWhere","getSubInsuraces","module","exports"],"mappings":"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","file":"insurance.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport {\n  whereCondition,\n  releaseDBConnection,\n  jsonArrayToObject\n} from \"../utils\";\nimport moment from \"moment\";\n\nimport httpStatus from \"../utils/httpStatus\";\n\nimport { debugFunction, debugLog } from \"../utils/logging\";\n\n//created by:irfan,to get patient insurence details by patient id\nlet getPatientInsurance = (req, res, next) => {\n  let patientInsuranceModel = {\n    patient_id: null,\n    patient_visit_id: null\n  };\n\n  debugFunction(\"getPatientInsurance\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      extend(patientInsuranceModel, req.query);\n\n      if (req.query.patient_visit_id != null) {\n        connection.query(\n          \"SELECT A.* ,B.* FROM \\\n        (select mIns.patient_id as pri_patient_id, mIns.patient_visit_id as pri_patient_visit_id,\\\n         mIns.primary_insurance_provider_id as insurance_provider_id,\\\n         Ins.insurance_provider_name as insurance_provider_name,\\\n        mIns.primary_sub_id as sub_insurance_provider_id ,\\\n         sIns.insurance_sub_name as sub_insurance_provider_name,\\\n        mIns.primary_network_id as network_id, \\\n         net.network_type,netoff.policy_number,netoff.hims_d_insurance_network_office_id,\\\n         mIns.primary_card_number as card_number,\\\n        mIns.primary_inc_card_path as insurance_card_path,\\\n        mIns.primary_effective_start_date as effective_start_date,mIns.primary_effective_end_date as effective_end_date\\\n        from ((((hims_d_insurance_provider Ins \\\n        INNER JOIN  hims_m_patient_insurance_mapping mIns ON mIns.primary_insurance_provider_id=Ins.hims_d_insurance_provider_id)\\\n        INNER JOIN  hims_d_insurance_sub sIns ON mIns.primary_sub_id= sIns.hims_d_insurance_sub_id) \\\n        INNER JOIN hims_d_insurance_network net ON mIns.primary_network_id=net.hims_d_insurance_network_id)\\\n        INNER JOIN hims_d_insurance_network_office netoff ON mIns.primary_policy_num=netoff.policy_number) where mIns.patient_id=?  and mIns.patient_visit_id =?\\\n        GROUP BY mIns.primary_policy_num)  AS A\\\n        left join\\\n        (select  mIns.patient_id as sec_patient_id , mIns.patient_visit_id  as sec_patient_visit_id, mIns.secondary_insurance_provider_id , \\\n         Ins.insurance_provider_name as secondary_insurance_provider_name,\\\n         mIns.secondary_sub_id as secondary_sub_insurance_provider_id,\\\n         sIns.insurance_sub_name as secondary_sub_insurance_provider_name, \\\n         mIns.secondary_network_id ,\\\n         net.network_type as secondary_network_type,\\\n         netoff.policy_number as secondary_policy_number,netoff.hims_d_insurance_network_office_id as secondary_network_office_id ,mIns.secondary_card_number,mIns.secondary_inc_card_path,\\\n        mIns.secondary_effective_start_date,mIns.secondary_effective_end_date from ((((\\\n        hims_d_insurance_provider Ins \\\n        INNER JOIN  hims_m_patient_insurance_mapping mIns ON mIns.secondary_insurance_provider_id=Ins.hims_d_insurance_provider_id)\\\n         INNER JOIN  hims_d_insurance_sub sIns ON mIns.secondary_sub_id= sIns.hims_d_insurance_sub_id) \\\n         INNER JOIN hims_d_insurance_network net ON mIns.secondary_network_id=net.hims_d_insurance_network_id)\\\n         INNER JOIN hims_d_insurance_network_office netoff ON mIns.secondary_policy_num=netoff.policy_number) where mIns.patient_id=? and mIns.patient_visit_id =?\\\n         GROUP BY mIns.secondary_policy_num) AS B  on A.pri_patient_id=B.sec_patient_id ;\",\n          [\n            patientInsuranceModel.patient_id,\n            patientInsuranceModel.patient_visit_id,\n            patientInsuranceModel.patient_id,\n            patientInsuranceModel.patient_visit_id\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        connection.query(\n          \"(select  mIns.patient_id,mIns.primary_insurance_provider_id as insurance_provider_id,Ins.insurance_provider_name,\\\n          mIns.primary_sub_id as sub_insurance_provider_id, sIns.insurance_sub_name as sub_insurance_provider_name,\\\n          mIns.primary_network_id as network_id,  net.network_type,netoff.policy_number,netoff.hims_d_insurance_network_office_id,mIns.primary_card_number as card_number,\\\n          mIns.primary_inc_card_path as insurance_card_path,\\\n         mIns.primary_effective_start_date as effective_start_date,mIns.primary_effective_end_date as effective_end_date  from ((((\\\n          hims_d_insurance_provider Ins \\\n          INNER JOIN  hims_m_patient_insurance_mapping mIns ON mIns.primary_insurance_provider_id=Ins.hims_d_insurance_provider_id)\\\n           INNER JOIN  hims_d_insurance_sub sIns ON mIns.primary_sub_id= sIns.hims_d_insurance_sub_id) \\\n           INNER JOIN hims_d_insurance_network net ON mIns.primary_network_id=net.hims_d_insurance_network_id)\\\n           INNER JOIN hims_d_insurance_network_office netoff ON mIns.primary_policy_num=netoff.policy_number) where mIns.patient_id=?\\\n           GROUP BY mIns.primary_policy_num)\\\n           union\\\n           (select  mIns.patient_id,mIns.secondary_insurance_provider_id , Ins.insurance_provider_name,\\\n            mIns.secondary_sub_id,sIns.insurance_sub_name, \\\n            mIns.secondary_network_id, net.network_type,netoff.policy_number,netoff.hims_d_insurance_network_office_id as\\\n             secondary_network_office_id,mIns.secondary_card_number,mIns.secondary_inc_card_path,\\\n           mIns.secondary_effective_start_date,mIns.secondary_effective_end_date from ((((\\\n          hims_d_insurance_provider Ins \\\n          INNER JOIN  hims_m_patient_insurance_mapping mIns ON mIns.secondary_insurance_provider_id=Ins.hims_d_insurance_provider_id)\\\n           INNER JOIN  hims_d_insurance_sub sIns ON mIns.secondary_sub_id= sIns.hims_d_insurance_sub_id) \\\n           INNER JOIN hims_d_insurance_network net ON mIns.secondary_network_id=net.hims_d_insurance_network_id)\\\n           INNER JOIN hims_d_insurance_network_office netoff ON mIns.secondary_policy_num=netoff.policy_number) where mIns.patient_id=?\\\n           GROUP BY mIns.secondary_policy_num);\",\n\n          [patientInsuranceModel.patient_id, patientInsuranceModel.patient_id],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//Addded by noor code modification\nlet addPatientInsuranceData = (req, res, next) => {\n  try {\n    let db = req.options == null ? req.db : req.options.db;\n    debugLog(\"Body: \", req.body);\n\n    // let x = req.db;\n    // let y = req.options;\n    // debugLog(\"reg DB\", x);\n    // debugLog(\"reg Options\", y);\n    // debugLog(\"DB\", JSON.stringify(db));\n    let input = extend(\n      {\n        hims_f_patient_insurance_mapping_id: null,\n        patient_id: null,\n        patient_visit_id: null,\n        primary_insurance_provider_id: null,\n        primary_sub_id: null,\n        primary_network_id: null,\n        primary_inc_card_path: null,\n        primary_policy_num: null,\n        primary_effective_start_date: null,\n        primary_effective_end_date: null,\n        primary_card_number: null,\n        secondary_insurance_provider_id: null,\n        secondary_sub_id: null,\n        secondary_network_id: null,\n        secondary_effective_start_date: null,\n        secondary_effective_end_date: null,\n        secondary_card_number: null,\n        secondary_inc_card_path: null,\n        secondary_policy_num: null,\n        created_by: req.userIdentity.algaeh_d_app_user_id,\n\n        updated_by: req.userIdentity.algaeh_d_app_user_id\n      },\n      req.body\n    );\n\n    debugLog(\"Input: \", input);\n\n    db.query(\n      \"INSERT INTO hims_m_patient_insurance_mapping(`patient_id`,`patient_visit_id`,\\\n                `primary_insurance_provider_id`,`primary_sub_id`,`primary_network_id`,\\\n                `primary_inc_card_path`,`primary_policy_num`,`primary_effective_start_date`,\\\n                `primary_effective_end_date`,`primary_card_number`,`secondary_insurance_provider_id`,`secondary_sub_id`,\\\n                `secondary_network_id`,`secondary_effective_start_date`,`secondary_effective_end_date`,\\\n                `secondary_card_number`,`secondary_inc_card_path`,`secondary_policy_num`,`created_by`,`created_date`,`updated_by`,\\\n                `updated_date`)VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n      [\n        input.patient_id,\n        input.patient_visit_id,\n        input.primary_insurance_provider_id,\n        input.primary_sub_id,\n        input.primary_network_id,\n        input.primary_inc_card_path,\n        input.primary_policy_num,\n        input.primary_effective_start_date != null\n          ? new Date(input.primary_effective_start_date)\n          : input.primary_effective_start_date,\n        input.primary_effective_end_date != null\n          ? new Date(input.primary_effective_end_date)\n          : input.primary_effective_end_date,\n        input.primary_card_number,\n        input.secondary_insurance_provider_id,\n        input.secondary_sub_id,\n        input.secondary_network_id,\n        input.secondary_effective_start_date != null\n          ? new Date(input.secondary_effective_start_date)\n          : input.secondary_effective_start_date,\n        input.secondary_effective_end_date != null\n          ? new Date(input.secondary_effective_end_date)\n          : input.secondary_effective_end_date,\n\n        input.secondary_card_number,\n        input.secondary_inc_card_path,\n        input.secondary_policy_num,\n        input.created_by,\n        new Date(),\n        input.updated_by,\n        new Date()\n      ],\n      (error, resdata) => {\n        debugLog(\"Result: \", resdata);\n        if (error) {\n          if (req.options == null) {\n            db.rollback(() => {\n              releaseDBConnection(req.db, db);\n              next(error);\n            });\n          } else {\n            req.options.onFailure(error);\n          }\n        } else {\n          if (req.options == null) {\n            req.records = resdata;\n            releaseDBConnection(db, connection);\n            next();\n          } else {\n            req.options.onSuccess(resdata);\n          }\n        }\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//Code modification end\n\n//created by irfan: to add(save) patient insurence  details to DB\nlet addPatientInsurance = (connection, req, res, next) => {\n  let patientInsuranceMappingModel = {\n    hims_f_patient_insurance_mapping_id: null,\n    patient_id: null,\n    patient_visit_id: null,\n    primary_insurance_provider_id: null,\n    primary_sub_id: null,\n    primary_network_id: null,\n    primary_inc_card_path: null,\n    primary_policy_num: null,\n    primary_effective_start_date: null,\n    primary_effective_end_date: null,\n    primary_card_number: null,\n    secondary_insurance_provider_id: null,\n    secondary_sub_id: null,\n    secondary_network_id: null,\n    secondary_effective_start_date: null,\n    secondary_effective_end_date: null,\n    secondary_card_number: null,\n    secondary_inc_card_path: null,\n    secondary_policy_num: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n  debugFunction(\"addPatientInsurence\");\n  try {\n    if (connection == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    let input = extend(patientInsuranceMappingModel, req.body);\n\n    connection.query(\n      \"INSERT INTO hims_m_patient_insurance_mapping(`patient_id`,`patient_visit_id`,\\\n                `primary_insurance_provider_id`,`primary_sub_id`,`primary_network_id`,\\\n                `primary_inc_card_path`,`primary_policy_num`,`primary_effective_start_date`,\\\n                `primary_effective_end_date`,`primary_card_number`,`secondary_insurance_provider_id`,`secondary_sub_id`,\\\n                `secondary_network_id`,`secondary_effective_start_date`,`secondary_effective_end_date`,\\\n                `secondary_card_number`,`secondary_inc_card_path`,`secondary_policy_num`,`created_by`,`created_date`,`updated_by`,\\\n                `updated_date`)VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n      [\n        input.patient_id,\n        input.patient_visit_id,\n        input.primary_insurance_provider_id,\n        input.primary_sub_id,\n        input.primary_network_id,\n        input.primary_inc_card_path,\n        input.primary_policy_num,\n        input.primary_effective_start_date,\n        input.primary_effective_end_date,\n        input.primary_card_number,\n        input.secondary_insurance_provider_id,\n        input.secondary_sub_id,\n        input.secondary_network_id,\n        input.secondary_effective_start_date,\n        input.secondary_effective_end_date,\n        input.secondary_card_number,\n        input.secondary_inc_card_path,\n        input.secondary_policy_num,\n        input.created_by,\n        new Date(),\n        input.updated_by,\n        new Date()\n      ],\n      (error, resdata) => {\n        releaseDBConnection(db, connection);\n        if (error) {\n          next(error);\n        }\n        req.records = resdata;\n        next();\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:irfan,to get list of all insurence providers\nlet getListOfInsuranceProvider = (req, res, next) => {\n  let insuranceWhereCondition = {\n    hims_d_insurance_provider_id: \"ALL\"\n  };\n\n  debugFunction(\"getListOfInsurenceProvider\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      // extend(insuranceWhereCondition, req.query);\n      let where = whereCondition(extend(insuranceWhereCondition, req.query));\n\n      connection.query(\n        \"select * from hims_d_insurance_provider where record_status='A' AND\" +\n          where.condition +\n          \" order by hims_d_insurance_provider_id desc\",\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:nowshad,to get list of all sub insurence\nlet getSubInsurance = (req, res, next) => {\n  let insuranceWhereCondition = {\n    insurance_sub_code: \"ALL\"\n  };\n\n  debugFunction(\"getSubInsurance\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      // extend(insuranceWhereCondition, req.query);\n      let where = whereCondition(extend(insuranceWhereCondition, req.query));\n\n      connection.query(\n        \"select * from hims_d_insurance_sub where record_status='A' AND\" +\n          where.condition,\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add new insurence provider\nlet addInsuranceProvider = (req, res, next) => {\n  let insuranceProviderModel = {\n    hims_d_insurance_provider_id: null,\n    insurance_provider_code: null,\n    insurance_provider_name: null,\n    deductible_proc: null,\n    deductible_lab: null,\n    co_payment: null,\n    insurance_type: null,\n    package_claim: null,\n    hospital_id: null,\n    credit_period: null,\n    insurance_limit: null,\n    payment_type: null,\n    insurance_remarks: null,\n    cpt_mandate: null,\n    child_id: null,\n    currency: null,\n    preapp_valid_days: null,\n    claim_submit_days: null,\n    lab_result_check: null,\n    resubmit_all: null,\n    ins_rej_per: null,\n    effective_start_date: null,\n    effective_end_date: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(insuranceProviderModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO hims_d_insurance_provider(`insurance_provider_code`,`insurance_provider_name`,`arabic_provider_name`,\\\n        `deductible_proc`,`deductible_lab`,`co_payment`,`insurance_type`,`package_claim`,`hospital_id`, `payer_id`,\\\n        `credit_period`,`insurance_limit`,`payment_type`,`insurance_remarks`,`cpt_mandate`,`child_id`,`currency`,\\\n        `preapp_valid_days`,`claim_submit_days`,`lab_result_check`,`resubmit_all`,`company_service_price_type`,`ins_rej_per`,`effective_start_date`,\\\n        `effective_end_date`,`created_by`)\\\n        VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n        [\n          inputparam.insurance_provider_code,\n          inputparam.insurance_provider_name,\n          inputparam.arabic_provider_name,\n          inputparam.deductible_proc,\n          inputparam.deductible_lab,\n          inputparam.co_payment,\n          inputparam.insurance_type,\n          inputparam.package_claim,\n          inputparam.hospital_id,\n          inputparam.payer_id,\n          inputparam.credit_period,\n          inputparam.insurance_limit,\n          inputparam.payment_type,\n          inputparam.insurance_remarks,\n          inputparam.cpt_mandate,\n          inputparam.child_id,\n          inputparam.currency,\n          inputparam.preapp_valid_days,\n          inputparam.claim_submit_days,\n          inputparam.lab_result_check,\n          inputparam.resubmit_all,\n          inputparam.company_service_price_type,\n          inputparam.ins_rej_per,\n          inputparam.effective_start_date,\n          inputparam.effective_end_date,\n          inputparam.created_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to Update insurence provider\nlet updateInsuranceProvider = (req, res, next) => {\n  let insuranceProviderModel = {\n    hims_d_insurance_provider_id: null,\n    insurance_provider_code: null,\n    insurance_provider_name: null,\n    deductible_proc: null,\n    deductible_lab: null,\n    co_payment: null,\n    insurance_type: null,\n    package_claim: null,\n    hospital_id: null,\n    credit_period: null,\n    insurance_limit: null,\n    payment_type: null,\n    insurance_remarks: null,\n    cpt_mandate: null,\n    child_id: null,\n    currency: null,\n    preapp_valid_days: null,\n    claim_submit_days: null,\n    lab_result_check: null,\n    resubmit_all: null,\n    ins_rej_per: null,\n    effective_start_date: null,\n    effective_end_date: null,\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(insuranceProviderModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"update hims_d_insurance_provider SET `insurance_provider_code`=?,`insurance_provider_name`=?,`arabic_provider_name`=?,\\\n        `deductible_proc`=?,`deductible_lab`=?,`co_payment`=?,`insurance_type`=?,`package_claim`=?,`hospital_id`=?, `payer_id`=?,\\\n        `credit_period`=?,`insurance_limit`=?,`payment_type`=?,`insurance_remarks`=?,`cpt_mandate`=?,`child_id`=?,`currency`=?,\\\n        `preapp_valid_days`=?,`claim_submit_days`=?,`lab_result_check`=?,`resubmit_all`=?,`company_service_price_type`=?,`ins_rej_per`=?,`effective_start_date`=?,\\\n        `effective_end_date`=?,`updated_by`=? WHERE  `hims_d_insurance_provider_id`=? AND `record_status`='A'\",\n        [\n          inputparam.insurance_provider_code,\n          inputparam.insurance_provider_name,\n          inputparam.arabic_provider_name,\n          inputparam.deductible_proc,\n          inputparam.deductible_lab,\n          inputparam.co_payment,\n          inputparam.insurance_type,\n          inputparam.package_claim,\n          inputparam.hospital_id,\n          inputparam.payer_id,\n          inputparam.credit_period,\n          inputparam.insurance_limit,\n          inputparam.payment_type,\n          inputparam.insurance_remarks,\n          inputparam.cpt_mandate,\n          inputparam.child_id,\n          inputparam.currency,\n          inputparam.preapp_valid_days,\n          inputparam.claim_submit_days,\n          inputparam.lab_result_check,\n          inputparam.resubmit_all,\n          inputparam.company_service_price_type,\n          inputparam.ins_rej_per,\n          inputparam.effective_start_date,\n          inputparam.effective_end_date,\n          inputparam.updated_by,\n          inputparam.hims_d_insurance_provider_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add SUB-insurence provider\nlet addSubInsuranceProvider = (req, res, next) => {\n  let insuranceSubProviderModel = {};\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      // let inputObj = req.body;\n      debugLog(\"req.body: \", req.body);\n      const insurtColumns = [\n        \"insurance_sub_code\",\n        \"insurance_sub_name\",\n        \"arabic_sub_name\",\n        \"insurance_provider_id\",\n        \"card_format\",\n        \"transaction_number\",\n        \"effective_start_date\",\n        \"effective_end_date\",\n        \"created_by\"\n      ];\n\n      debugLog(\"Test: \", req.body);\n      connection.query(\n        \"INSERT INTO hims_d_insurance_sub(\" +\n          insurtColumns.join(\",\") +\n          \",`created_date`) VALUES ?\",\n        [\n          jsonArrayToObject({\n            sampleInputObject: insurtColumns,\n            arrayObj: req.body,\n            newFieldToInsert: [new Date()],\n            req: req\n          })\n        ],\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to updateSubInsuranceProvider SUB-insurence provider\n\nlet updateSubInsuranceProvider = (req, res, next) => {\n  let insuranceSubProviderModel = {};\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(insuranceSubProviderModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"update hims_d_insurance_sub SET `insurance_sub_code`=?,`insurance_sub_name`=?,`arabic_sub_name`=?,`insurance_provider_id`=?,`card_format`=?,\\\n        `transaction_number`=?,`effective_start_date`=?,`effective_end_date`=?,`updated_by`=? WHERE  `hims_d_insurance_sub_id`=? AND `record_status`='A'\",\n        [\n          inputparam.insurance_sub_code,\n          inputparam.insurance_sub_name,\n          inputparam.arabic_sub_name,\n          inputparam.insurance_provider_id,\n          inputparam.card_format,\n          inputparam.transaction_number,\n          inputparam.effective_start_date,\n          inputparam.effective_end_date,\n          inputparam.updated_by,\n          inputparam.hims_d_insurance_sub_id\n        ],\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add network(insurence plan master)\nlet addNetwork = (req, res, next) => {\n  let NetworkModel = {\n    hims_d_insurance_network_id: null,\n    network_type: null,\n    insurance_provider_id: null,\n    insurance_sub_id: null,\n    effective_start_date: null,\n    effective_end_date: null,\n    sub_insurance_status: null,\n\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(NetworkModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO hims_d_insurance_network(`network_type`,`insurance_provider_id`,`insurance_sub_id`,\\\n        `effective_start_date`,`effective_end_date`, `sub_insurance_status`,`created_date`,`created_by`,\\\n        `updated_date`,`updated_by`)\\\n        VALUE(?,?,?,?,?,?,?,?,?,?)\",\n        [\n          inputparam.network_type,\n          inputparam.insurance_provider_id,\n          inputparam.insurance_sub_id,\n          inputparam.effective_start_date,\n          inputparam.effective_end_date,\n          inputparam.sub_insurance_status,\n          new Date(),\n          inputparam.created_by,\n          new Date(),\n          inputparam.updated_by,\n          inputparam.record_status\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add networkoffice(policy master)\nlet NetworkOfficeMaster = (req, res, next) => {\n  let NetworkOfficeModel = {\n    hims_d_insurance_network_office_id: null,\n    network_id: null,\n    hospital_id: null,\n    deductible: null,\n    deductable_type: null,\n    min_value: null,\n    max_value: null,\n    copay_consultation: null,\n    deductible_lab: null,\n    for_alllab: null,\n    copay_percent: null,\n    deductible_rad: null,\n    for_allrad: null,\n    copay_percent_rad: null,\n    copay_percent_trt: null,\n    copay_percent_dental: null,\n    copay_medicine: null,\n    insur_network_limit: null,\n    deductible_trt: null,\n    deductible_dental: null,\n    deductible_medicine: null,\n    lab_min: null,\n    lab_max: null,\n    rad_min: null,\n    rad_max: null,\n    trt_max: null,\n    trt_min: null,\n    dental_min: null,\n    dental_max: null,\n    medicine_min: null,\n    medicine_max: null,\n    invoice_max_liability: null,\n    for_alltrt: null,\n    for_alldental: null,\n    for_allmedicine: null,\n    invoice_max_deduct: null,\n    price_from: null,\n    employer: null,\n    policy_number: null,\n    follow_up: null,\n    preapp_limit: null,\n    deductible_ip: null,\n    copay_ip: null,\n    ip_min: null,\n    ip_max: null,\n    for_allip: null,\n    consult_limit: null,\n    preapp_limit_from: null,\n    copay_maternity: null,\n    maternity_min: null,\n    maternity_max: null,\n    copay_optical: null,\n    optical_min: null,\n    optical_max: null,\n    copay_diagnostic: null,\n    diagnostic_min: null,\n    diagnostic_max: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(NetworkOfficeModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO hims_d_insurance_network_office(`network_id`,`hospital_id`,`deductible`,`deductable_type`,`min_value`,`max_value`,`copay_consultation`,\\\n        `deductible_lab`,`for_alllab`,`copay_percent`,`deductible_rad`,`for_allrad`,`copay_percent_rad`,`copay_percent_trt`,\\\n        `copay_percent_dental`,`copay_medicine`,`insur_network_limit`,`deductible_trt`,`deductible_dental`,`deductible_medicine`,`lab_min`,\\\n        `lab_max`,`rad_min`,`rad_max`,`trt_max`,`trt_min`,`dental_min`,`dental_max`,`medicine_min`,`medicine_max`,`invoice_max_liability`,\\\n        `for_alltrt`,`for_alldental`,`for_allmedicine`,`invoice_max_deduct`,`price_from`,`employer`,`policy_number`,`follow_up`,`preapp_limit`,\\\n        `deductible_ip`,`copay_ip`,`ip_min`,`ip_max`,`for_allip`,`consult_limit`,`preapp_limit_from`,`copay_maternity`,`maternity_min`,`maternity_max`,\\\n        `copay_optical`,`optical_min`,`optical_max`,`copay_diagnostic`,`diagnostic_min`,`diagnostic_max`,`created_date`,`created_by`,`updated_date`,`updated_by`)\\\n        VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n        [\n          inputparam.network_id,\n          inputparam.hospital_id,\n          inputparam.deductible,\n          inputparam.deductable_type,\n          inputparam.min_value,\n          inputparam.max_value,\n          inputparam.copay_consultation,\n          inputparam.deductible_lab,\n          inputparam.for_alllab,\n          inputparam.copay_percent,\n          inputparam.deductible_rad,\n          inputparam.for_allrad,\n          inputparam.copay_percent_rad,\n          inputparam.copay_percent_trt,\n          inputparam.copay_percent_dental,\n          inputparam.copay_medicine,\n          inputparam.insur_network_limit,\n          inputparam.deductible_trt,\n          inputparam.deductible_dental,\n          inputparam.deductible_medicine,\n          inputparam.lab_min,\n          inputparam.lab_max,\n          inputparam.rad_min,\n          inputparam.rad_max,\n          inputparam.trt_max,\n          inputparam.trt_min,\n          inputparam.dental_min,\n          inputparam.dental_max,\n          inputparam.medicine_min,\n          inputparam.medicine_max,\n          inputparam.invoice_max_liability,\n          inputparam.for_alltrt,\n          inputparam.for_alldental,\n          inputparam.for_allmedicine,\n          inputparam.invoice_max_deduct,\n          inputparam.price_from,\n          inputparam.employer,\n          inputparam.policy_number,\n          inputparam.follow_up,\n          inputparam.preapp_limit,\n          inputparam.deductible_ip,\n          inputparam.copay_ip,\n          inputparam.ip_min,\n          inputparam.ip_max,\n          inputparam.for_allip,\n          inputparam.consult_limit,\n          inputparam.preapp_limit_from,\n          inputparam.copay_maternity,\n          inputparam.maternity_min,\n          inputparam.maternity_max,\n          inputparam.copay_optical,\n          inputparam.optical_min,\n          inputparam.optical_max,\n          inputparam.copay_diagnostic,\n          inputparam.diagnostic_min,\n          inputparam.diagnostic_max,\n          new Date(),\n          inputparam.created_by,\n          new Date(),\n          inputparam.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add  both network and network office andservices\n//of hospital (insurence plan master)\nlet addPlanAndPolicy = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.beginTransaction(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        }\n\n        let flag = 0;\n\n        let jsonArr = req.body; //extend(models, req.body);\n\n        for (let i = 0; i < jsonArr.length; i++) {\n          let obj = extend(\n            {\n              hims_d_insurance_network_id: null,\n              network_type: null,\n              insurance_provider_id: null,\n              insurance_sub_id: null,\n              effective_start_date: null,\n              effective_end_date: null,\n              sub_insurance_status: null,\n              created_date: null,\n              created_by: req.userIdentity.algaeh_d_app_user_id,\n              updated_date: null,\n              updated_by: req.userIdentity.algaeh_d_app_user_id,\n              hims_d_insurance_network_office_id: null,\n              network_id: null,\n              hospital_id: null,\n              deductible: null,\n              deductable_type: null,\n              min_value: null,\n              max_value: null,\n              copay_consultation: null,\n              deductible_lab: null,\n              for_alllab: null,\n              copay_percent: null,\n              deductible_rad: null,\n              for_allrad: null,\n              copay_percent_rad: null,\n              copay_percent_trt: null,\n              copay_percent_dental: null,\n              copay_medicine: null,\n              insur_network_limit: null,\n              deductible_trt: null,\n              deductible_dental: null,\n              deductible_medicine: null,\n              lab_min: null,\n              lab_max: null,\n              rad_min: null,\n              rad_max: null,\n              trt_max: null,\n              trt_min: null,\n              dental_min: null,\n              dental_max: null,\n              medicine_min: null,\n              medicine_max: null,\n              invoice_max_liability: null,\n              for_alltrt: null,\n              for_alldental: null,\n              for_allmedicine: null,\n              invoice_max_deduct: null,\n              price_from: null,\n              employer: null,\n              policy_number: null,\n              follow_up: null,\n              preapp_limit: null,\n              deductible_ip: null,\n              copay_ip: null,\n              ip_min: null,\n              ip_max: null,\n              for_allip: null,\n              consult_limit: null,\n              preapp_limit_from: null,\n              copay_maternity: null,\n              maternity_min: null,\n              maternity_max: null,\n              copay_optical: null,\n              optical_min: null,\n              optical_max: null,\n              copay_diagnostic: null,\n              diagnostic_min: null,\n              diagnostic_max: null\n            },\n            jsonArr[i]\n          );\n          debugLog(\"Raw Object :\", jsonArr[i]);\n\n          debugLog(\"objects :\", obj);\n\n          connection.query(\n            \"INSERT INTO hims_d_insurance_network(`network_type`,`insurance_provider_id`,`insurance_sub_id`,\\\n        `effective_start_date`,`effective_end_date`,`created_by`, `updated_by`)\\\n        VALUE(?,?,?,?,?,?,?)\",\n            [\n              obj.network_type,\n              obj.insurance_provider_id,\n              obj.insurance_sub_id,\n              moment(String(obj.effective_start_date)).format(\"YYYY-MM-DD\"),\n              moment(String(obj.effective_end_date)).format(\"YYYY-MM-DD\"),\n              obj.created_by,\n              obj.created_by\n            ],\n            (error, result) => {\n              if (error) {\n                connection.rollback(() => {\n                  releaseDBConnection(db, connection);\n                  next(error);\n                });\n              }\n              // req.records = result;\n              // next();\n\n              if (result != null && result.length != 0) {\n                obj.network_id = result[\"insertId\"];\n\n                //----------------------------------begin of service insurance\n                if (jsonArr[i].price_from == \"P\") {\n                  connection.query(\n                    \"INSERT INTO hims_d_services_insurance_network(`insurance_id`,`network_id`,`services_id`,`service_code`,`service_type_id`,`cpt_code`,`service_name`,`insurance_service_name`,\\\n                    `hospital_id`,`gross_amt`,`net_amount`,`created_by`,`updated_by`)\\\n                    SELECT \" +\n                      obj.insurance_provider_id +\n                      \",\" +\n                      obj.network_id +\n                      \",hims_d_services_id,service_code,service_type_id,cpt_code,service_name,service_name,hospital_id,standard_fee,standard_fee,\" +\n                      obj.created_by +\n                      \",\" +\n                      obj.created_by +\n                      \" from hims_d_services\",\n                    (error, result_service_network) => {\n                      if (error) {\n                        connection.rollback(() => {\n                          releaseDBConnection(db, connection);\n                          next(error);\n                        });\n                      }\n\n                      debugLog(\"result of pppp:\", result_service_network);\n                    }\n                  );\n                }\n                if (jsonArr[i].price_from == \"S\" && flag == 0) {\n                  flag = 1;\n                  connection.query(\n                    \"INSERT INTO hims_d_services_insurance(`insurance_id`,`services_id`,`service_code`,`service_type_id`,`cpt_code`,`service_name`,`insurance_service_name`,\\\n                          `hospital_id`,`gross_amt`,`net_amount`,`created_by`,`updated_by`)\\\n                          SELECT \" +\n                      obj.insurance_provider_id +\n                      \",hims_d_services_id,service_code,service_type_id,cpt_code,service_name,service_name,hospital_id,standard_fee,standard_fee,\" +\n                      obj.created_by +\n                      \",\" +\n                      obj.created_by +\n                      \" from hims_d_services\",\n                    (error, result_service_Ins) => {\n                      if (error) {\n                        connection.rollback(() => {\n                          releaseDBConnection(db, connection);\n                          next(error);\n                        });\n                      }\n                      debugLog(\"result of pppp:\", result_service_Ins);\n                      //code\n                    }\n                  );\n\n                  //code\n                }\n                console.log(\"Defined price from \", obj.price_from);\n                console.log(\"emp m \", obj.employer);\n                //----------------------------------end of service insurance\n\n                connection.query(\n                  \"INSERT INTO hims_d_insurance_network_office(`network_id`,`hospital_id`,`deductible`,`deductable_type`,`min_value`,`max_value`,`copay_consultation`,\\\n              `deductible_lab`,`for_alllab`,`copay_percent`,`deductible_rad`,`for_allrad`,`copay_percent_rad`,`copay_percent_trt`,\\\n              `copay_percent_dental`,`copay_medicine`,`insur_network_limit`,`deductible_trt`,`deductible_dental`,`deductible_medicine`,`lab_min`,\\\n              `lab_max`,`rad_min`,`rad_max`,`trt_max`,`trt_min`,`dental_min`,`dental_max`,`medicine_min`,`medicine_max`,`invoice_max_liability`,\\\n              `for_alltrt`,`for_alldental`,`for_allmedicine`,`invoice_max_deduct`,`price_from`,`employer`,`policy_number`,`follow_up`,`preapp_limit`,\\\n              `deductible_ip`,`copay_ip`,`ip_min`,`ip_max`,`for_allip`,`consult_limit`,`preapp_limit_from`,`copay_maternity`,`maternity_min`,`maternity_max`,\\\n              `copay_optical`,`optical_min`,`optical_max`,`copay_diagnostic`,`diagnostic_min`,`diagnostic_max`,`created_by`,`updated_by`)\\\n              SELECT \" +\n                    obj.network_id +\n                    \",hims_d_hospital_id,\" +\n                    obj.deductible +\n                    \",\" +\n                    obj.deductable_type +\n                    \",\" +\n                    obj.min_value +\n                    \",\" +\n                    obj.max_value +\n                    \",\" +\n                    obj.copay_consultation +\n                    \",\" +\n                    obj.deductible_lab +\n                    \",\" +\n                    obj.for_alllab +\n                    \",\" +\n                    obj.copay_percent +\n                    \",\" +\n                    obj.deductible_rad +\n                    \",\" +\n                    obj.for_allrad +\n                    \",\" +\n                    obj.copay_percent_rad +\n                    \",\" +\n                    obj.copay_percent_trt +\n                    \",\" +\n                    obj.copay_percent_dental +\n                    \",\" +\n                    obj.copay_medicine +\n                    \",\" +\n                    obj.insur_network_limit +\n                    \",\" +\n                    obj.deductible_trt +\n                    \",\" +\n                    obj.deductible_dental +\n                    \",\" +\n                    obj.deductible_medicine +\n                    \",\" +\n                    obj.lab_min +\n                    \",\" +\n                    obj.lab_max +\n                    \",\" +\n                    obj.rad_min +\n                    \",\" +\n                    obj.rad_max +\n                    \",\" +\n                    obj.trt_max +\n                    \",\" +\n                    obj.trt_min +\n                    \",\" +\n                    obj.dental_min +\n                    \",\" +\n                    obj.dental_max +\n                    \",\" +\n                    obj.medicine_min +\n                    \",\" +\n                    obj.medicine_max +\n                    \",\" +\n                    obj.invoice_max_liability +\n                    \",\" +\n                    obj.for_alltrt +\n                    \",\" +\n                    obj.for_alldental +\n                    \",\" +\n                    obj.for_allmedicine +\n                    \",\" +\n                    obj.invoice_max_deduct +\n                    \",'\" +\n                    obj.price_from +\n                    \"','\" +\n                    obj.employer +\n                    \"','\" +\n                    obj.policy_number +\n                    \"',\" +\n                    obj.follow_up +\n                    \",\" +\n                    obj.preapp_limit +\n                    \",\" +\n                    obj.deductible_ip +\n                    \",\" +\n                    obj.copay_ip +\n                    \",\" +\n                    obj.ip_min +\n                    \",\" +\n                    obj.ip_max +\n                    \",\" +\n                    obj.for_allip +\n                    \",\" +\n                    obj.consult_limit +\n                    \",'\" +\n                    obj.preapp_limit_from +\n                    \"',\" +\n                    obj.copay_maternity +\n                    \",\" +\n                    obj.maternity_min +\n                    \",\" +\n                    obj.maternity_max +\n                    \",\" +\n                    obj.copay_optical +\n                    \",\" +\n                    obj.optical_min +\n                    \",\" +\n                    obj.optical_max +\n                    \",\" +\n                    obj.copay_diagnostic +\n                    \",\" +\n                    obj.diagnostic_min +\n                    \",\" +\n                    obj.diagnostic_max +\n                    \",\" +\n                    obj.created_by +\n                    \",\" +\n                    obj.created_by +\n                    \" from hims_d_hospital\",\n                  (error, resultoff) => {\n                    if (error) {\n                      connection.rollback(() => {\n                        releaseDBConnection(db, connection);\n                        next(error);\n                      });\n                    }\n\n                    connection.commit(error => {\n                      if (error) {\n                        connection.rollback(() => {\n                          releaseDBConnection(db, connection);\n                          next(error);\n                        });\n                      }\n                      releaseDBConnection(db, connection);\n                      req.records = resultoff;\n                      next();\n                    });\n                  }\n                );\n              }\n            }\n          );\n        }\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//delet sub insurance\nlet deleteSubInsurance = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE hims_d_insurance_sub SET  record_status='I', \\\n         updated_by=?,updated_date=? WHERE hims_d_insurance_sub_id=?\",\n        [req.body.updated_by, new Date(), req.body.hims_d_insurance_sub_id],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:nowshad,to get list of all Price List of selected insurance\nlet getPriceList = (req, res, next) => {\n  let priselistWhereCondition = {\n    insurance_id: \"ALL\",\n    services_id: \"ALL\"\n  };\n\n  debugFunction(\"getPriceList\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      // extend(insuranceWhereCondition, req.query);\n      let where = whereCondition(extend(priselistWhereCondition, req.query));\n\n      connection.query(\n        \"select * from hims_d_services_insurance where record_status='A' AND\" +\n          where.condition,\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:irfan,to get list of network and its network_office records\n// based on insuranceProvider id\n\nlet getNetworkAndNetworkOfficRecords = (req, res, next) => {\n  debugFunction(\"getNetworkAndNetworkOfficRecords\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let insuranceProviderId = req.query.insuranceProviderId;\n\n      debugLog(\"insuranceProviderId: \", insuranceProviderId);\n      connection.query(\n        \"SELECT hims_d_insurance_network_id,network_type,arabic_network_type,insurance_sub_id,insurance_provider_id,\\\n        netoff.hospital_id, netoff.hims_d_insurance_network_office_id, netoff.employer,netoff.policy_number,effective_start_date,effective_end_date,netoff.preapp_limit,netoff.price_from,netoff.deductible,\\\n        netoff.copay_consultation,netoff.max_value,netoff.deductible_lab,netoff.copay_percent,\\\n        netoff.lab_max,netoff.deductible_rad,netoff.copay_percent_rad,netoff.rad_max,netoff.deductible_trt,\\\n        netoff.copay_percent_trt,netoff.trt_max,netoff.deductible_dental,\\\n        netoff.copay_percent_dental,netoff.dental_max, netoff.hospital_id,netoff.deductible_medicine,netoff.copay_medicine,netoff.medicine_max,netoff.invoice_max_deduct, netoff.preapp_limit_from \\\n        FROM hims_d_insurance_network net,hims_d_insurance_network_office netoff\\\n        where insurance_provider_id=? and netoff.network_id = net.hims_d_insurance_network_id \\\n        and net.record_status='A' and netoff.record_status='A';\",\n        [insuranceProviderId],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet updatePriceList = (req, res, next) => {\n  let services_insurance = {\n    hims_d_services_insurance_id: null,\n    insurance_service_name: null,\n    cpt_code: null,\n    gross_amt: null,\n    corporate_discount_amt: null,\n    net_amount: null,\n    pre_approval: null,\n    covered: null,\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n\n  if (req.db == null) {\n    next(httpStatus.dataBaseNotInitilizedError());\n  }\n  let db = req.db;\n  db.getConnection((error, connection) => {\n    if (error) {\n      next(error);\n    }\n    let inputParam = extend(services_insurance, req.body);\n    connection.query(\n      \"UPDATE `hims_d_services_insurance` \\\n     SET `insurance_service_name`=?, `cpt_code`=?, `gross_amt`=?, `corporate_discount_amt`=?, `net_amount`=?,\\\n     `pre_approval`=?,`covered`=?,`updated_by`=?, `updated_date`=? WHERE `record_status`='A' and \\\n     `hims_d_services_insurance_id`=?\",\n      [\n        inputParam.insurance_service_name,\n        inputParam.cpt_code,\n        inputParam.gross_amt,\n        inputParam.corporate_discount_amt,\n        inputParam.net_amount,\n        inputParam.pre_approval,\n        inputParam.covered,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.hims_d_services_insurance_id\n      ],\n      (error, result) => {\n        releaseDBConnection(db, connection);\n        if (error) {\n          next(error);\n        }\n        req.records = result;\n        next();\n      }\n    );\n  });\n};\n\n//created by irfan: to update Network And NetworkOffice\n\nlet updateNetworkAndNetworkOffice = (req, res, next) => {\n  let networkAndNetworkOfficeModel = {\n    hims_d_insurance_network_id: null,\n    network_type: null,\n    insurance_provider_id: null,\n    insurance_sub_id: null,\n    effective_start_date: null,\n    effective_end_date: null,\n    sub_insurance_status: null,\n\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\n    hims_d_insurance_network_office_id: null,\n    network_id: null,\n    hospital_id: null,\n    deductible: null,\n    deductable_type: null,\n    min_value: null,\n    max_value: null,\n    copay_consultation: null,\n    deductible_lab: null,\n    for_alllab: null,\n    copay_percent: null,\n    deductible_rad: null,\n    for_allrad: null,\n    copay_percent_rad: null,\n    copay_percent_trt: null,\n    copay_percent_dental: null,\n    copay_medicine: null,\n    insur_network_limit: null,\n    deductible_trt: null,\n    deductible_dental: null,\n    deductible_medicine: null,\n    lab_min: null,\n    lab_max: null,\n    rad_min: null,\n    rad_max: null,\n    trt_max: null,\n    trt_min: null,\n    dental_min: null,\n    dental_max: null,\n    medicine_min: null,\n    medicine_max: null,\n    invoice_max_liability: null,\n    for_alltrt: null,\n    for_alldental: null,\n    for_allmedicine: null,\n    invoice_max_deduct: null,\n    price_from: null,\n    employer: null,\n    policy_number: null,\n    follow_up: null,\n    preapp_limit: null,\n    deductible_ip: null,\n    copay_ip: null,\n    ip_min: null,\n    ip_max: null,\n    for_allip: null,\n    consult_limit: null,\n    preapp_limit_from: null,\n    copay_maternity: null,\n    maternity_min: null,\n    maternity_max: null,\n    copay_optical: null,\n    optical_min: null,\n    optical_max: null,\n    copay_diagnostic: null,\n    diagnostic_min: null,\n    diagnostic_max: null,\n    arabic_network_type: null\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputparam = extend(networkAndNetworkOfficeModel, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.beginTransaction(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        }\n\n        debugLog(\"inputparam: \", inputparam);\n\n        connection.query(\n          \"update hims_d_insurance_network SET `network_type`=?,`arabic_network_type`=?,`insurance_provider_id`=?,`insurance_sub_id`=?,\\\n        `effective_start_date`=?,`effective_end_date`=?, `updated_date`=?,`updated_by`=? WHERE  `hims_d_insurance_network_id`=? AND `record_status`='A'\",\n          [\n            inputparam.network_type,\n            inputparam.arabic_network_type,\n            inputparam.insurance_provider_id,\n            inputparam.insurance_sub_id,\n            inputparam.effective_start_date,\n            inputparam.effective_end_date,\n            new Date(),\n            inputparam.updated_by,\n            inputparam.hims_d_insurance_network_id\n          ],\n          (error, result) => {\n            if (error) {\n              connection.rollback(() => {\n                releaseDBConnection(db, connection);\n                next(error);\n              });\n            }\n\n            // req.records = result;\n            // next();\n            if (result != null) {\n              connection.query(\n                \"update hims_d_insurance_network_office SET `network_id`=?,`hospital_id`=?,`deductible`=?,`deductable_type`=?,`min_value`=?,`max_value`=?,`copay_consultation`=?,\\\n            `deductible_lab`=?,`for_alllab`=?,`copay_percent`=?,`deductible_rad`=?,`for_allrad`=?,`copay_percent_rad`=?,`copay_percent_trt`=?,\\\n            `copay_percent_dental`=?,`copay_medicine`=?,`insur_network_limit`=?,`deductible_trt`=?,`deductible_dental`=?,`deductible_medicine`=?,`lab_min`=?,\\\n            `lab_max`=?,`rad_min`=?,`rad_max`=?,`trt_max`=?,`trt_min`=?,`dental_min`=?,`dental_max`=?,`medicine_min`=?,`medicine_max`=?,`invoice_max_liability`=?,\\\n            `for_alltrt`=?,`for_alldental`=?,`for_allmedicine`=?,`invoice_max_deduct`=?,`price_from`=?,`employer`=?,`policy_number`=?,`follow_up`=?,`preapp_limit`=?,\\\n            `deductible_ip`=?,`copay_ip`=?,`ip_min`=?,`ip_max`=?,`for_allip`=?,`consult_limit`=?,`preapp_limit_from`=?,`copay_maternity`=?,`maternity_min`=?,`maternity_max`=?,\\\n            `copay_optical`=?,`optical_min`=?,`optical_max`=?,`copay_diagnostic`=?,`diagnostic_min`=?,`diagnostic_max`=?,`updated_date`=?,`updated_by`=? WHERE  `hims_d_insurance_network_office_id`=? AND `record_status`='A'\",\n                [\n                  inputparam.network_id,\n                  inputparam.hospital_id,\n                  inputparam.deductible,\n                  inputparam.deductable_type,\n                  inputparam.min_value,\n                  inputparam.max_value,\n                  inputparam.copay_consultation,\n                  inputparam.deductible_lab,\n                  inputparam.for_alllab,\n                  inputparam.copay_percent,\n                  inputparam.deductible_rad,\n                  inputparam.for_allrad,\n                  inputparam.copay_percent_rad,\n                  inputparam.copay_percent_trt,\n                  inputparam.copay_percent_dental,\n                  inputparam.copay_medicine,\n                  inputparam.insur_network_limit,\n                  inputparam.deductible_trt,\n                  inputparam.deductible_dental,\n                  inputparam.deductible_medicine,\n                  inputparam.lab_min,\n                  inputparam.lab_max,\n                  inputparam.rad_min,\n                  inputparam.rad_max,\n                  inputparam.trt_max,\n                  inputparam.trt_min,\n                  inputparam.dental_min,\n                  inputparam.dental_max,\n                  inputparam.medicine_min,\n                  inputparam.medicine_max,\n                  inputparam.invoice_max_liability,\n                  inputparam.for_alltrt,\n                  inputparam.for_alldental,\n                  inputparam.for_allmedicine,\n                  inputparam.invoice_max_deduct,\n                  inputparam.price_from,\n                  inputparam.employer,\n                  inputparam.policy_number,\n                  inputparam.follow_up,\n                  inputparam.preapp_limit,\n                  inputparam.deductible_ip,\n                  inputparam.copay_ip,\n                  inputparam.ip_min,\n                  inputparam.ip_max,\n                  inputparam.for_allip,\n                  inputparam.consult_limit,\n                  inputparam.preapp_limit_from,\n                  inputparam.copay_maternity,\n                  inputparam.maternity_min,\n                  inputparam.maternity_max,\n                  inputparam.copay_optical,\n                  inputparam.optical_min,\n                  inputparam.optical_max,\n                  inputparam.copay_diagnostic,\n                  inputparam.diagnostic_min,\n                  inputparam.diagnostic_max,\n                  new Date(),\n                  inputparam.updated_by,\n                  inputparam.hims_d_insurance_network_office_id\n                ],\n                (error, results) => {\n                  if (error) {\n                    connection.rollback(() => {\n                      releaseDBConnection(db, connection);\n                      next(error);\n                    });\n                  }\n\n                  connection.commit(error => {\n                    releaseDBConnection(db, connection);\n                    if (error) {\n                      connection.rollback(() => {\n                        next(error);\n                      });\n                    }\n                    releaseDBConnection(db, connection);\n                    req.records = results;\n                    next();\n                  });\n                }\n              );\n            }\n          }\n        );\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by nowshad\nlet updatePriceListBulk = (req, res, next) => {\n  let services_insurance = {\n    hims_d_services_insurance_id: null,\n    corporate_discount_percent: null,\n    corporate_discount_amt: null,\n    net_amount: null,\n    pre_approval: null,\n    covered: null,\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\n    record_status: null\n  };\n\n  if (req.db == null) {\n    next(httpStatus.dataBaseNotInitilizedError());\n  }\n  let db = req.db;\n  let inputParam = extend(services_insurance, req.body);\n  let strQuery = \"\";\n  let parameters = [];\n  if (inputParam.update === \"pre_approval\") {\n    strQuery =\n      \"UPDATE `hims_d_services_insurance` \\\n    SET `pre_approval`=?,`updated_by`=?, `updated_date`=? WHERE `record_status`='A' and \\\n    `insurance_id`=?\";\n    parameters = [\n      inputParam.pre_approval,\n      inputParam.updated_by,\n      new Date(),\n      inputParam.insurance_id\n    ];\n  } else if (inputParam.update === \"covered\") {\n    strQuery =\n      \"UPDATE `hims_d_services_insurance` \\\n    SET `covered`=?,`updated_by`=?, `updated_date`=? WHERE `record_status`='A' and \\\n    `insurance_id`=?\";\n    parameters = [\n      inputParam.covered,\n      inputParam.updated_by,\n      new Date(),\n      inputParam.insurance_id\n    ];\n  } else if (inputParam.update === \"corporate_discount\") {\n    if (inputParam.discountType === \"P\") {\n      strQuery =\n        \"UPDATE `hims_d_services_insurance` \\\n        SET `corporate_discount_percent`=?, `corporate_discount_amt`=(gross_amt*?)/100,`net_amount`=(gross_amt-(gross_amt*?)/100),\\\n        `updated_by`=?, `updated_date`=? WHERE `record_status`='A' and `insurance_id`=?\";\n\n      parameters = [\n        inputParam.corporate_discount,\n        inputParam.corporate_discount,\n        inputParam.corporate_discount,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.insurance_id\n      ];\n    } else if (inputParam.discountType === \"A\") {\n      strQuery =\n        \"UPDATE `hims_d_services_insurance` \\\n        SET `corporate_discount_amt`=?, `corporate_discount_percent`=(?/gross_amt)*100,`net_amount`=gross_amt-?, \\\n        `updated_by`=?, `updated_date`=? WHERE `record_status`='A' and `insurance_id`=?\";\n\n      parameters = [\n        inputParam.corporate_discount,\n        inputParam.corporate_discount,\n        inputParam.corporate_discount,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.insurance_id\n      ];\n    }\n  }\n  db.getConnection((error, connection) => {\n    if (error) {\n      next(error);\n    }\n\n    connection.query(strQuery, parameters, (error, result) => {\n      releaseDBConnection(db, connection);\n      if (error) {\n        next(error);\n      }\n      req.records = result;\n      next();\n    });\n  });\n};\n\n//delet sub insurance\nlet deleteNetworkAndNetworkOfficRecords = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE hims_d_insurance_network_office SET  record_status='I', \\\n         updated_by=?,updated_date=? WHERE hims_d_insurance_network_office_id=?\",\n        [\n          req.body.updated_by,\n          new Date(),\n          req.body.hims_d_insurance_network_office_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet getInsuranceProviders = (req, res, next) => {\n  let selectWhere = {\n    hims_d_insurance_provider_id: null\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let where = whereCondition(extend(selectWhere, req.query));\n      connection.query(\n        \" SELECT hims_d_insurance_provider_id, insurance_provider_code,\\\n        insurance_provider_name, arabic_provider_name from hims_d_insurance_provider where record_status='A' AND \" +\n          where.condition,\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet getSubInsuraces = (req, res, next) => {\n  let selectWhere = {\n    insurance_provider_id: null\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let where = whereCondition(extend(selectWhere, req.query));\n      connection.query(\n        \" SELECT hims_d_insurance_sub_id, insurance_sub_code, insurance_sub_name, arabic_sub_name,\\\n        insurance_provider_id  from hims_d_insurance_sub where record_status='A' AND \" +\n          where.condition,\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  getPatientInsurance,\n  addPatientInsurance,\n  getListOfInsuranceProvider,\n  addInsuranceProvider,\n  updateInsuranceProvider,\n  addSubInsuranceProvider,\n  updateSubInsuranceProvider,\n  getSubInsurance,\n  deleteSubInsurance,\n  addNetwork,\n  NetworkOfficeMaster,\n  addPlanAndPolicy,\n  getPriceList,\n  getNetworkAndNetworkOfficRecords,\n  updatePriceList,\n  updateNetworkAndNetworkOffice,\n  updatePriceListBulk,\n  addPatientInsuranceData,\n  deleteNetworkAndNetworkOfficRecords,\n  getInsuranceProviders,\n  getSubInsuraces\n  // getPreAprovalList\n};\n"]}