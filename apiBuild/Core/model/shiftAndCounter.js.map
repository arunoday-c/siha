{"version":3,"sources":["../../../src/model/shiftAndCounter.js"],"names":["addShiftMaster","req","res","next","db","httpStatus","dataBaseNotInitilizedError","input","body","getConnection","error","connection","query","shift_code","shift_description","arabic_name","Date","created_by","updated_by","result","records","e","addCounterMaster","counter_code","counter_description","getCounterMaster","getShiftMaster","selectWhere","hims_d_shift_id","where","condition","values","updateShiftMaster","shift_status","record_status","results","updateCounterMaster","counter_status","hims_d_counter_id","getCashiers","userIdentity","role_type","validUser","message","addCashierToShift","cashier_id","shift_id","year","month","getCashiersAndShiftMAP","hims_m_cashier_shift_id","for","updateCashiersAndShiftMAP","deleteCashiersAndShiftMAP","tableName","id","module","exports"],"mappings":"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","file":"shiftAndCounter.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport { deleteRecord, releaseDBConnection, whereCondition } from \"../utils\";\n\nimport httpStatus from \"../utils/httpStatus\";\n\nimport { debugLog } from \"../utils/logging\";\n\n//created by irfan: to add shift master\nlet addShiftMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_d_shift` (shift_code,shift_description,arabic_name,created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?)\",\n        [\n          input.shift_code,\n          input.shift_description,\n          input.arabic_name,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n//created by irfan: to addCounterMaster\nlet addCounterMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_d_counter` (counter_code,counter_description,arabic_name,     created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?)\",\n        [\n          input.counter_code,\n          input.counter_description,\n          input.arabic_name,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to getCounterMaster\nlet getCounterMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_d_counter_id,counter_code,counter_description,arabic_name,counter_status from \\\n          hims_d_counter where record_status='A' order by hims_d_counter_id desc;\",\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to getShiftMaster\nlet getShiftMaster = (req, res, next) => {\n  let selectWhere = {\n    hims_d_shift_id: \"ALL\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let where = whereCondition(extend(selectWhere, req.query));\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_d_shift_id, shift_code, shift_description, arabic_name, shift_status from \\\n          hims_d_shift where record_status='A' and \" +\n          where.condition +\n          \" order by hims_d_shift_id desc\",\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to updateShiftMaster\nlet updateShiftMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"UPDATE `hims_d_shift` SET shift_code=?, shift_description=?, arabic_name=?, shift_status=?,\\\n             updated_date=?, updated_by=? ,`record_status`=? WHERE  `record_status`='A' and `hims_d_shift_id`=?;\",\n        [\n          input.shift_code,\n          input.shift_description,\n          input.arabic_name,\n          input.shift_status,\n          new Date(),\n          input.updated_by,\n          input.record_status,\n          input.hims_d_shift_id\n        ],\n        (error, results) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = results;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to  updateCounterMaster\nlet updateCounterMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"UPDATE `hims_d_counter` SET counter_code=?, counter_description=?, arabic_name=?, counter_status=?,\\\n             updated_date=?, updated_by=? ,`record_status`=? WHERE  `record_status`='A' and `hims_d_counter_id`=?;\",\n        [\n          input.counter_code,\n          input.counter_description,\n          input.arabic_name,\n          input.counter_status,\n          new Date(),\n          input.updated_by,\n          input.record_status,\n          input.hims_d_counter_id\n        ],\n        (error, results) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = results;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getCashiers = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    // select algaeh_d_app_group_id,EDM.user_id as cashier_id,G.group_type,hims_d_employee_id,\\\n    // employee_code,E.full_name as cashier_name from algaeh_d_app_group G \\\n    // inner join algaeh_m_group_user_mappings GUP\\\n    // on G.algaeh_d_app_group_id=GUP.app_group_id \\\n    // inner join hims_m_employee_department_mappings EDM on GUP.user_id=EDM.user_id\\\n    // inner join hims_d_employee  E on EDM.employee_id=E.hims_d_employee_id\\\n    // where group_type in('C','FD') order by cashier_id desc;\n    db.getConnection((error, connection) => {\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"select algaeh_d_app_group_id,EDM.user_id as cashier_id,G.group_type,hims_d_employee_id,\\\n        employee_code,E.full_name as cashier_name          \\\n        from algaeh_d_app_group G         inner join algaeh_d_app_roles R\\\n        on G.algaeh_d_app_group_id=R.app_group_id     \\\n        inner join algaeh_m_role_user_mappings RU on R.app_d_app_roles_id=RU.role_id     \\\n        inner join hims_m_employee_department_mappings EDM on RU.user_id=EDM.user_id\\\n        inner join hims_d_employee  E on EDM.employee_id=E.hims_d_employee_id\\\n        where group_type in('C') order by cashier_id desc\",\n\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet addCashierToShift = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_m_cashier_shift` (cashier_id, shift_id, year,month,  created_date, created_by, updated_date, updated_by)\\\n          VALUE(?,?,?,?,?,?,?,?)\",\n        [\n          input.cashier_id,\n          input.shift_id,\n          input.year,\n          input.month,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getCashiersAndShiftMAP = (req, res, next) => {\n  let selectWhere = {\n    hims_m_cashier_shift_id: \"ALL\",\n    cashier_id: \"ALL\",\n    month: \"ALL\",\n    year: \"ALL\"\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    if (req.query.for == \"T\") {\n      extend(selectWhere, {\n        cashier_id: req.body.created_by\n      });\n      delete req.query.for;\n    } else {\n      delete req.query.for;\n    }\n\n    let where = whereCondition(extend(selectWhere, req.query));\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_m_cashier_shift_id, cashier_id, shift_id,shift_description, year, month,\\\n            hims_d_employee_department_id,EDM.employee_id,E.full_name as cashier_name\\\n            from hims_m_cashier_shift CS,hims_d_shift S,hims_d_employee E ,hims_m_employee_department_mappings EDM\\\n              where CS.record_status='A' and S.record_status='A' and CS.shift_id=S.hims_d_shift_id \\\n              and CS.cashier_id=EDM.user_id  and EDM.employee_id=E.hims_d_employee_id\\\n               and \" +\n          where.condition +\n          \"order by hims_m_cashier_shift_id desc\",\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet updateCashiersAndShiftMAP = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE `hims_m_cashier_shift` SET  shift_id=?,\\\n           updated_date=?, updated_by=?  WHERE  `record_status`='A' and `hims_m_cashier_shift_id`=?;\",\n        [\n          input.shift_id,\n          new Date(),\n          input.updated_by,\n          input.hims_m_cashier_shift_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet deleteCashiersAndShiftMAP = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_m_cashier_shift\",\n        id: req.body.hims_m_cashier_shift_id,\n        query:\n          \"UPDATE hims_m_cashier_shift SET  record_status='I' WHERE hims_m_cashier_shift_id=?\",\n        values: [req.body.hims_m_cashier_shift_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  addShiftMaster,\n  addCounterMaster,\n  getCounterMaster,\n  getShiftMaster,\n  updateShiftMaster,\n  updateCounterMaster,\n  getCashiers,\n  addCashierToShift,\n  getCashiersAndShiftMAP,\n  updateCashiersAndShiftMAP,\n  deleteCashiersAndShiftMAP\n};\n"]}