{"version":3,"sources":["../../../src/model/mastersUpdate.js"],"names":["insertToAppgen","req","res","next","modelAppGen","hims_f_app_numgen_id","numgen_code","module_desc","prefix","intermediate_series","postfix","length","increment_by","numgen_seperator","postfix_start","postfix_end","current_num","pervious_num","created_by","userIdentity","algaeh_d_app_user_id","updated_by","db","httpStatus","dataBaseNotInitilizedError","getConnection","error","connection","inputParam","body","query","Date","result","records","e","updateToAppgen","addVisa","visaType","hims_d_visa_type_id","visa_type_code","visa_type","visa_desc","visa_status","updateVisa","arabic_visa_type","deleteVisa","tableName","id","values","module","exports"],"mappings":"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","file":"mastersUpdate.js","sourcesContent":["import { releaseDBConnection, deleteRecord } from \"../utils\";\nimport extend from \"extend\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { deleteFromCache } from \"../utils/caching\";\n\nlet insertToAppgen = (req, res, next) => {\n  let modelAppGen = {\n    hims_f_app_numgen_id: null,\n    numgen_code: null,\n    module_desc: null,\n    prefix: null,\n    intermediate_series: null,\n    postfix: null,\n    length: null,\n    increment_by: null,\n    numgen_seperator: null,\n    postfix_start: null,\n    postfix_end: null,\n    current_num: null,\n    pervious_num: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let inputParam = extend(modelAppGen, req.body);\n      connection.query(\n        \"INSERT INTO `hims_f_app_numgen` (`numgen_code`, `module_desc`\\\n      , `prefix`, `intermediate_series`, `postfix`, `length`, `increment_by`\\\n      , `numgen_seperator`, `postfix_start`, `postfix_end`, `current_num`\\\n      , `pervious_num`, `created_by`, `created_date`)\\\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\",\n        [\n          inputParam.numgen_code,\n          inputParam.module_desc,\n          inputParam.prefix,\n          inputParam.intermediate_series,\n          inputParam.postfix,\n          inputParam.length,\n          inputParam.increment_by,\n          inputParam.numgen_seperator,\n          inputParam.postfix_start,\n          inputParam.postfix_end,\n          inputParam.current_num,\n          inputParam.pervious_num,\n          inputParam.created_by,\n          new Date()\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nlet updateToAppgen = (req, res, next) => {\n  let modelAppGen = {\n    hims_f_app_numgen_id: null,\n    numgen_code: null,\n    module_desc: null,\n    prefix: null,\n    intermediate_series: null,\n    postfix: null,\n    length: null,\n    increment_by: null,\n    numgen_seperator: null,\n    postfix_start: null,\n    postfix_end: null,\n    current_num: null,\n    pervious_num: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let inputParam = extend(modelAppGen, req.body);\n      connection.query(\n        \"UPDATE `hims_f_app_numgen` \\\n          SET  `numgen_code`=?, `module_desc`=?, `prefix`=?, \\\n          `intermediate_series`=?, `postfix`=?, `length`=?, `increment_by`=?,\\\n          `numgen_seperator`=?, `postfix_start`=?, `postfix_end`=?, \\\n          `current_num`=?, `pervious_num`=?,  `updated_by`=?, `updated_date`=? \\\n          WHERE  `record_status`='A' AND `hims_f_app_numgen_id`=?\",\n        [\n          inputParam.numgen_code,\n          inputParam.module_desc,\n          inputParam.prefix,\n          inputParam.intermediate_series,\n          inputParam.postfix,\n          inputParam.length,\n          inputParam.increment_by,\n          inputParam.numgen_seperator,\n          inputParam.postfix_start,\n          inputParam.postfix_end,\n          inputParam.current_num,\n          inputParam.pervious_num,\n          inputParam.updated_by,\n          new Date(),\n          inputParam.hims_f_app_numgen_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet addVisa = (req, res, next) => {\n  let visaType = {\n    hims_d_visa_type_id: null,\n    visa_type_code: null,\n    visa_type: null,\n    visa_desc: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\n\n    visa_status: \"A\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let inputParam = extend(visaType, req.body);\n      connection.query(\n        \"INSERT INTO `hims_d_visa_type` ( `visa_type_code`, `visa_type`, `visa_desc`, `created_by`, `created_date`,`visa_status`) \\\n     VALUES (?, ?, ?, ?, ?,?)\",\n        [\n          inputParam.visa_type_code,\n          inputParam.visa_type,\n          inputParam.visa_desc,\n          inputParam.created_by,\n          new Date(),\n          inputParam.visa_status\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n\n      deleteFromCache(\"visa\");\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet updateVisa = (req, res, next) => {\n  let visaType = {\n    hims_d_visa_type_id: null,\n    visa_type_code: null,\n    visa_type: null,\n    visa_desc: null,\n    created_by: req.userIdentity.algaeh_d_app_user_id,\n\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\n\n    visa_status: \"A\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let inputParam = extend(visaType, req.body);\n      connection.query(\n        \"UPDATE `hims_d_visa_type` \\\n        SET `visa_type`=?, `arabic_visa_type` = ?, `updated_by`=?, `updated_date`=? \\\n        ,`visa_status` =? \\\n        WHERE `record_status`='A' and `hims_d_visa_type_id`=?\",\n        [\n          inputParam.visa_type,\n          inputParam.arabic_visa_type,\n          inputParam.updated_by,\n          new Date(),\n          inputParam.visa_status,\n          inputParam.hims_d_visa_type_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n      deleteFromCache(\"visa\");\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet deleteVisa = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_visa_type\",\n        id: req.body.hims_d_visa_type_id,\n        query:\n          \"UPDATE hims_d_visa_type SET  record_status='I', \\\n          updated_by=?,updated_date=? WHERE hims_d_visa_type_id=?\",\n        values: [req.body.updated_by, new Date(), req.body.hims_d_visa_type_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n    deleteFromCache(\"visa\");\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  insertToAppgen,\n  updateToAppgen,\n  updateVisa,\n  addVisa,\n  deleteVisa\n};\n"]}