{"version":3,"sources":["../../../src/model/algaehMasters.js"],"names":["addAlgaehGroupMAster","req","res","next","db","httpStatus","dataBaseNotInitilizedError","input","body","getConnection","error","connection","userIdentity","role_type","query","app_group_code","app_group_name","app_group_desc","Date","created_by","updated_by","result","records","validUser","message","e","addAlgaehRoleMAster","app_group_id","role_code","role_name","role_discreption","getAlgaehModuleBACKUP","outputArray","length","i","algaeh_d_module_id","screenResult","obj","ScreenList","push","getRoleBaseActiveModulesBACKUP","role_id","algaeh_m_module_role_privilage_mapping_id","getRoleBaseActiveModules","superUser","Promise","resolve","reject","user_type","then","getRoleBaseInActiveComponents","elementsHide","componentHide","listOfComponentsToHide","screenElementsToHide","addAlgaehModule","group_type","module_code","module_name","licence_key","access_by","icons","other_language","getAlgaehModules","updateAlgaehModules","hims_f_dental_treatment_id","undefined","scheduled_date","distal","incisal","occlusal","mesial","buccal","labial","cervical","palatal","lingual","results","affectedRows","invalid_input","addAlgaehScreen","screen_code","screen_name","page_to_redirect","module_id","getAlgaehScreens","addAlgaehComponent","screen_id","component_code","component_name","getAlgaehComponents","addAlgaehScreenElement","screen_element_code","screen_element_name","component_id","getAlgaehScreenElement","getFormulas","addFormula","algaeh_d_formulas_id","formula_for","formula","updateFormula","old_formulas_id","deleteFormula","module","exports"],"mappings":"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","file":"algaehMasters.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport {\n  whereCondition,\n  deleteRecord,\n  releaseDBConnection,\n  jsonArrayToObject\n} from \"../utils\";\n//import moment from \"moment\";\nimport httpStatus from \"../utils/httpStatus\";\n//import { LINQ } from \"node-linq\";\nimport { debugLog, debugFunction } from \"../utils/logging\";\n\n//created by irfan: to add AlgaehGroupMAster\nlet addAlgaehGroupMAster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_group` (app_group_code, app_group_name, app_group_desc, created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?)\",\n          [\n            input.app_group_code,\n            input.app_group_name,\n            input.app_group_desc,\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add addAlgaehRoleMAster\nlet addAlgaehRoleMAster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_group` (app_group_id, role_code, role_name, role_discreption,\\\n                     ,created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?,?)\",\n          [\n            input.app_group_id,\n            input.role_code,\n            input.role_name,\n            input.role_discreption,\n\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to get master complete modules\nlet getAlgaehModuleBACKUP = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select algaeh_d_module_id, module_name, licence_key  from algaeh_d_app_module\\\n        where  record_status=md5('A') \",\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          let outputArray = [];\n          if (result.length > 0) {\n            for (let i = 0; i < result.length; i++) {\n              connection.query(\n                \"select algaeh_app_screens_id, screen_code, screen_name, page_to_redirect, module_id\\\n                from algaeh_d_app_screens where record_status='A' and  module_id=?\",\n                [result[i].algaeh_d_module_id],\n                (error, screenResult) => {\n                  if (error) {\n                    releaseDBConnection(db, connection);\n                    next(error);\n                  }\n                  const obj = {\n                    ...result[i],\n                    ...{ ScreenList: screenResult }\n                  };\n\n                  outputArray.push(obj);\n                  if (i == result.length - 1) {\n                    req.records = outputArray;\n                    releaseDBConnection(db, connection);\n                    next();\n                  }\n                }\n              );\n            }\n          } else {\n            releaseDBConnection(db, connection);\n            req.records = result;\n            next();\n          }\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n//created by irfan: to get\nlet getRoleBaseActiveModulesBACKUP = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      connection.query(\n        \" select algaeh_m_module_role_privilage_mapping_id, module_id,module_name, icons,module_code,role_id, view_privilege\\\n        from algaeh_m_module_role_privilage_mapping MRP\\\n        inner join algaeh_d_app_module M on MRP.module_id=M.algaeh_d_module_id\\\n        where MRP.record_status='A' and M.record_status=md5('A') and MRP.role_id=?\",\n        [req.userIdentity.role_id],\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          let outputArray = [];\n\n          debugLog(\"roolo:\", req.userIdentity.role_id);\n          if (result.length > 0) {\n            for (let i = 0; i < result.length; i++) {\n              connection.query(\n                \"SELECT algaeh_m_screen_role_privilage_mapping_id, privilege_code, privilege_type,\\\n                module_role_map_id, screen_id,screen_code,screen_name, role_id, delete_privilege, add_privilege, view_privilege, \\\n                update_privilege, print_privilege, access_email from \\\n                algaeh_m_screen_role_privilage_mapping SRM inner join algaeh_d_app_screens S \\\n                on SRM.screen_id=S.algaeh_app_screens_id\\\n                where SRM.record_status='A' and S.record_status='A' and module_role_map_id=?\",\n                [result[i].algaeh_m_module_role_privilage_mapping_id],\n                (error, screenResult) => {\n                  if (error) {\n                    releaseDBConnection(db, connection);\n                    next(error);\n                  }\n                  const obj = {\n                    ...result[i],\n                    ...{ ScreenList: screenResult }\n                  };\n\n                  outputArray.push(obj);\n                  if (i == result.length - 1) {\n                    req.records = outputArray;\n                    releaseDBConnection(db, connection);\n                    next();\n                  }\n                }\n              );\n            }\n          } else {\n            releaseDBConnection(db, connection);\n            req.records = result;\n            next();\n          }\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n//created by irfan: to get\nlet getRoleBaseActiveModules = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      let superUser = \"\";\n      //for admin login\n      if (req.userIdentity.role_type == \"AD\") {\n        superUser = \" and   access_by <> 'SU'\";\n      }\n\n      new Promise((resolve, reject) => {\n        try {\n          if (\n            (req.userIdentity.role_type == \"SU\" &&\n              req.userIdentity.user_type == \"SU\") ||\n            (req.userIdentity.role_type == \"AD\" &&\n              req.userIdentity.user_type == \"AD\")\n          ) {\n            debugLog(\"role type:\", req.userIdentity);\n\n            connection.query(\n              \"select algaeh_d_module_id, module_name,module_code, icons,other_language  from algaeh_d_app_module\\\n              where  record_status=md5('A') \" +\n                superUser +\n                \" order by display_order \",\n              (error, result) => {\n                if (error) {\n                  releaseDBConnection(db, connection);\n                  next(error);\n                }\n                let outputArray = [];\n                if (result.length > 0) {\n                  for (let i = 0; i < result.length; i++) {\n                    connection.query(\n                      \"select algaeh_app_screens_id, screen_code, screen_name, page_to_redirect,other_language, module_id\\\n                      from algaeh_d_app_screens where record_status='A' and  module_id=?\",\n                      [result[i].algaeh_d_module_id],\n                      (error, screenResult) => {\n                        if (error) {\n                          releaseDBConnection(db, connection);\n                          next(error);\n                        }\n                        const obj = {\n                          ...result[i],\n                          ...{ ScreenList: screenResult }\n                        };\n\n                        outputArray.push(obj);\n                        if (i == result.length - 1) {\n                          req.records = outputArray;\n                          releaseDBConnection(db, connection);\n                          next();\n                        }\n                      }\n                    );\n                  }\n                } else {\n                  releaseDBConnection(db, connection);\n                  req.records = result;\n                  next();\n                }\n              }\n            );\n          } else {\n            resolve({});\n          }\n        } catch (e) {\n          reject(e);\n        }\n      }).then(modifyRes => {\n        debugLog(\"genreal  if \");\n        connection.query(\n          \" select algaeh_m_module_role_privilage_mapping_id, module_id,module_code,module_name, icons,module_code,other_language,role_id, view_privilege\\\n        from algaeh_m_module_role_privilage_mapping MRP\\\n        inner join algaeh_d_app_module M on MRP.module_id=M.algaeh_d_module_id\\\n        where MRP.record_status='A' and M.record_status=md5('A') and MRP.role_id=?\",\n          [req.userIdentity.role_id],\n          (error, result) => {\n            if (error) {\n              releaseDBConnection(db, connection);\n              next(error);\n            }\n            let outputArray = [];\n\n            debugLog(\"userIdentity:\", req.userIdentity);\n            if (result.length > 0) {\n              for (let i = 0; i < result.length; i++) {\n                connection.query(\n                  \"SELECT algaeh_m_screen_role_privilage_mapping_id, \\\n                module_role_map_id, screen_id,screen_code,screen_name,page_to_redirect,other_language, role_id, view_privilege \\\n                  from \\\n                algaeh_m_screen_role_privilage_mapping SRM inner join algaeh_d_app_screens S \\\n                on SRM.screen_id=S.algaeh_app_screens_id\\\n                where SRM.record_status='A' and S.record_status='A' and module_role_map_id=?\",\n                  [result[i].algaeh_m_module_role_privilage_mapping_id],\n                  (error, screenResult) => {\n                    if (error) {\n                      releaseDBConnection(db, connection);\n                      next(error);\n                    }\n                    const obj = {\n                      ...result[i],\n                      ...{ ScreenList: screenResult }\n                    };\n\n                    outputArray.push(obj);\n                    if (i == result.length - 1) {\n                      req.records = outputArray;\n                      releaseDBConnection(db, connection);\n                      next();\n                    }\n                  }\n                );\n              }\n            } else {\n              releaseDBConnection(db, connection);\n              req.records = result;\n              next();\n            }\n          }\n        );\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to get\nlet getRoleBaseInActiveComponents = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"SELECT  SERM.view_privilege, screen_element_id,screen_element_code,screen_element_name,component_code,\\\n        screen_code, module_code from algaeh_m_scrn_elmnt_role_privilage_mapping SERM\\\n        inner join algaeh_d_app_scrn_elements  SE on SERM.screen_element_id=SE.algaeh_d_app_scrn_elements_id\\\n        inner join algaeh_d_app_component C on SE.component_id=C.algaeh_d_app_component_id  \\\n        inner join algaeh_d_app_screens S on C.screen_id=S.algaeh_app_screens_id\\\n        inner join  algaeh_d_app_module M on S.module_id=M.algaeh_d_module_id\\\n         where SERM.record_status='A' and SE.record_status='A' and  C.record_status='A'\\\n         and  S.record_status='A' and M.record_status=md5('A') and role_id=?\",\n        [req.userIdentity.role_id],\n        (error, elementsHide) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n\n          connection.query(\n            \"SELECT module_code,\\\n            component_code,screen_code from \\\n            algaeh_m_component_role_privilage_mapping CRM inner join algaeh_d_app_component C\\\n             on CRM.component_id=C.algaeh_d_app_component_id\\\n             inner join algaeh_d_app_screens S on C.screen_id=S.algaeh_app_screens_id\\\n             inner join algaeh_d_app_module M on S.module_id=M.algaeh_d_module_id\\\n             where  CRM.record_status='A' and C.record_status='A' and  M.record_status= md5('A') and \\\n             S.record_status='A'  and role_id=?\",\n            [req.userIdentity.role_id],\n            (error, componentHide) => {\n              if (error) {\n                releaseDBConnection(db, connection);\n                next(error);\n              }\n\n              releaseDBConnection(db, connection);\n              req.records = {\n                listOfComponentsToHide: componentHide,\n                screenElementsToHide: elementsHide\n              };\n              next();\n            }\n          );\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add\nlet addAlgaehModule = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (\n        req.userIdentity.role_type == \"SU\" &&\n        req.userIdentity.group_type == \"SU\"\n      ) {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_module` (module_code, module_name, licence_key, access_by, icons, other_language,  created_date, created_by, updated_date, updated_by, record_status)\\\n            VALUE(?,?,?,?,?,?, ?,?,?,?,md5(?))\",\n          [\n            input.module_code,\n            input.module_name,\n            input.licence_key,\n            input.access_by,\n            input.icons,\n            input.other_language,\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by,\n            \"A\"\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getAlgaehModules = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let superUser = \"\";\n    //for admin login\n    if (req.userIdentity.role_type == \"AD\") {\n      superUser = \" and   access_by <> 'SU'\";\n    }\n    debugLog(\"req.userIdentity:\", req.userIdentity);\n    db.getConnection((error, connection) => {\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"select algaeh_d_module_id, module_name,module_code, icons,other_language  from algaeh_d_app_module\\\n              where  record_status=md5('A') \" +\n            superUser +\n            \" order by algaeh_d_module_id desc\",\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet updateAlgaehModules = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let input = extend({}, req.body);\n\n      if (\n        req.userIdentity.role_type == \"SU\" &&\n        req.userIdentity.group_type == \"SU\"\n      ) {\n        if (\n          input.hims_f_dental_treatment_id != \"null\" ||\n          input.hims_f_dental_treatment_id != undefined\n        ) {\n          connection.query(\n            \"update hims_f_dental_treatment set  scheduled_date=?, distal=?, incisal=?,\\\n             occlusal=?, mesial=?, buccal=?, labial=?, cervical=?, palatal=?, lingual=?,\\\n               updated_date=?, updated_by=? WHERE  `record_status`='A' and `hims_f_dental_treatment_id`=?;\",\n            [\n              input.scheduled_date,\n\n              input.distal,\n              input.incisal,\n              input.occlusal,\n              input.mesial,\n              input.buccal,\n              input.labial,\n              input.cervical,\n              input.palatal,\n              input.lingual,\n              new Date(),\n              input.updated_by,\n              input.hims_f_dental_treatment_id\n            ],\n            (error, results) => {\n              releaseDBConnection(db, connection);\n              if (error) {\n                next(error);\n              }\n\n              if (results.affectedRows > 0) {\n                req.records = results;\n                next();\n              } else {\n                req.records = { affectedRows: 0 };\n                next();\n              }\n            }\n          );\n        } else {\n          releaseDBConnection(db, connection);\n          req.records = { invalid_input: true };\n          next();\n        }\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n      //----------------------\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//==========================\n\n//created by irfan: to add\nlet addAlgaehScreen = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (\n        req.userIdentity.role_type == \"SU\" &&\n        req.userIdentity.group_type == \"SU\"\n      ) {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_screens` (screen_code, screen_name, page_to_redirect, module_id, other_language,  created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?,?,?)\",\n          [\n            input.screen_code,\n            input.screen_name,\n            input.page_to_redirect,\n            input.module_id,\n            input.other_language,\n\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getAlgaehScreens = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    debugLog(\"req.userIdentity:\", req.userIdentity);\n\n    let module_id = \"\";\n    if (req.query.module_id != undefined && req.query.module_id != null) {\n      module_id = ` and module_id=${req.query.module_id} `;\n    }\n\n    db.getConnection((error, connection) => {\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"select algaeh_app_screens_id, screen_code, screen_name, page_to_redirect, module_id, other_language  from algaeh_d_app_screens\\\n              where  record_status='A'\" +\n            module_id +\n            \"  order by algaeh_app_screens_id desc \",\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add\nlet addAlgaehComponent = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (\n        req.userIdentity.role_type == \"SU\" &&\n        req.userIdentity.group_type == \"SU\"\n      ) {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_component` (screen_id, component_code, component_name,  created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?)\",\n          [\n            input.screen_id,\n            input.component_code,\n            input.component_name,\n\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getAlgaehComponents = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let screen_id = \"\";\n    if (req.query.screen_id != undefined && req.query.screen_id != null) {\n      screen_id = ` and screen_id=${req.query.screen_id} `;\n    }\n\n    debugLog(\"req.userIdentity:\", req.userIdentity);\n    db.getConnection((error, connection) => {\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"select  algaeh_d_app_component_id, screen_id, component_code, component_name  from algaeh_d_app_component\\\n              where  record_status='A' \" +\n            screen_id +\n            \" order by algaeh_d_app_component_id desc \",\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add\nlet addAlgaehScreenElement = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      if (\n        req.userIdentity.role_type == \"SU\" &&\n        req.userIdentity.group_type == \"SU\"\n      ) {\n        connection.query(\n          \"INSERT INTO `algaeh_d_app_scrn_elements` ( screen_element_code, screen_element_name, component_id, created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?)\",\n          [\n            input.screen_element_code,\n            input.screen_element_name,\n            input.component_id,\n\n            new Date(),\n            input.created_by,\n            new Date(),\n            input.updated_by\n          ],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to\nlet getAlgaehScreenElement = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let component_id = \"\";\n    if (req.query.component_id != undefined && req.query.component_id != null) {\n      component_id = ` and component_id=${req.query.component_id} `;\n    }\n    debugLog(\"req.userIdentity:\", req.userIdentity);\n    db.getConnection((error, connection) => {\n      if (req.userIdentity.role_type != \"GN\") {\n        connection.query(\n          \"select  algaeh_d_app_scrn_elements_id, screen_element_code, screen_element_name, component_id  from algaeh_d_app_scrn_elements\\\n              where  record_status='A' \" +\n            component_id +\n            \" order by algaeh_d_app_scrn_elements_id desc\",\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n            req.records = result;\n            next();\n          }\n        );\n      } else {\n        req.records = {\n          validUser: false,\n          message: \"you dont have admin privilege\"\n        };\n        next();\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan:\nlet getFormulas = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select algaeh_d_formulas_id, formula_for, formula from algaeh_d_formulas \",\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan:\nlet addFormula = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `algaeh_d_formulas` (algaeh_d_formulas_id, formula_for, formula)\\\n          VALUE(?,?,?)\",\n        [input.algaeh_d_formulas_id, input.formula_for, input.formula],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan:\nlet updateFormula = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      debugLog(\"bode:\", req.body);\n      connection.query(\n        \" UPDATE algaeh_d_formulas SET algaeh_d_formulas_id = ?, formula_for = ?,\\\n         formula = ? WHERE algaeh_d_formulas_id =?;\",\n        [\n          input.algaeh_d_formulas_id,\n          input.formula_for,\n          input.formula,\n          input.old_formulas_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan:\nlet deleteFormula = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \" DELETE FROM algaeh_d_formulas WHERE algaeh_d_formulas_id = ?;\",\n        [input.algaeh_d_formulas_id],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//--------ROLE BASE SCREEN ASSIGNMENT---------------\n\nmodule.exports = {\n  addAlgaehGroupMAster,\n  addAlgaehRoleMAster,\n  addAlgaehModule,\n  getRoleBaseActiveModules,\n  getRoleBaseInActiveComponents,\n  getAlgaehModules,\n  addAlgaehScreen,\n  getAlgaehScreens,\n  addAlgaehComponent,\n  getAlgaehComponents,\n  addAlgaehScreenElement,\n  getAlgaehScreenElement,\n  getFormulas,\n  addFormula,\n  updateFormula,\n  deleteFormula\n};\n"]}