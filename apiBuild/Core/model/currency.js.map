{"version":3,"sources":["../../../src/model/currency.js"],"names":["addCurrencyMaster","req","res","next","db","httpStatus","dataBaseNotInitilizedError","input","body","getConnection","error","connection","query","currency_code","currency_description","currency_symbol","decimal_places","symbol_position","thousand_separator","decimal_separator","negative_separator","Date","created_by","updated_by","result","records","e","getCurrencyMaster","deleteCurrencyMaster","tableName","id","hims_d_currency_id","values","updateCurrencyMaster","module","exports"],"mappings":"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","file":"currency.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport {\n  whereCondition,\n  deleteRecord,\n  releaseDBConnection,\n  jsonArrayToObject\n} from \"../utils\";\n//import moment from \"moment\";\nimport httpStatus from \"../utils/httpStatus\";\n//import { LINQ } from \"node-linq\";\nimport { debugLog } from \"../utils/logging\";\n\n//created by irfan: to addCurrencyMaster\nlet addCurrencyMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_d_currency` (currency_code, currency_description, currency_symbol, decimal_places, symbol_position,\\\n          thousand_separator, decimal_separator, negative_separator,  created_date, created_by, updated_date, updated_by)\\\n          VALUE(?,?,?,?,?,?,?,?,?,?,?,?)\",\n        [\n          input.currency_code,\n          input.currency_description,\n          input.currency_symbol,\n          input.decimal_places,\n          input.symbol_position,\n          input.thousand_separator,\n          input.decimal_separator,\n          input.negative_separator,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to getCurrencyMaster\nlet getCurrencyMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_d_currency_id, currency_code, currency_description, currency_symbol,\\\n        decimal_places, symbol_position, thousand_separator, decimal_separator, negative_separator\\\n        FROM hims_d_currency where record_status='A' order by hims_d_currency_id desc \",\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to deleteCurrencyMaster\nlet deleteCurrencyMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_currency\",\n        id: req.body.hims_d_currency_id,\n        query:\n          \"UPDATE hims_d_currency SET  record_status='I' WHERE hims_d_currency_id=?\",\n        values: [req.body.hims_d_currency_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to  updateCurrencyMaster\nlet updateCurrencyMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"UPDATE `hims_d_currency` SET  decimal_places=?, symbol_position=?, thousand_separator=?, decimal_separator=?, negative_separator=?,\\\n           updated_date=?, updated_by=? WHERE  `record_status`='A' and `hims_d_currency_id`=?;\",\n        [\n          input.decimal_places,\n          input.symbol_position,\n          input.thousand_separator,\n          input.decimal_separator,\n          input.negative_separator,\n          new Date(),\n          input.updated_by,\n          input.hims_d_currency_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nmodule.exports = {\n  addCurrencyMaster,\n  getCurrencyMaster,\n  deleteCurrencyMaster,\n  updateCurrencyMaster\n};\n"]}