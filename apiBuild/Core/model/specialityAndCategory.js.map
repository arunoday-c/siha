{"version":3,"sources":["../../../src/model/specialityAndCategory.js"],"names":["addEmployeeSpecialityMaster","req","res","next","db","httpStatus","dataBaseNotInitilizedError","input","body","getConnection","error","connection","query","sub_department_id","speciality_code","speciality_name","arabic_name","speciality_desc","Date","created_by","updated_by","result","records","e","getEmployeeSpecialityMaster","selectWhere","where","condition","values","addEmployeeCategoryMaster","employee_category_code","employee_category_name","employee_category_desc","effective_start_date","getEmployeeCategoryMaster","hims_employee_category_id","deleteEmployeeCategoryMaster","tableName","id","deleteEmployeeSpecialityMaster","hims_d_employee_speciality_id","updateEmployeeSpecialityMaster","speciality_status","updateEmployeeCategoryMaster","employee_category_status","makeEmployeeCategoryInActive","makeEmployeeSpecialityInActive","addCategorySpecialityMappings","category_id","speciality_id","description","category_speciality_status","getCategorySpecialityMap","hims_m_category_speciality_mappings_id","updateCategorySpecialityMap","deleteCategorySpecialityMap","makeCategorySpecialityMapInActive","module","exports"],"mappings":"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","file":"specialityAndCategory.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport {\n  whereCondition,\n  deleteRecord,\n  releaseDBConnection,\n  jsonArrayToObject\n} from \"../utils\";\n//import moment from \"moment\";\nimport httpStatus from \"../utils/httpStatus\";\n//import { LINQ } from \"node-linq\";\nimport { debugLog } from \"../utils/logging\";\n\n//created by irfan: to add addSpecialityMaster\nlet addEmployeeSpecialityMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_d_employee_speciality` (sub_department_id, speciality_code, speciality_name, arabic_name,speciality_desc  ,created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?,?,?)\",\n        [\n          input.sub_department_id,\n          input.speciality_code,\n          input.speciality_name,\n          input.arabic_name,\n          input.speciality_desc,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to get SpecialityMaster\nlet getEmployeeSpecialityMaster = (req, res, next) => {\n  let selectWhere = {\n    sub_department_id: \"ALL\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let where = whereCondition(extend(selectWhere, req.query));\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_d_employee_speciality_id, sub_department_id, speciality_code,\\\n        speciality_status,speciality_name, arabic_name,speciality_desc from hims_d_employee_speciality where record_status='A' and\" +\n          where.condition +\n          \" order by hims_d_employee_speciality_id desc\",\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add\nlet addEmployeeCategoryMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_d_employee_category` (employee_category_code, employee_category_name, arabic_name,employee_category_desc,  \\\n            effective_start_date,   created_date, created_by, updated_date, updated_by)\\\n              VALUE(?,?,?,?,?,?,?,?,?)\",\n        [\n          input.employee_category_code,\n          input.employee_category_name,\n          input.arabic_name,\n          input.employee_category_desc,\n          input.effective_start_date,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to get\nlet getEmployeeCategoryMaster = (req, res, next) => {\n  let selectWhere = {\n    hims_employee_category_id: \"ALL\"\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(selectWhere, req.query));\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_employee_category_id, employee_category_code, employee_category_name, arabic_name,employee_category_desc, employee_category_status, \\\n          effective_start_date, effective_end_date from hims_d_employee_category where record_status='A' and\" +\n          where.condition +\n          \" order by hims_employee_category_id desc\",\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to delete\nlet deleteEmployeeCategoryMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_employee_category\",\n        id: req.body.hims_employee_category_id,\n        query:\n          \"UPDATE hims_d_employee_category SET  record_status='I' WHERE  record_status='A' and hims_employee_category_id=?\",\n        values: [req.body.hims_employee_category_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to delete\nlet deleteEmployeeSpecialityMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_employee_speciality\",\n        id: req.body.hims_d_employee_speciality_id,\n        query:\n          \"UPDATE hims_d_employee_speciality SET  record_status='I' WHERE  record_status='A' and hims_d_employee_speciality_id=?\",\n        values: [req.body.hims_d_employee_speciality_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to update\nlet updateEmployeeSpecialityMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE `hims_d_employee_speciality` SET  speciality_code=?,speciality_name=?, arabic_name=? , speciality_desc=?,\\\n        speciality_status=?,updated_date=?, updated_by=?  WHERE  `record_status`='A' and `hims_d_employee_speciality_id`=?;\",\n        [\n          input.speciality_code,\n          input.speciality_name,\n          input.arabic_name,\n          input.speciality_desc,\n          input.speciality_status,\n          new Date(),\n          input.updated_by,\n          input.hims_d_employee_speciality_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n//created by irfan: to update\nlet updateEmployeeCategoryMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE `hims_d_employee_category` SET  employee_category_code=?, employee_category_name=?,arabic_name=?,employee_category_desc=?,\\\n         effective_start_date=?,employee_category_status=?,\\\n           updated_date=?, updated_by=?  WHERE  `record_status`='A' and `hims_employee_category_id`=?;\",\n        [\n          input.employee_category_code,\n          input.employee_category_name,\n          input.arabic_name,\n          input.employee_category_desc,\n          input.effective_start_date,\n          input.employee_category_status,\n\n          new Date(),\n          input.updated_by,\n          input.hims_employee_category_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:irfan to\nlet makeEmployeeCategoryInActive = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_employee_category\",\n        id: req.body.hims_employee_category_id,\n        query:\n          \"UPDATE hims_d_employee_category SET  employee_category_status='I',effective_end_date=CURDATE() WHERE record_status='A' and hims_employee_category_id=?\",\n        values: [req.body.hims_employee_category_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by:irfan to\nlet makeEmployeeSpecialityInActive = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_employee_speciality\",\n        id: req.body.hims_d_employee_speciality_id,\n        query:\n          \"UPDATE hims_d_employee_speciality SET  speciality_status='I' WHERE record_status='A' and hims_d_employee_speciality_id=?\",\n        values: [req.body.hims_d_employee_speciality_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to add\nlet addCategorySpecialityMappings = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"INSERT INTO `hims_m_category_speciality_mappings` (category_id, speciality_id,description, category_speciality_status, effective_start_date, created_date, created_by, updated_date, updated_by)\\\n            VALUE(?,?,?,?,?,?,?,?,?)\",\n        [\n          input.category_id,\n          input.speciality_id,\n          input.description,\n          input.category_speciality_status,\n          input.effective_start_date,\n          new Date(),\n          input.created_by,\n          new Date(),\n          input.updated_by\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to get\nlet getCategorySpecialityMap = (req, res, next) => {\n  let selectWhere = {\n    hims_d_employee_speciality_id: \"ALL\",\n    category_speciality_status: \"ALL\",\n    employee_category_status: \"ALL\",\n    speciality_status: \"ALL\",\n    hims_m_category_speciality_mappings_id: \"ALL\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let where = whereCondition(extend(selectWhere, req.query));\n\n    // select hims_m_category_speciality_mappings_id,speciality_id, category_speciality_status, \\\n    //     hims_employee_category_id, employee_category_code, employee_category_name, employee_category_desc\\\n    //     from hims_m_category_speciality_mappings  CSM,hims_d_employee_category C where CSM.record_status='A' and category_speciality_status='A' \\\n    //     and  C.record_status='A' and C.employee_category_status='A' and CSM.category_id=C.hims_employee_category_id\\\n    //     and speciality_id=? order by hims_m_category_speciality_mappings_id desc\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_m_category_speciality_mappings_id, category_id, speciality_id, description, category_speciality_status,\\\nhims_employee_category_id, employee_category_code, employee_category_name,C.arabic_name as category_arabic_name, employee_category_desc, employee_category_status, \\\nhims_d_employee_speciality_id,  speciality_code, speciality_name, S.arabic_name as speciality_arabic_name, speciality_desc, speciality_status \\\n from hims_m_category_speciality_mappings CSM,hims_d_employee_category C,hims_d_employee_speciality S \\\nwhere CSM.record_status='A' and C.record_status='A' and S.record_status='A' and \\\nCSM.category_id=C.hims_employee_category_id and CSM.speciality_id=S.hims_d_employee_speciality_id  and \" +\n          where.condition +\n          \" order by hims_m_category_speciality_mappings_id desc \",\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to updateCategory Speciality Map\nlet updateCategorySpecialityMap = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"UPDATE `hims_m_category_speciality_mappings` SET  category_id=?,speciality_id=?,description=?,category_speciality_status=?,effective_start_date=?,\\\n        updated_date=?, updated_by=?  WHERE  `record_status`='A' and `hims_m_category_speciality_mappings_id`=?;\",\n        [\n          input.category_id,\n          input.speciality_id,\n          input.description,\n          input.category_speciality_status,\n          input.effective_start_date,\n          new Date(),\n          input.updated_by,\n          input.hims_m_category_speciality_mappings_id\n        ],\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: to delete\nlet deleteCategorySpecialityMap = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_m_category_speciality_mappings\",\n        id: req.body.hims_m_category_speciality_mappings_id,\n\n        query:\n          \"UPDATE hims_m_category_speciality_mappings SET  record_status='I' WHERE  record_status='A' and hims_m_category_speciality_mappings_id=?\",\n        values: [req.body.hims_m_category_speciality_mappings_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n//created by irfan: to Make Inactive\nlet makeCategorySpecialityMapInActive = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_m_category_speciality_mappings\",\n        id: req.body.hims_m_category_speciality_mappings_id,\n\n        query:\n          \"UPDATE hims_m_category_speciality_mappings SET  category_speciality_status='I' WHERE  record_status='A' and hims_m_category_speciality_mappings_id=?\",\n        values: [req.body.hims_m_category_speciality_mappings_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      },\n      true\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  addEmployeeSpecialityMaster,\n  getEmployeeSpecialityMaster,\n  addEmployeeCategoryMaster,\n  getEmployeeCategoryMaster,\n  deleteEmployeeCategoryMaster,\n  deleteEmployeeSpecialityMaster,\n  updateEmployeeSpecialityMaster,\n  updateEmployeeCategoryMaster,\n  makeEmployeeCategoryInActive,\n  addCategorySpecialityMappings,\n  makeEmployeeSpecialityInActive,\n  getCategorySpecialityMap,\n\n  updateCategorySpecialityMap,\n  deleteCategorySpecialityMap,\n  makeCategorySpecialityMapInActive\n};\n"]}