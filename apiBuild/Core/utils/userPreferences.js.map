{"version":3,"sources":["../../../src/utils/userPreferences.js"],"names":["db","loki","autoload","saveUserPreferences","req","res","next","settings","dbName","body","userId","userIdentity","algaeh_d_app_user_id","collection","getCollection","usedRow","find","screenName","identifier","remove","userCollection","addCollection","disableMeta","insert","selectedValue","value","name","save","status","json","success","records","getUserPreferences","query","filePath","path","join","__dirname","fs","existsSync","loadJSON","readFileSync","row","where","obj","length","message","module","exports"],"mappings":"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","file":"userPreferences.js","sourcesContent":["import loki from \"lokijs\";\nimport extend from \"extend\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nlet db = new loki(\"algaeh_users.json\", { autoload: true });\nlet saveUserPreferences = (req, res, next) => {\n  let settings = extend(\n    {\n      dbName: \"algaeh_users\"\n    },\n    req.body\n  );\n\n  settings.userId = req.userIdentity.algaeh_d_app_user_id;\n  //let db = new loki(\"algaeh_users.json\", { autoload: true });\n\n  let collection = db.getCollection(\"User_\" + settings.userId);\n\n  if (collection != null) {\n    let usedRow = collection.find({\n      screenName: settings.screenName,\n      identifier: settings.identifier\n    });\n    if (usedRow) collection.remove(usedRow);\n  }\n\n  let userCollection = db.addCollection(\"User_\" + settings.userId, {\n    disableMeta: true\n  });\n\n  userCollection.insert({\n    screenName: settings.screenName,\n    identifier: settings.identifier,\n    selectedValue: settings.value,\n    name: settings.name\n  });\n  db.save();\n  res.status(200).json({\n    success: false,\n    records: \"done\"\n  });\n};\nlet getUserPreferences = (req, res, next) => {\n  let settings = extend(\n    {\n      dbName: \"algaeh_users\"\n    },\n    req.query\n  );\n\n  settings.userId = req.userIdentity.algaeh_d_app_user_id;\n\n  let filePath = path.join(__dirname, \"../../algaeh_users.json\");\n\n  if (!fs.existsSync(filePath)) {\n    res.status(200).json({\n      success: true,\n      records: {}\n    });\n    return;\n  }\n\n  db.loadJSON(fs.readFileSync(filePath));\n\n  let userCollection = db.getCollection(\"User_\" + settings.userId);\n  if (userCollection == null) {\n    res.status(200).json({\n      success: true,\n      records: {}\n    });\n  }\n  let row;\n  if (settings.identifier != null) {\n    row = userCollection.where(obj => {\n      return (\n        obj.screenName == settings.screenName &&\n        obj.identifier == settings.identifier\n      );\n    });\n    if (row != null && row.length != 0) row = row[0];\n  } else {\n    res.status(400).json({\n      success: false,\n      message: \"Please provide identifier\"\n    });\n  }\n\n  res.status(200).json({\n    success: true,\n    records: row\n  });\n};\n\nmodule.exports = {\n  getUserPreferences,\n  saveUserPreferences\n};\n"]}