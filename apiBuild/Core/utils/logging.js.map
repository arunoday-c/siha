{"version":3,"sources":["../../../src/utils/logging.js"],"names":["rotatingDate","require","tsFormat","Date","format","logDirectory","path","join","__dirname","keys","logpath","logger","winston","Logger","transports","filename","timestamp","datePattern","logFileDatePatter","prepend","maxSize","logFileSize","level","logLevel","showLevel","eol","debugFunction","debugLog","functionName","message","obj","log","wLogger","requestTracking","Obj","info","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,eAAeC,QAAQ,2BAAR,CAArB;AACA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACrB,SAAO,sBAAO,IAAIC,IAAJ,EAAP,EAAmBC,MAAnB,CAA0B,qBAA1B,CAAP;AACD,CAFD,C,CAEG;AACH,IAAIC,eAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAAWC,eAAKC,OAArC,CAAnB;;AAEA,IAAMC,SAAS,IAAIC,kBAAQC,MAAZ,CAAmB;AAChCC,cAAY,CACV,IAAId,YAAJ,CAAiB;AACfe,cAAaV,YAAb,yBADe;AAEfW,eAAWd,QAFI;AAGfe,iBAAaR,eAAKS,iBAHH;AAIfC,aAAS,IAJM;AAKfC,aAASX,eAAKY,WALC;AAMfC,WAAOb,eAAKc,QANG;AAOfC,eAAW,IAPI;AAQfC,SAAK;AARU,GAAjB,CADU;AADoB,CAAnB,CAAf;;AAiBA,IAAIC,gBAAgB,SAAhBA,aAAgB,eAAgB;AAClCC,WAAS,qBAAqBC,YAA9B;AACD,CAFD;;AAKA,IAAID,WAAW,SAAXA,QAAW,CAACE,OAAD,EAAUC,GAAV,EAAkB;AAC/BA,QAAMA,OAAO,IAAb;AACA,MAAIA,OAAO,IAAX,EAAiB;AACf,QAAI,QAAOD,OAAP,yCAAOA,OAAP,MAAkB,QAAtB,EAAgClB,OAAOoB,GAAP,CAAW,OAAX,EAAoB,IAApB,EAA0BF,OAA1B,EAAhC,KACKlB,OAAOoB,GAAP,CAAW,OAAX,EAAoB,IAApB,EAA0BF,OAA1B;AACN,GAHD,MAGO;AACL,QAAI,QAAOC,GAAP,yCAAOA,GAAP,MAAc,QAAlB,EAA4BnB,OAAOoB,GAAP,CAAW,OAAX,EAAoBF,UAAU,IAA9B,EAAoCC,GAApC,EAA5B,KACKnB,OAAOoB,GAAP,CAAW,OAAX,EAAoBF,UAAU,IAA9B,EAAoCC,GAApC;AACN;AACF,CATD;;AAYA,IAAME,UAAU,IAAIpB,kBAAQC,MAAZ,CAAmB;AACjCC,cAAY,CACV,IAAId,YAAJ,CAAiB;AACfe,cAAaV,YAAb,mCADe;AAEf;AACAY,iBAAaR,eAAKS,iBAHH;AAIfC,aAAS,IAJM;AAKfC,aAASX,eAAKY,WALC;AAMfC,WAAOb,eAAKc,QANG;AAOfC,eAAW,KAPI;AAQfR,eAAW,KARI;AASfS,SAAK;AATU,GAAjB,CADU;AADqB,CAAnB,CAAhB;AAeA,IAAMQ,kBAAkB,SAAlBA,eAAkB,CAACJ,OAAD,EAAUK,GAAV,EAAkB;AACxCA,QAAMA,OAAO,IAAb;AACAF,UAAQG,IAAR,CAAaN,UAAU,IAAvB,EAA6BK,GAA7B;AACD,CAHD;;AAKA;AACAE,OAAOC,OAAP,GAAiB,EAAE1B,cAAF,EAAUgB,kBAAV,EAAoBD,4BAApB,EAAmCO,gCAAnC,EAAjB","file":"logging.js","sourcesContent":["import winston from \"winston\";\nimport keys from \"../keys/keys\";\nimport path from \"path\";\nimport moment from \"moment\";\nconst rotatingDate = require(\"winston-daily-rotate-file\");\nconst tsFormat = () => {\n  return moment(new Date()).format(\"DD-MM-YYYY HH:mm:ss\");\n}; //new Date().toLocaleTimeString();\nlet logDirectory = path.join(__dirname, \"../../\" + keys.logpath);\n\nconst logger = new winston.Logger({\n  transports: [\n    new rotatingDate({\n      filename: `${logDirectory}/hims-app-%DATE%.log`,\n      timestamp: tsFormat,\n      datePattern: keys.logFileDatePatter,\n      prepend: true,\n      maxSize: keys.logFileSize,\n      level: keys.logLevel,\n      showLevel: true,\n      eol: \"\\r\\n\"\n    })\n  ]\n});\n\n\n\nlet debugFunction = functionName => {\n  debugLog(\"Function Name : \" + functionName);\n};\n\n\nlet debugLog = (message, obj) => {\n  obj = obj || null;\n  if (obj == null) {\n    if (typeof message != \"object\") logger.log(\"debug\", \"%s\", message);\n    else logger.log(\"debug\", \"%j\", message);\n  } else {\n    if (typeof obj != \"object\") logger.log(\"debug\", message + \"%s\", obj);\n    else logger.log(\"debug\", message + \"%j\", obj);\n  }\n};\n\n\nconst wLogger = new winston.Logger({\n  transports: [\n    new rotatingDate({\n      filename: `${logDirectory}/hims-app-req-track-%DATE%.log`,\n      // timestamp: tsFormat,\n      datePattern: keys.logFileDatePatter,\n      prepend: true,\n      maxSize: keys.logFileSize,\n      level: keys.logLevel,\n      showLevel: false,\n      timestamp: false,\n      eol: \",\\r\\n\"\n    })\n  ]\n});\nconst requestTracking = (message, Obj) => {\n  Obj = Obj || null;\n  wLogger.info(message + \"%j\", Obj);\n};\n\n//winston.add(winston.transports.Http, rotatingDate);\nmodule.exports = { logger, debugLog, debugFunction, requestTracking };\n"]}