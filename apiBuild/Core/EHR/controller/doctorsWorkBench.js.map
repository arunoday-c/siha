{"version":3,"sources":["../../../../src/EHR/controller/doctorsWorkBench.js"],"names":["config","db","api","post","physicalExaminationHeader","req","res","next","result","records","status","httpStatus","ok","json","success","releaseConnection","physicalExaminationDetails","physicalExaminationSubDetails","get","getPhysicalExamination","getAllPhysicalExamination","addOrder","addSample","addAnalytes","addReviewOfSysHeader","addReviewOfSysDetails","getReviewOfSystem","addAllergy","getAllergyDetails","addChronicalConditions","getChronicalConditions","addEncounterReview","getEncounterReview","getMyDay","put","updatdePatEncntrStatus","resultSelect","length","generateError","notFound","getPatientProfile","getChiefComplaints","addPatientChiefComplaints","addNewChiefComplaint","getPatientChiefComplaints","delete","deletePatientChiefComplaints","addPatientNewAllergy","getAllAllergies","getPatientAllergy","updatePatientChiefComplaints","addPatientDiagnosis","addPatientROS","updatePatientDiagnosis","getPatientROS","updatePatientROS","getPatientVitals","addPatientVitals","addPatientPhysicalExamination","updatePatientAllergy","addDietAdvice","getEpisodeDietAdvice","addReferalDoctor","addFollowUp","getPatientPhysicalExamination","updatePatientPhysicalExam","getPatientAllergies","getPatientDiagnosis","getPatientDiet","getVitalsHeaderMaster","addPatientHistory","getPatientHistory","getFollowUp","getPatientEpisodeSummary"],"mappings":"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","file":"doctorsWorkBench.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../../utils\";\nimport httpStatus from \"../../utils/httpStatus\";\nimport {\n  physicalExaminationHeader,\n  physicalExaminationDetails,\n  physicalExaminationSubDetails,\n  getPhysicalExamination,\n  addOrder,\n  addSample,\n  addAnalytes,\n  addReviewOfSysHeader,\n  addReviewOfSysDetails,\n  getReviewOfSystem,\n  addAllergy,\n  getAllergyDetails,\n  addChronicalConditions,\n  getChronicalConditions,\n  addEncounterReview,\n  getEncounterReview,\n  getMyDay,\n  updatdePatEncntrStatus,\n  getPatientProfile,\n  getChiefComplaints,\n  addPatientChiefComplaints,\n  getPatientChiefComplaints,\n  addNewChiefComplaint,\n  deletePatientChiefComplaints,\n  addPatientNewAllergy,\n  getAllAllergies,\n  getPatientAllergy,\n  updatePatientChiefComplaints,\n  addPatientDiagnosis,\n  getPatientDiagnosis,\n  addPatientROS,\n  getPatientROS,\n  updatePatientROS,\n  updatePatientDiagnosis,\n  getPatientVitals,\n  addPatientVitals,\n  addPatientPhysicalExamination,\n  updatePatientAllergy,\n  addDietAdvice,\n  getEpisodeDietAdvice,\n  addReferalDoctor,\n  addFollowUp,\n  getPatientPhysicalExamination,\n  updatePatientPhysicalExam,\n  getPatientAllergies,\n  getPatientDiet,\n  getAllPhysicalExamination,\n  getVitalsHeaderMaster,\n  addPatientHistory,\n  getPatientHistory,\n  getFollowUp,\n  getPatientEpisodeSummary\n} from \"../model/doctorsWorkBench\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan : to add  physical_examination_header\n  api.post(\n    \"/physicalExaminationHeader/add\",\n    physicalExaminationHeader,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add  physical_examination_details\n  api.post(\n    \"/physicalExaminationDetails/add\",\n    physicalExaminationDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add  physical_examination_subdetails\n  api.post(\n    \"/physicalExaminationSubDetails/add\",\n    physicalExaminationSubDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to get physical examination\n  api.get(\n    \"/getPhysicalExamination/get\",\n    getPhysicalExamination,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getPhysicalExamination/getAllDepartmentBased\",\n    getAllPhysicalExamination,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan : add order\n  api.post(\n    \"/addOrder\",\n    addOrder,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : add sample\n  api.post(\n    \"/addSample\",\n    addSample,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : add analytes\n  api.post(\n    \"/addAnalytes\",\n    addAnalytes,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : add review_of_system_header\n  api.post(\n    \"/addReviewOfSysHeader\",\n    addReviewOfSysHeader,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : add review_of_system_details\n  api.post(\n    \"/addReviewOfSysDetails\",\n    addReviewOfSysDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  getReviewOfSystem\n  api.get(\n    \"/getReviewOfSystem\",\n    getReviewOfSystem,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : add Allergy\n  api.post(\n    \"/addAllergy\",\n    addAllergy,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : get Allergy details\n  api.get(\n    \"/getAllergyDetails\",\n    getAllergyDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :  addChronicalConditions\n  api.post(\n    \"/addChronicalConditions\",\n    addChronicalConditions,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : get ChronicalConditions\n  api.get(\n    \"/getChronicalConditions\",\n    getChronicalConditions,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :  addEncounterReview\n  api.post(\n    \"/addEncounterReview\",\n    addEncounterReview,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : get getEncounterReview\n  api.get(\n    \"/getEncounterReview\",\n    getEncounterReview,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getMyDay\",\n    getMyDay,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updatdePatEncntrStatus\",\n    updatdePatEncntrStatus,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  getPatientProfile\n  api.get(\n    \"/getPatientProfile\",\n    getPatientProfile,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  getChiefComplaints;\n\n  // created by irfan : to  getChiefComplaints\n  api.get(\n    \"/getChiefComplaints\",\n    getChiefComplaints,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add addPatientChiefComplaints\n  api.post(\n    \"/addPatientChiefComplaints\",\n    addPatientChiefComplaints,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add addNewChiefComplaint\n  api.post(\n    \"/addNewChiefComplaint\",\n    addNewChiefComplaint,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  getPatientChiefComplaints\n  api.get(\n    \"/getPatientChiefComplaints\",\n    getPatientChiefComplaints,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  deletePatientChiefComplaints\n  api.delete(\n    \"/deletePatientChiefComplaints\",\n    deletePatientChiefComplaints,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add new allergy for patient\n  api.post(\n    \"/addPatientNewAllergy\",\n    addPatientNewAllergy,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  get all allergies\n  api.get(\n    \"/getAllAllergies\",\n    getAllAllergies,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  get patient wise allergy\n  api.get(\n    \"/getPatientAllergy\",\n    getPatientAllergy,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan : to update patient chief complaints\n  api.put(\n    \"/updatePatientChiefComplaints\",\n    updatePatientChiefComplaints,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add patient Diagnosis\n  api.post(\n    \"/addPatientDiagnosis\",\n    addPatientDiagnosis,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to add patient encounter review\n  api.post(\n    \"/addPatientROS\",\n    addPatientROS,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to update Patient Diagnosis\n  api.put(\n    \"/updatePatientDiagnosis\",\n    updatePatientDiagnosis,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  getPatientROS\n  api.get(\n    \"/getPatientROS\",\n    getPatientROS,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to update Patient ROS\n  api.put(\n    \"/updatePatientROS\",\n    updatePatientROS,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  getPatientVitals;\n  // created by irfan : to  getPatientVitals\n  api.get(\n    \"/getPatientVitals\",\n    getPatientVitals,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to add patient vitals\n\n  api.post(\n    \"/addPatientVitals\",\n    addPatientVitals,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to add patient physical examination\n\n  api.post(\n    \"/addPatientPhysicalExamination\",\n    addPatientPhysicalExamination,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to update  PatientAllergy\n  api.put(\n    \"/updatePatientAllergy\",\n    updatePatientAllergy,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  // created by nowshad : to add  diet Advice\n  api.post(\n    \"/addDietAdvice\",\n    addDietAdvice,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad : to  Diet Details for selcted Episode\n  api.get(\n    \"/getEpisodeDietAdvice\",\n    getEpisodeDietAdvice,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad : to  add Referal Doctor\n  api.post(\n    \"/addReferalDoctor\",\n    addReferalDoctor,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad : to  add Follow up\n  api.post(\n    \"/addFollowUp\",\n    addFollowUp,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by:irfan,to get Patient physical examination\n  api.get(\n    \"/getPatientPhysicalExamination\",\n    getPatientPhysicalExamination,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to update or delete Patient physical examination\n  api.put(\n    \"/updatePatientPhysicalExam\",\n    updatePatientPhysicalExam,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  //created by irfan: to  get Patient Allergies\n  api.get(\n    \"/getPatientAllergies\",\n    getPatientAllergies,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to  getPatientDiagnosis\n  api.get(\n    \"/getPatientDiagnosis\",\n    getPatientDiagnosis,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to  getPatientDiet\n  api.get(\n    \"/getPatientDiet\",\n    getPatientDiet,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to  getVitalsHeaderMaster\n  api.get(\n    \"/getVitalsHeaderMaster\",\n    getVitalsHeaderMaster,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to  addPatientHistory\n  api.post(\n    \"/addPatientHistory\",\n    addPatientHistory,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to  getPatientHistory\n  api.get(\n    \"/getPatientHistory\",\n    getPatientHistory,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Nowshad: to  get Follow up Recall\n  api.get(\n    \"/getFollowUp\",\n    getFollowUp,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Nowshad: to\n  api.get(\n    \"/getPatientEpisodeSummary\",\n    getPatientEpisodeSummary,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}