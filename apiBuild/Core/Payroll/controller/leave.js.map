{"version":3,"sources":["../../../../src/Payroll/controller/leave.js"],"names":["config","db","api","get","getEmployeeLeaveData","req","res","next","result","records","status","httpStatus","ok","json","success","releaseConnection","post","applyEmployeeLeave","leave_already_exist","getEmployeeLeaveHistory","invalid_input","getLeaveBalance"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;AAMA;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACA;;AAEA;AACAA,MAAIC,GAAJ,CACE,uBADF,EAEEC,2BAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEQ,wBAXF;;AAcA;AACAb,MAAIc,IAAJ,CACE,qBADF,EAEEC,yBAFF,EAGE,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEA,QAAID,OAAOU,mBAAP,IAA8B,IAAlC,EAAwC;AACtC,6BAAS,SAAT;AACAZ,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID,KAND,MAMO;AACL,6BAAS,cAAT;AACAF,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GArBH,EAsBEQ,wBAtBF;;AAyBA;AACAb,MAAIC,GAAJ,CACE,0BADF,EAEEgB,8BAFF,EAGE,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOY,aAAP,IAAwB,IAA5B,EAAkC;AAChCd,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BL,iBAAS;AAFoB,OAA/B;AAID,KALD,MAKO;AACLH,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAjBH;;AAoBA;AACAL,MAAIc,IAAJ,CAAS,kBAAT,EAA6BK,sBAA7B,EAA8C,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChE,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOU,mBAAP,IAA8B,IAAlC,EAAwC;AACtCZ,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAdD;AAeA,SAAOL,GAAP;AACD,C","file":"leave.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../../utils\";\nimport httpStatus from \"../../utils/httpStatus\";\nimport {\n  getEmployeeLeaveData,\n  applyEmployeeLeave,\n  getEmployeeLeaveHistory,\n  getLeaveBalance\n} from \"../model/leave\";\nimport { debugLog } from \"../../utils/logging\";\nexport default ({ config, db }) => {\n  let api = Router();\n  //code\n\n  // created by irfan :\n  api.get(\n    \"/getEmployeeLeaveData\",\n    getEmployeeLeaveData,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.post(\n    \"/applyEmployeeLeave\",\n    applyEmployeeLeave,\n    (req, res, next) => {\n      let result = req.records;\n\n      if (result.leave_already_exist == true) {\n        debugLog(\"erooooo\");\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        debugLog(\"Suuuuuuuuccc\");\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.get(\n    \"/getEmployeeLeaveHistory\",\n    getEmployeeLeaveHistory,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by irfan\n  api.post(\"/getLeaveBalance\", getLeaveBalance, (req, res, next) => {\n    let result = req.records;\n    if (result.leave_already_exist == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: result\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n  return api;\n};\n"]}