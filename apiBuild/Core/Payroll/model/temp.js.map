{"version":3,"sources":["../../../../src/Payroll/model/temp.js"],"names":["i","clashing_to_leave_session","length","debugLog","result","prev_to_leave_session_FH","LINQ","Where","w","to_leave_session","Select","s","FirstOrDefault","prev_to_leave_session_FD","prev_to_leave_session_SH","curr_from_session","releaseDBConnection","db","connection","req","records","leave_already_exist","message","next","clashing_from_leave_session","prev_from_leave_session_FH","from_leave_session","prev_from_leave_session_SH","prev_from_leave_session_FD","curr_to_session","clashing_sessions","resolve"],"mappings":"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","file":"temp.js","sourcesContent":["for (let i = 0; i < clashing_to_leave_session.length; i++) {\n  debugLog(\"result:\", result);\n  //fetch all previous to_leave_sessions\n\n  debugLog(\"sssssssssss:\", [clashing_to_leave_session[i]]);\n  let prev_to_leave_session_FH = new LINQ([clashing_to_leave_session[i]])\n    .Where(w => w.to_leave_session == \"FH\")\n    .Select(s => s.to_leave_session)\n    .FirstOrDefault();\n\n  debugLog(\"prev_to_leave_session_FH:\", prev_to_leave_session_FH);\n\n  let prev_to_leave_session_FD = new LINQ([clashing_to_leave_session[i]])\n    .Where(w => w.to_leave_session == \"FD\")\n    .Select(s => s.to_leave_session)\n    .FirstOrDefault();\n\n  debugLog(\"prev_to_leave_session_FD:\", prev_to_leave_session_FD);\n\n  let prev_to_leave_session_SH = new LINQ([clashing_to_leave_session[i]])\n    .Where(w => w.to_leave_session == \"SH\")\n    .Select(s => s.to_leave_session)\n    .FirstOrDefault();\n\n  debugLog(\"prev_to_leave_session_SH:\", prev_to_leave_session_SH);\n  //rejection of to_leave_sessions\n\n  if (\n    (prev_to_leave_session_FH == \"FH\" && curr_from_session == \"FH\") ||\n    (prev_to_leave_session_FD == \"FD\" && curr_from_session == \"FH\") ||\n    (prev_to_leave_session_SH == \"SH\" && curr_from_session == \"FH\") ||\n    ((prev_to_leave_session_FD == \"FD\" && curr_from_session == \"SH\") ||\n      (prev_to_leave_session_SH == \"SH\" && curr_from_session == \"SH\")) ||\n    ((prev_to_leave_session_FH == \"FH\" && curr_from_session == \"FD\") ||\n      (prev_to_leave_session_FD == \"FD\" && curr_from_session == \"FD\") ||\n      (prev_to_leave_session_SH == \"SH\" && curr_from_session == \"FD\"))\n  ) {\n    debugLog(\"rejction_one:\");\n\n    releaseDBConnection(db, connection);\n    req.records = {\n      leave_already_exist: true,\n      message:\n        \"leave is already there between this dates \" +\n        clashing_to_leave_session[i][\"from_date\"] +\n        \" AND \" +\n        clashing_to_leave_session[i][\"to_date\"]\n    };\n    next();\n  }\n}\n//-----------------------------------------------------------------------------------------------------\nfor (let i = 0; i < clashing_from_leave_session.length; i++) {\n  let prev_from_leave_session_FH = new LINQ([clashing_from_leave_session[i]])\n    .Where(w => w.from_leave_session == \"FH\")\n    .Select(s => s.from_leave_session)\n    .FirstOrDefault();\n\n  debugLog(\"prev_from_leave_session_FH:\", prev_from_leave_session_FH);\n\n  let prev_from_leave_session_SH = new LINQ([clashing_from_leave_session[i]])\n    .Where(w => w.from_leave_session == \"SH\")\n    .Select(s => s.from_leave_session)\n    .FirstOrDefault();\n  debugLog(\"prev_from_leave_session_SH:\", prev_from_leave_session_SH);\n\n  let prev_from_leave_session_FD = new LINQ([clashing_from_leave_session[i]])\n    .Where(w => w.from_leave_session == \"FD\")\n    .Select(s => s.from_leave_session)\n    .FirstOrDefault();\n  debugLog(\"prev_from_leave_session_FD:\", prev_from_leave_session_FD);\n\n  if (\n    (prev_from_leave_session_FH == \"FH\" && curr_to_session == \"FD\") ||\n    (prev_from_leave_session_SH == \"SH\" && curr_to_session == \"FD\") ||\n    (prev_from_leave_session_FD == \"FD\" && curr_to_session == \"FD\") ||\n    (prev_from_leave_session_FD == \"FD\" && curr_to_session == \"FH\") ||\n    (prev_from_leave_session_FH == \"FH\" && curr_to_session == \"FH\") ||\n    (prev_from_leave_session_FH == \"FH\" && curr_to_session == \"SH\") ||\n    (prev_from_leave_session_FD == \"FD\" && curr_to_session == \"SH\") ||\n    (prev_from_leave_session_SH == \"SH\" && curr_to_session == \"SH\")\n  ) {\n    debugLog(\"rejction two:\");\n\n    releaseDBConnection(db, connection);\n    req.records = {\n      leave_already_exist: true,\n      message:\n        \"leave is already there between this dates \" +\n        clashing_from_leave_session[i][\"from_date\"] +\n        \" AND \" +\n        clashing_from_leave_session[i][\"to_date\"]\n    };\n    next();\n  }\n\n  if (i == clashing_sessions.length - 1) {\n    resolve({});\n  }\n}\n"]}