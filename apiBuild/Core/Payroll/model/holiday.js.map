{"version":3,"sources":["../../../../src/Payroll/model/holiday.js"],"names":["addWeekOffs","req","res","next","db","httpStatus","dataBaseNotInitilizedError","input","body","year","format","today","start_of_year","startOf","end_of_year","endOf","getConnection","error","connection","holidays","inputDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","d","push","newDateList","getDaysArray","Date","map","v","toLocaleString","length","query","hospital_id","result","records","weekOff_exist","message","insurtColumns","join","sampleInputObject","arrayObj","newFieldToInsert","weekOfResult","e","start","end","days","arr","dt","setDate","getDate","dat","day","getDay","indexOf","holiday_date","getAllHolidays","addHoliday","religion_id","existResult","holiday_exist","holiday_description","holiday_type","created_by","updated_by","deleteHoliday","hims_d_holiday_id","undefined","affectedRows","invalid_input","module","exports"],"mappings":"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","file":"holiday.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport {\n  selectStatement,\n  whereCondition,\n  deleteRecord,\n  runningNumberGen,\n  releaseDBConnection,\n  jsonArrayToObject\n} from \"../../utils\";\nimport httpStatus from \"../../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\n\nimport { debugLog } from \"../../utils/logging\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\n//created by irfan: to define all week off's for particular year\nlet addWeekOffs = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let input = extend({}, req.body);\n    debugLog(\"input:\", input);\n\n    const year = moment(\"'\" + input.year + \"'\").format(\"YYYY\");\n\n    debugLog(\"year:\", year);\n    const today = moment().format(\"YYYY-MM-DD\");\n    debugLog(\"today:\", today);\n\n    const start_of_year = moment(year)\n      .startOf(\"year\")\n      .format(\"YYYY-MM-DD\");\n    debugLog(\"start_of_year:\", start_of_year);\n\n    const end_of_year = moment(year)\n      .endOf(\"year\")\n      .format(\"YYYY-MM-DD\");\n    debugLog(\"end_of_year:\", end_of_year);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      let holidays = [];\n\n      let inputDays = [\n        req.body.sunday,\n        req.body.monday,\n        req.body.tuesday,\n        req.body.wednesday,\n        req.body.thursday,\n        req.body.friday,\n        req.body.saturday\n      ];\n\n      for (let d = 0; d < 7; d++) {\n        if (inputDays[d] == \"Y\") {\n          holidays.push(d);\n        }\n      }\n\n      debugLog(\"holidays:\", holidays);\n      let newDateList = [];\n      if (today >= start_of_year) {\n        newDateList = getDaysArray(\n          new Date(today),\n          new Date(end_of_year),\n          holidays\n        );\n        debugLog(\"present :\");\n      } else if (start_of_year > today) {\n        newDateList = getDaysArray(\n          new Date(start_of_year),\n          new Date(end_of_year),\n          holidays\n        );\n        debugLog(\"next year:\");\n      }\n\n      newDateList.map(v => v.toLocaleString());\n\n      debugLog(\"newDateList:\", newDateList);\n      debugLog(\"newDateList len:\", newDateList.length);\n\n      connection.query(\n        \"select hims_d_holiday_id,hospital_id,holiday_date,\\\n        holiday_description,weekoff,holiday,holiday_type\\\n        from  hims_d_holiday  where record_status='A' and date(holiday_date) \\\n        between date(?) and date(?) and hospital_id=? \",\n        [start_of_year, end_of_year, input.hospital_id],\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n\n          if (result.length > 0) {\n            releaseDBConnection(db, connection);\n            req.records = {\n              weekOff_exist: true,\n              message: \"week off is already defind for the year \" + year\n            };\n            next();\n            return;\n          } else if (newDateList.length > 0) {\n            const insurtColumns = [\"holiday_date\", \"created_by\", \"updated_by\"];\n            debugLog(\"kkkkkkkkkkkkkkkk:\", newDateList);\n\n            connection.query(\n              \"INSERT INTO hims_d_holiday(\" +\n                insurtColumns.join(\",\") +\n                \",hospital_id, holiday_description ,weekoff,holiday,holiday_type,created_date,updated_date) VALUES ?\",\n              [\n                jsonArrayToObject({\n                  sampleInputObject: insurtColumns,\n                  arrayObj: newDateList,\n                  newFieldToInsert: [\n                    input.hospital_id,\n                    \"Week Off\",\n                    \"Y\",\n                    \"N\",\n                    \"RE\",\n\n                    new Date(),\n                    new Date()\n                  ],\n                  req: req\n                })\n              ],\n              (error, weekOfResult) => {\n                releaseDBConnection(db, connection);\n                if (error) {\n                  next(error);\n                }\n                debugLog(\"weekOfResult:\", weekOfResult);\n                req.records = weekOfResult;\n                next();\n              }\n            );\n          } else {\n            releaseDBConnection(db, connection);\n            req.records = {\n              weekOff_exist: true,\n              message: \"please select week off days\"\n            };\n            next();\n            return;\n          }\n        }\n      );\n    });\n    //query  ends\n  } catch (e) {\n    next(e);\n  }\n};\n\nfunction getDaysArray(start, end, days) {\n  for (var arr = [], dt = start; dt <= end; dt.setDate(dt.getDate() + 1)) {\n    const dat = new Date(dt);\n    const day = new Date(dat).getDay();\n\n    if (days.indexOf(day) > -1) {\n      arr.push({ holiday_date: dat });\n    }\n  }\n\n  return arr;\n}\n\n//created by irfan: fetch all holidays\nlet getAllHolidays = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    const start_of_year = moment()\n      .startOf(\"year\")\n      .format(\"YYYY-MM-DD\");\n\n    debugLog(\"start_of_year:\", start_of_year);\n\n    const end_of_year = moment()\n      .endOf(\"year\")\n      .format(\"YYYY-MM-DD\");\n    debugLog(\"end_of_year:\", end_of_year);\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_d_holiday_id,hospital_id,holiday_date,holiday_description,weekoff,holiday,\\\n        holiday_type,religion_id,R.religion_name,R.arabic_religion_name from  hims_d_holiday  H left join\\\n        hims_d_religion R on H.religion_id=R.hims_d_religion_id where H.record_status='A' and date(holiday_date) \\\n        between date(?) and date(?) and hospital_id=? \",\n        [start_of_year, end_of_year, req.query.hospital_id],\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan: define a holiday\nlet addHoliday = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    if (\n      req.body.religion_id == \"null\" ||\n      req.body.religion_id == \"\" ||\n      req.body.religion_id == null\n    ) {\n      delete req.body.religion_id;\n    }\n    let input = extend({}, req.body);\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n\n      connection.query(\n        \"select hims_d_holiday_id,hospital_id,holiday_date,holiday_description,weekoff,holiday,\\\n        holiday_type from  hims_d_holiday  where \\\n        record_status='A' and date(holiday_date) = date(?) and hospital_id=?\",\n        [input.holiday_date, input.hospital_id],\n        (error, existResult) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n\n          if (existResult.length > 0) {\n            releaseDBConnection(db, connection);\n            req.records = {\n              holiday_exist: true,\n              message:\n                \"holiday is already defind for this :\" + input.holiday_date\n            };\n            next();\n            return;\n          } else {\n            connection.query(\n              \"INSERT INTO `hims_d_holiday` (hospital_id,holiday_date,holiday_description,\\\n          weekoff,holiday,holiday_type,religion_id, created_date, created_by, updated_date, updated_by)\\\n          VALUE(?,date(?),?,?,?,?,?,?,?,?,?)\",\n              [\n                input.hospital_id,\n                input.holiday_date,\n                input.holiday_description,\n                \"N\",\n                \"Y\",\n                input.holiday_type,\n                input.religion_id,\n                new Date(),\n                input.created_by,\n                new Date(),\n                input.updated_by\n              ],\n              (error, result) => {\n                releaseDBConnection(db, connection);\n                if (error) {\n                  next(error);\n                }\n                req.records = result;\n                next();\n              }\n            );\n          }\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by irfan:\nlet deleteHoliday = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    if (\n      req.body.hims_d_holiday_id != \"null\" &&\n      req.body.hims_d_holiday_id != undefined\n    ) {\n      db.getConnection((error, connection) => {\n        connection.query(\n          \" DELETE FROM hims_d_holiday WHERE hims_d_holiday_id = ?; \",\n          [req.body.hims_d_holiday_id],\n          (error, result) => {\n            releaseDBConnection(db, connection);\n            if (error) {\n              next(error);\n            }\n\n            if (result.affectedRows > 0) {\n              req.records = result;\n              next();\n            } else {\n              req.records = { invalid_input: true };\n              next();\n            }\n          }\n        );\n      });\n    } else {\n      req.records = { invalid_input: true };\n      next();\n    }\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = { addWeekOffs, getAllHolidays, addHoliday, deleteHoliday };\n"]}