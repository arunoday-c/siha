{"version":3,"sources":["../../../../src/Pharmacy/controller/posEntry.js"],"names":["config","db","api","post","generateDbConnection","pharmacyReceiptInsert","addPosEntry","updatePosEntry","req","res","next","connection","commit","error","rollback","result","records","status","httpStatus","ok","json","success","releaseConnection","get","getPosEntry","getReceiptEntry","_receptEntry","receptEntry","_pos","pos","put","results","getPrescriptionPOS"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;AAMA;;AACA;;AACA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CACE,cADF,EAEEC,2BAFF,EAGEC,qCAHF,EAIEC,qBAJF,EAKEC,wBALF,EAME,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,6BAAS,OAAT,EAAkBC,KAAlB;AACA,6BAAS,cAAT,EAAyBA,KAAzB;AACA,UAAIA,KAAJ,EAAW;AACT,+BAAS,YAAT,EAAuBA,KAAvB;AACAF,mBAAWG,QAAX,CAAoB,YAAM;AACxBJ,eAAKG,KAAL;AACD,SAFD;AAGD,OALD,MAKO;AACL,YAAIE,SAASP,IAAIQ,OAAjB;AACAP,YAAIQ,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BL,mBAASD;AAFoB,SAA/B;AAIAL;AACD;AACF,KAhBD;AAiBD,GAzBH,EA0BEY,wBA1BF;;AA6BA;AACApB,MAAIqB,GAAJ,CACE,cADF,EAEEnB,2BAFF,EAGEoB,qBAHF,EAIEC,6BAJF,EAKE,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,6BAAS,OAAT,EAAkBC,KAAlB;AACA,6BAAS,cAAT,EAAyBA,KAAzB;AACA,UAAIA,KAAJ,EAAW;AACT,+BAAS,YAAT,EAAuBA,KAAvB;AACAF,mBAAWG,QAAX,CAAoB,YAAM;AACxBJ,eAAKG,KAAL;AACD,SAFD;AAGD,OALD,MAKO;AACL,YAAIa,eAAelB,IAAImB,WAAvB;AACA,YAAIC,OAAOpB,IAAIQ,OAAf;;AAEA,YAAID,sBAAcW,YAAd,EAA+BE,IAA/B,CAAJ;AACA,+BAAS,WAAT,EAAsBb,MAAtB;;AAEA,eAAOP,IAAImB,WAAX;AACA,eAAOnB,IAAIqB,GAAX;AACApB,YAAIQ,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BL,mBAASD;AAFoB,SAA/B;AAIAL;AACD;AACF,KAvBD;AAwBA;AACA;AACA;AACA;AACA;AACA;AACD,GArCH,EAsCEY,wBAtCF;;AAyCA;AACApB,MAAI4B,GAAJ,CACE,iBADF,EAEEvB,wBAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIqB,UAAUvB,IAAIQ,OAAlB;AACAP,QAAIQ,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASe;AAFoB,KAA/B;AAIArB;AACD,GAVH,EAWEY,wBAXF;;AAcA;AACApB,MAAIC,IAAJ,CACE,qBADF,EAEE6B,4BAFF,EAGE,UAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIK,SAASP,IAAIQ,OAAjB;AACAP,QAAIQ,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAL;AACD,GAVH,EAWEY,wBAXF;;AAcA,SAAOpB,GAAP;AACD,C","file":"posEntry.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection, generateDbConnection } from \"../../utils\";\nimport httpStatus from \"../../utils/httpStatus\";\nimport {\n  addPosEntry,\n  getPosEntry,\n  updatePosEntry,\n  getPrescriptionPOS\n} from \"../model/posEntry\";\nimport { debugFunction, debugLog } from \"../../utils/logging\";\nimport { pharmacyReceiptInsert } from \"../model/pharmacyGlobal\";\nimport { getReceiptEntry } from \"../../model/receiptentry\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by Nowshad :to add Pharmacy POS Entry\n  api.post(\n    \"/addPosEntry\",\n    generateDbConnection,\n    pharmacyReceiptInsert,\n    addPosEntry,\n    updatePosEntry,\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error\", error);\n        debugLog(\"commit error\", error);\n        if (error) {\n          debugLog(\"roll error\", error);\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          let result = req.records;\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad :to get Pos Entry\n  api.get(\n    \"/getPosEntry\",\n    generateDbConnection,\n    getPosEntry,\n    getReceiptEntry,\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error\", error);\n        debugLog(\"commit error\", error);\n        if (error) {\n          debugLog(\"roll error\", error);\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          let _receptEntry = req.receptEntry;\n          let _pos = req.records;\n\n          let result = { ..._receptEntry, ..._pos };\n          debugLog(\"result : \", result);\n\n          delete req.receptEntry;\n          delete req.pos;\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n      // let result = req.records;\n      // res.status(httpStatus.ok).json({\n      //   success: true,\n      //   records: result\n      // });\n      // next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad :update Item Storage and POS\n  api.put(\n    \"/updatePosEntry\",\n    updatePosEntry,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad :to get Prescription POS\n  api.post(\n    \"/getPrescriptionPOS\",\n    getPrescriptionPOS,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}