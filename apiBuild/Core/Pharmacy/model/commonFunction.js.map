{"version":3,"sources":["../../../../src/Pharmacy/model/commonFunction.js"],"names":["createXmlString","Jobject","stringObj","Object","keys","map","item","undefined","updateIntoItemLocation","req","res","next","db","httpStatus","dataBaseNotInitilizedError","getConnection","error","connection","inputParam","body","xmlQuery","LINQ","pharmacy_stock_detail","Select","item_id","s","pharmacy_location_id","location_id","batchno","expirydt","expiry_date","barcode","qtyhand","quantity","qtypo","cost_uom","uom_id","avgcost","unit_cost","last_purchase_cost","grn_id","grnno","grn_number","sale_price","sales_uom","mrp_price","transaction_type","transaction_id","transaction_date","from_location_id","from_location_type","location_type","year","period","to_location_id","to_location_type","description","item_category_id","item_group_id","item_code_id","required_batchno","transaction_qty","transaction_uom","transaction_cost","transaction_total","extended_cost","discount_percentage","discount_amount","net_total","landing_cost","average_cost","created_by","userIdentity","algaeh_d_app_user_id","updated_by","operation","ToArray","query","result","options","onFailure","Array","isArray","Error","message","onSuccess","module","exports"],"mappings":"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","file":"commonFunction.js","sourcesContent":["\"use strict\";\nimport { releaseDBConnection } from \"../../utils\";\nimport { LINQ } from \"node-linq\";\nimport { debugLog } from \"../../utils/logging\";\n\nconst createXmlString = Jobject => {\n  if (Jobject != null) {\n    let stringObj = \"\";\n    Object.keys(Jobject).map(item => {\n      if (Jobject[item] != null && Jobject[item] != undefined) {\n        stringObj += \"<\" + item + \">\" + Jobject[item] + \"</\" + item + \">\";\n      }\n    });\n    return stringObj;\n  } else {\n    return \"\";\n  }\n};\n\nlet updateIntoItemLocation = (req, res, next) => {\n  // let db = req.options == null ? req.db : req.options.db;\n\n  if (req.db == null) {\n    next(httpStatus.dataBaseNotInitilizedError());\n  }\n  let db = req.db;\n  db.getConnection((error, connection) => {\n    if (error) {\n      next(error);\n    }\n\n    let inputParam = req.body;\n\n    let xmlQuery = \"\";\n    debugLog(\"req.body: \", req.body);\n\n    new LINQ(inputParam.pharmacy_stock_detail)\n      .Select(s => {\n        xmlQuery += \"<hims_m_item_location>\";\n        xmlQuery += createXmlString({\n          item_id: s.item_id,\n          pharmacy_location_id: s.location_id,\n          batchno: s.batchno,\n          expirydt: s.expiry_date,\n          barcode: s.barcode,\n          qtyhand: s.quantity,\n          qtypo: s.qtypo || 0,\n          cost_uom: s.uom_id,\n          avgcost: s.unit_cost,\n          last_purchase_cost: s.last_purchase_cost || 0,\n          grn_id: s.grn_id || 0,\n          grnno: s.grn_number,\n          sale_price: s.sale_price || 0,\n          sales_uom: s.sales_uom,\n          mrp_price: s.mrp_price || 0,\n          transaction_type: req.body.transaction_type,\n          transaction_id: req.body.transaction_id,\n          transaction_date: req.body.transaction_date,\n          from_location_id: s.location_id,\n          from_location_type: s.location_type,\n          year: req.body.year,\n          period: req.body.period,\n          to_location_id: s.to_location_id || \"~\",\n          to_location_type: s.to_location_type || \"~\",\n          description: req.body.description,\n          item_category_id: s.item_category_id,\n          item_group_id: s.item_group_id,\n          item_code_id: s.item_id,\n          required_batchno: s.required_batchno || \"N\",\n          expiry_date: s.expiry_date,\n          transaction_qty: s.quantity,\n          transaction_uom: s.uom_id,\n          transaction_cost: s.unit_cost,\n          transaction_total: s.extended_cost,\n          discount_percentage: s.discount_percentage || 0,\n          discount_amount: s.discount_amount || 0,\n          net_total: s.net_total,\n          landing_cost: s.landing_cost || 0,\n          average_cost: s.unit_cost,\n          created_by: req.userIdentity.algaeh_d_app_user_id,\n          updated_by: req.userIdentity.algaeh_d_app_user_id,\n          operation: s.operation\n        });\n        xmlQuery += \"</hims_m_item_location>\";\n      })\n      .ToArray();\n    // xmlQuery += \"</hims_m_item_location>\";\n\n    debugLog(\"xmlQuery\", xmlQuery);\n    connection.query(\n      \" call algaeh_proc_item_location ('\" + xmlQuery + \"')\",\n      (error, result) => {\n        debugLog(\"error\", error);\n        debugLog(\"result\", result);\n        releaseDBConnection(db, connection);\n        if (error) {\n          req.options.onFailure(error);\n        } else {\n          debugLog(\"Array: \", Array.isArray(result));\n\n          if (Array.isArray(result)) {\n            debugLog(\"Error: \", result[0][0].Error);\n            // if (result[0][0].Error != null) {\n            if (result[0][0].Error != null) {\n              debugLog(\"Error: \", result[0][0].Error);\n              const error = new Error();\n              error.message = result[0][0].Error;\n              if (req.options != null) {\n                req.options.onFailure(error);\n              } else {\n                next(error);\n              }\n            } else {\n              if (req.options != null) {\n                req.options.onSuccess(result);\n              } else {\n                next();\n              }\n            }\n          } else {\n            if (req.options != null) {\n              req.options.onSuccess(result);\n            } else {\n              next();\n            }\n          }\n        }\n      }\n    );\n  });\n};\n\nmodule.exports = {\n  updateIntoItemLocation\n};\n"]}