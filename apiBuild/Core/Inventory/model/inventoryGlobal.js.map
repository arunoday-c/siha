{"version":3,"sources":["../../../../src/Inventory/model/inventoryGlobal.js"],"names":["getUomLocationStock","req","res","next","db","httpStatus","dataBaseNotInitilizedError","getConnection","error","connection","query","item_id","location_id","result","records","uomResult","locationResult","e","getItemMoment","whereOrder","from_date","undefined","to_date","where","condition","values","getItemLocationStock","getUserLocationPermission","userIdentity","algaeh_d_app_user_id","length","resultLoctaion","getItemandLocationStock","selectWhere","inventory_location_id","Orderby","module","exports"],"mappings":"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","file":"inventoryGlobal.js","sourcesContent":["\"use strict\";\nimport extend from \"extend\";\nimport { whereCondition, releaseDBConnection } from \"../../utils\";\n\nimport httpStatus from \"../../utils/httpStatus\";\nimport { debugLog, debugFunction } from \"../../utils/logging\";\n\n//created by irfan: to get Uom Location Stock\nlet getUomLocationStock = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    // let input = extend({}, req.query);\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"select hims_m_inventory_item_uom_id, item_master_id, uom_id, stocking_uom, conversion_factor, hims_m_inventory_item_uom.uom_status, \\\n        hims_d_inventory_uom.uom_description  \\\n        from hims_m_inventory_item_uom,hims_d_inventory_uom where hims_m_inventory_item_uom.record_status='A' and \\\n        hims_m_inventory_item_uom.uom_id = hims_d_inventory_uom.hims_d_inventory_uom_id and hims_m_inventory_item_uom.item_master_id=? ;\\\n        SELECT hims_m_inventory_item_location_id, item_id, inventory_location_id, item_location_status, batchno, expirydt, barcode, qtyhand, qtypo, cost_uom,\\\n        avgcost, last_purchase_cost, item_type, grn_id, grnno, sale_price, mrp_price, sales_uom \\\n        from hims_m_inventory_item_location where record_status='A'  and item_id=? and inventory_location_id=? and expirydt > CURDATE() \\\n        and qtyhand>0  order by expirydt\",\n        [req.query.item_id, req.query.item_id, req.query.location_id],\n        (error, result) => {\n          debugLog(\"uomResult\", result);\n          releaseDBConnection(db, connection);\n\n          if (error) {\n            next(error);\n          }\n          req.records = {\n            uomResult: result[0],\n            locationResult: result[1]\n          };\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//used\n\n//created by Nowshad: get Item Moment\nlet getItemMoment = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let whereOrder = \"\";\n    if (req.query.from_date != undefined) {\n      whereOrder =\n        \"date(transaction_date) between date('\" +\n        req.query.from_date +\n        \"') AND date('\" +\n        req.query.to_date +\n        \"')\";\n    } else {\n      whereOrder = \"date(transaction_date) <= date(now())\";\n    }\n    delete req.query.from_date;\n    delete req.query.to_date;\n    let where = whereCondition(extend(req.query));\n\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      db.query(\n        \"SELECT * from hims_f_inventory_trans_history  WHERE record_status = 'A' and \" +\n          whereOrder +\n          (where.condition == \"\" ? \"\" : \" AND \" + where.condition),\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//Used\n//created by irfan: to get Uom Location Stock\nlet getItemLocationStock = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    // let Orderby = \"order by expirydt\";\n    // let input = extend({}, req.query);\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"SELECT hims_m_inventory_item_location_id, item_id, inventory_location_id, item_location_status, batchno, expirydt, barcode, qtyhand, qtypo, cost_uom,\\\n        avgcost, last_purchase_cost, item_type, grn_id, grnno, sale_price, mrp_price, sales_uom \\\n        from hims_m_inventory_item_location where record_status='A'  and item_id=? and inventory_location_id=? \\\n        and qtyhand>0  order by expirydt\",\n        [req.query.item_id, req.query.location_id],\n        (error, result) => {\n          debugLog(\"uomResult\", result);\n          releaseDBConnection(db, connection);\n\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//used\n//created by Nowshad: to get User Wise Location Permission\nlet getUserLocationPermission = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    // let input = extend({}, req.query);\n\n    db.getConnection((error, connection) => {\n      connection.query(\n        \"SELECT hims_m_inventory_location_permission_id,user_id, location_id,L.hims_d_inventory_location_id,L.location_description,\\\n        L.location_type,L.allow_pos from hims_m_inventory_location_permission LP,hims_d_inventory_location L \\\n        where LP.record_status='A' and\\\n         L.record_status='A' and LP.location_id=L.hims_d_inventory_location_id  and allow='Y' and user_id=?\",\n        [req.userIdentity.algaeh_d_app_user_id],\n        (error, result) => {\n          if (error) {\n            next(error);\n            releaseDBConnection(db, connection);\n          }\n\n          if (result.length < 1) {\n            connection.query(\n              \"select  hims_d_inventory_location_id, location_description, location_status, location_type,\\\n            allow_pos from hims_d_inventory_location where record_status='A'\",\n              (error, resultLoctaion) => {\n                releaseDBConnection(db, connection);\n                if (error) {\n                  next(error);\n                }\n                req.records = resultLoctaion;\n                next();\n              }\n            );\n          } else {\n            releaseDBConnection(db, connection);\n            req.records = result;\n            next();\n          }\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\n//created by Nowshad: to get Items in selected Location\nlet getItemandLocationStock = (req, res, next) => {\n  let selectWhere = {\n    item_id: \"ALL\",\n    inventory_location_id: \"ALL\"\n  };\n\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n\n    let where = whereCondition(extend(selectWhere, req.query));\n    let Orderby = \" order by expirydt\";\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      db.query(\n        \"SELECT hims_m_inventory_item_location_id, item_id, inventory_location_id, item_location_status, batchno, expirydt, barcode, qtyhand, qtypo, cost_uom,\\\n        avgcost, last_purchase_cost, item_type, grn_id, grnno, sale_price, mrp_price, sales_uom \\\n        from hims_m_inventory_item_location where record_status='A' and qtyhand>0 and \" +\n          where.condition,\n        where.values,\n\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  getUomLocationStock,\n  getItemMoment,\n  getItemLocationStock,\n  getUserLocationPermission,\n  getItemandLocationStock\n};\n"]}