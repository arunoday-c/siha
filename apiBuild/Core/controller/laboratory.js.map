{"version":3,"sources":["../../../src/controller/laboratory.js"],"names":["config","db","api","get","getLabOrderedServices","req","res","next","result","records","status","httpStatus","ok","json","success","releaseConnection","getTestAnalytes","post","insertLadOrderedServices","put","updateLabOrderServices","updateLabSampleStatus","resultSelect","length","generateError","notFound","updateLabResultEntry"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;kBASe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CACE,wBADF,EAEEC,iCAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEQ,wBAXF;;AAcA;AACAb,MAAIC,GAAJ,CACE,kBADF,EAEEa,2BAFF,EAGE,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEQ,wBAXF;;AAcA;AACAb,MAAIe,IAAJ,CACE,2BADF,EAEEC,oCAFF,EAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEQ,wBAXF;;AAcAb,MAAIiB,GAAJ,CACE,yBADF,EAEEC,kCAFF,EAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BL,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEQ,wBAXF;;AAcA;AACAb,MAAIiB,GAAJ,CACE,wBADF,EAEEE,iCAFF,EAGE,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIe,eAAejB,IAAII,OAAvB;AACA,QAAIa,aAAaC,MAAb,IAAuB,CAA3B,EAA8B;AAC5BjB,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASa;AAFoB,OAA/B;AAIAf;AACD,KAND,MAMO;AACLA,WAAKI,qBAAWa,aAAX,CAAyBb,qBAAWc,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEV,wBAfF;;AAkBA;AACAb,MAAIiB,GAAJ,CACE,uBADF,EAEEO,gCAFF,EAGE,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIe,eAAejB,IAAII,OAAvB;AACA,QAAIa,aAAaC,MAAb,IAAuB,CAA3B,EAA8B;AAC5BjB,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASa;AAFoB,OAA/B;AAIAf;AACD,KAND,MAMO;AACLA,WAAKI,qBAAWa,aAAX,CAAyBb,qBAAWc,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEV,wBAfF;;AAkBA,SAAOb,GAAP;AACD,C","file":"laboratory.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nimport {\n  getLabOrderedServices,\n  insertLadOrderedServices,\n  updateLabOrderServices,\n  getTestAnalytes,\n  updateLabSampleStatus,\n  updateLabResultEntry\n} from \"../model/laboratory\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by nowshad : to get lab services in lab tables\n  api.get(\n    \"/getLabOrderedServices\",\n    getLabOrderedServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by nowshad : to get lab services in lab tables\n  api.get(\n    \"/getTestAnalytes\",\n    getTestAnalytes,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by nowshad : to insert lab services in lab tables\n  api.post(\n    \"/insertLadOrderedServices\",\n    insertLadOrderedServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateLabOrderServices\",\n    updateLabOrderServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to update Lab Sample Status\n  api.put(\n    \"/updateLabSampleStatus\",\n    updateLabSampleStatus,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  //created by irfan: to update Lab Result Entry\n  api.put(\n    \"/updateLabResultEntry\",\n    updateLabResultEntry,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}