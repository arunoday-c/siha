{"version":3,"sources":["../../../src/controller/investigation.js"],"names":["config","db","api","post","addInvestigationTest","req","res","next","result","records","length","httpStatus","generateError","notFound","status","ok","json","success","releaseConnection","get","getInvestigTestList","put","updateInvestigationTest"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;kBAKe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEAA,MAAIC,IAAJ,CACE,uBADF,EAEEC,mCAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,MAAP,IAAiB,CAArB,EAAwB;AACtBH,WAAKI,qBAAWC,aAAX,CAAyBD,qBAAWE,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLP,UAAIQ,MAAJ,CAAWH,qBAAWI,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAdH,EAeEW,wBAfF;;AAkBA;AACAhB,MAAIiB,GAAJ,CACE,sBADF,EAEEC,kCAFF,EAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAIQ,MAAJ,CAAWH,qBAAWI,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BR,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEW,wBAXF;;AAcAhB,MAAImB,GAAJ,CACE,0BADF,EAEEC,sCAFF,EAGE,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAIQ,MAAJ,CAAWH,qBAAWI,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BR,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWEW,wBAXF;;AAcA,SAAOhB,GAAP;AACD,C","file":"investigation.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport {\n  addInvestigationTest,\n  getInvestigTestList,\n  updateInvestigationTest\n} from \"../model/investigation\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.post(\n    \"/addInvestigationTest\",\n    addInvestigationTest,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to get list of test based on condition\n  api.get(\n    \"/getInvestigTestList\",\n    getInvestigTestList,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateInvestigationTest\",\n    updateInvestigationTest,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}