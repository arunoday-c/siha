{"version":3,"sources":["../../../src/controller/appointment.js"],"names":["config","db","api","post","addAppointmentStatus","req","res","next","result","records","status","httpStatus","ok","json","success","releaseConnection","delete","deleteAppointmentRoom","addAppointmentRoom","addAppointmentClinic","get","getAppointmentStatus","getAppointmentRoom","getAppointmentClinic","put","updateAppointmentStatus","results","updateAppointmentRoom","updateAppointmentClinic","addDoctorsSchedule","schedule_exist","getDoctorsScheduledList","getDoctorScheduleDateWise","addLeaveOrModifySchedule","getDoctorScheduleToModify","updateDoctorScheduleDateWise","deleteDoctorFromSchedule","updateSchedule","addDoctorToExistingSchedule","addPatientAppointment","slotExist","getPatientAppointment","updatePatientAppointment","bookedtwice","getEmployeeServiceID","appointmentStatusAuthorized","cancelPatientAppointment"],"mappings":"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","file":"appointment.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nimport {\n  addAppointmentStatus,\n  addAppointmentRoom,\n  addAppointmentClinic,\n  getAppointmentStatus,\n  getAppointmentRoom,\n  getAppointmentClinic,\n  updateAppointmentStatus,\n  updateAppointmentRoom,\n  updateAppointmentClinic,\n  addDoctorsSchedule,\n  getDoctorsScheduledList,\n  addLeaveOrModifySchedule,\n  getDoctorScheduleDateWise,\n  getDoctorScheduleToModify,\n  updateDoctorScheduleDateWise,\n  deleteDoctorFromSchedule,\n  updateSchedule,\n  addDoctorToExistingSchedule,\n  addPatientAppointment,\n  getPatientAppointment,\n  updatePatientAppointment,\n  getEmployeeServiceID,\n  appointmentStatusAuthorized,\n  deleteAppointmentRoom,\n  cancelPatientAppointment\n} from \"../model/appointment\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan :to add Appointment Status\n  api.post(\n    \"/addAppointmentStatus\",\n    addAppointmentStatus,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to deleteAppointmentRoom\n  api.delete(\n    \"/deleteAppointmentRoom\",\n    deleteAppointmentRoom,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add Appointment Room\n  api.post(\n    \"/addAppointmentRoom\",\n    addAppointmentRoom,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add Appointment Clinic\n  api.post(\n    \"/addAppointmentClinic\",\n    addAppointmentClinic,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get AppointmentS tatus\n  api.get(\n    \"/getAppointmentStatus\",\n    getAppointmentStatus,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get AppointmentS Rooms\n  api.get(\n    \"/getAppointmentRoom\",\n    getAppointmentRoom,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get Appointment Clinic\n  api.get(\n    \"/getAppointmentClinic\",\n    getAppointmentClinic,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :update Appointment Status\n  api.put(\n    \"/updateAppointmentStatus\",\n    updateAppointmentStatus,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :update Appointment Room\n  api.put(\n    \"/updateAppointmentRoom\",\n    updateAppointmentRoom,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :update Appointment Clinic\n  api.put(\n    \"/updateAppointmentClinic\",\n    updateAppointmentClinic,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add Appointment schedule\n  api.post(\n    \"/addDoctorsSchedule\",\n    addDoctorsSchedule,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.schedule_exist == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n        next();\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get Doctors Scheduled List\n  api.get(\n    \"/getDoctorsScheduledList\",\n    getDoctorsScheduledList,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get Doctor Schedule DateWise\n  api.get(\n    \"/getDoctorScheduleDateWise\",\n    getDoctorScheduleDateWise,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to addLeaveOrModifySchedule\n  api.post(\n    \"/addLeaveOrModifySchedule\",\n    addLeaveOrModifySchedule,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get Doctor Schedule to Modify\n  api.get(\n    \"/getDoctorScheduleToModify\",\n    getDoctorScheduleToModify,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to update Doctor Schedule DateWise\n  api.put(\n    \"/updateDoctorScheduleDateWise\",\n    updateDoctorScheduleDateWise,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to delete Doctor From Schedule\n  api.put(\n    \"/deleteDoctorFromSchedule\",\n    deleteDoctorFromSchedule,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to update Schedule\n  api.put(\n    \"/updateSchedule\",\n    updateSchedule,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to update Schedule\n  api.post(\n    \"/addDoctorToExistingSchedule\",\n    addDoctorToExistingSchedule,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add Patient Appointment\n  api.post(\n    \"/addPatientAppointment\",\n    addPatientAppointment,\n    (req, res, next) => {\n      let result = req.records;\n    if(req.records.slotExist==true)\n    {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: result\n      });\n\n      next();\n    }else{\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n\n          next();\n        }\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to get Patient Appointment\n  api.get(\n    \"/getPatientAppointment\",\n    getPatientAppointment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to update Patient Appointment\n  api.put(\n    \"/updatePatientAppointment\",\n    updatePatientAppointment,\n    (req, res, next) => {\n      let result = req.records;\nif(req.records.slotExist==true||req.records.bookedtwice==true)\n    {\n    res.status(httpStatus.ok).json({\n      success: false,\n      records: result\n    });\n\n       next();\n      }else{\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    }\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to\n  api.get(\n    \"/getEmployeeServiceID\",\n    getEmployeeServiceID,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to\n  api.put(\n    \"/appointmentStatusAuthorized\",\n    appointmentStatusAuthorized,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to cancelPatientAppointment\n  api.put(\n    \"/cancelPatientAppointment\",\n    cancelPatientAppointment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}