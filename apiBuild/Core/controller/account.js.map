{"version":3,"sources":["../../../src/controller/account.js"],"names":["config","db","api","get","apiAuth","passport","authenticate","session","scope","generateAccessToken","respond","post","authUser","req","res","next","result","records","length","httpStatus","generateError","notFound","rowDetails","keyData","status","ok","json","success","username","user_displayname","keyResources","secureModels","locked","inputData","toUpperCase","releaseConnection"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;AAKA;;AACA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACA;AACAA,MAAIC,GAAJ,CACE,GADF,EAEEC,gBAFF,EAGEC,mBAASC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,aAAS,KADoB;AAE7BC,WAAO;AAFsB,GAA/B,CAHF,EAQEC,mCARF,EASEC,uBATF;;AAYA;AACAR,MAAIS,IAAJ,CACE,WADF,EAEEC,iBAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,MAAP,IAAiB,CAArB,EAAwB;AACtBH,WAAKI,qBAAWC,aAAX,CAAyBD,qBAAWE,QAApC,EAA8C,iBAA9C,CAAL;AACD,KAFD,MAEO;AACL,UAAIL,OAAO,CAAP,EAAU,QAAV,KAAuB,GAA3B,EAAgC;AAC9B,YAAIM,aAAaN,OAAO,CAAP,CAAjB;;AAEA,YAAIO,UAAU,8BAAWD,UAAX,CAAd;AACAR,YAAIU,MAAJ,CAAWL,qBAAWM,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BV,mBAAS;AACPW,sBAAUN,WAAW,UAAX,CADH;AAEPO,8BAAkBP,WAAW,kBAAX,CAFX;AAGPQ,0BAAcP,OAHP;AAIPQ,0BAAclB,IAAIkB;AAJX;AAFoB,SAA/B;AASAhB;AACD,OAdD,MAcO;AACLA,aACEI,qBAAWC,aAAX,CACED,qBAAWa,MADb,EAEE,YACEC,UAAUL,QAAV,CAAmBM,WAAnB,EADF,GAEE;+CAJJ,CADF;AASD;AACF;AACF,GAlCH,EAmCEC,wBAnCF;;AAsCA,SAAOjC,GAAP;AACD,C","file":"account.js","sourcesContent":["import { Router } from \"express\";\nimport passport from \"passport\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport {\n  generateAccessToken,\n  respond,\n  authenticate\n} from \"../middleware/authmiddleware\";\nimport { apiAuth, authUser } from \"../model/account\";\nimport { encryption } from \"../utils/cryptography\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  // '/v1/apiAuth'\n  api.get(\n    \"/\",\n    apiAuth,\n    passport.authenticate(\"local\", {\n      session: false,\n      scope: []\n    }),\n\n    generateAccessToken,\n    respond\n  );\n\n  //'/v1/authUser\n  api.post(\n    \"/authUser\",\n    authUser,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No record found\"));\n      } else {\n        if (result[0][\"locked\"] == \"N\") {\n          let rowDetails = result[0];\n\n          let keyData = encryption(rowDetails);\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: {\n              username: rowDetails[\"username\"],\n              user_displayname: rowDetails[\"user_displayname\"],\n              keyResources: keyData,\n              secureModels: req.secureModels\n            }\n          });\n          next();\n        } else {\n          next(\n            httpStatus.generateError(\n              httpStatus.locked,\n              \"user ' \" +\n                inputData.username.toUpperCase() +\n                \" ' locked please\\\n                        contact administrator.\"\n            )\n          );\n        }\n      }\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}