{"version":3,"sources":["../../../src/controller/insurance.js"],"names":["config","db","api","get","getPatientInsurance","req","res","next","result","records","status","httpStatus","ok","json","success","releaseConnection","getSubInsurance","post","addPatientInsurance","getListOfInsuranceProvider","addInsuranceProvider","put","updateInsuranceProvider","addSubInsuranceProvider","updateSubInsuranceProvider","addNetwork","NetworkOfficeMaster","addPlanAndPolicy","delete","deleteSubInsurance","getPriceList","getNetworkAndNetworkOfficRecords","updatePriceList","length","generateError","notFound","updateNetworkAndNetworkOffice","updatePriceListBulk","deleteNetworkAndNetworkOfficRecords","getInsuranceProviders","getSubInsuraces"],"mappings":"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","file":"insurance.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nimport {\n  getPatientInsurance,\n  addPatientInsurance,\n  getListOfInsuranceProvider,\n  addInsuranceProvider,\n  updateInsuranceProvider,\n  addSubInsuranceProvider,\n  updateSubInsuranceProvider,\n  getSubInsurance,\n  deleteSubInsurance,\n  addNetwork,\n  NetworkOfficeMaster,\n  addPlanAndPolicy,\n  getPriceList,\n  getNetworkAndNetworkOfficRecords,\n  updatePriceList,\n  updateNetworkAndNetworkOffice,\n  updatePriceListBulk,\n  deleteNetworkAndNetworkOfficRecords,\n  getInsuranceProviders,\n  getSubInsuraces\n} from \"../model/insurance\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan : to fetch insurence based on patient id\n  api.get(\n    \"/getPatientInsurance\",\n    getPatientInsurance,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by nowshad : to fetch sub insurence\n  api.get(\n    \"/getSubInsurance\",\n    getSubInsurance,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to save insurence of patient in DB\n  api.post(\n    \"/addPatientInsurance\",\n    addPatientInsurance,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to get all insurence provider  company details\n  api.get(\n    \"/getListOfInsuranceProvider\",\n    getListOfInsuranceProvider,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add insurence provider\n  api.post(\n    \"/addInsuranceProvider\",\n    addInsuranceProvider,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to update insurence provider\n  api.put(\n    \"/updateInsuranceProvider\",\n    updateInsuranceProvider,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add SUB-insurence provider\n  api.post(\n    \"/addSubInsuranceProvider\",\n    addSubInsuranceProvider,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to update SUB-insurence provider\n  api.put(\n    \"/updateSubInsuranceProvider\",\n    updateSubInsuranceProvider,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add network(insurence plan)\n  api.post(\n    \"/addNetwork\",\n    addNetwork,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to add network office(insurence policy)\n  api.post(\n    \"/NetworkOfficeMaster\",\n    NetworkOfficeMaster,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan: to add  both network and network office(insurence plan master)\n  api.post(\n    \"/addPlanAndPolicy\",\n    addPlanAndPolicy,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan: to delete sub insurance\n  api.delete(\n    \"/deleteSubInsurance\",\n    deleteSubInsurance,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Noushad : to get all price list of selected insurance\n  api.get(\n    \"/getPriceList\",\n    getPriceList,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan : to get list of network and its network_office records\n  // based on insuranceProvider id\n  api.get(\n    \"/getNetworkAndNetworkOfficRecords\",\n    getNetworkAndNetworkOfficRecords,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updatePriceList\",\n    updatePriceList,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to  update Network And NetworkOffice\n  api.put(\n    \"/updateNetworkAndNetworkOffice\",\n    updateNetworkAndNetworkOffice,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad : to  update bulk Services price list\n  api.put(\n    \"/updatePriceListBulk\",\n    updatePriceListBulk,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad : to  update bulk Services price list\n  api.put(\n    \"/deleteNetworkAndNetworkOfficRecords\",\n    deleteNetworkAndNetworkOfficRecords,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.get(\"/getInsuranceProviders\", getInsuranceProviders, (req, res, next) => {\n    let result = req.records;\n    res.status(httpStatus.ok).json({\n      success: true,\n      records: result\n    });\n    next();\n  });\n\n  //created by Adnan\n  api.get(\"/getSubInsuraces\", getSubInsuraces, (req, res, next) => {\n    let result = req.records;\n    res.status(httpStatus.ok).json({\n      success: true,\n      records: result\n    });\n    next();\n  });\n\n  return api;\n};\n"]}