{"version":3,"sources":["../../../src/controller/visitType.js"],"names":["config","db","api","delete","deleteVisitType","req","res","next","result","records","status","httpStatus","ok","json","releaseConnection","get","selectStatement","length","generateError","notFound","success","post","addVisit","put","updateVisit"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAMA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEAA,MAAIC,MAAJ,CACE,SADF,EAEEC,0BAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+BL,MAA/B;AACAD;AACD,GAPH,EAQEO,wBARF;;AAWAZ,MAAIa,GAAJ,CACE,MADF,EAEEC,0BAFF,EAGE,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOS,MAAP,IAAiB,CAArB,EAAwB;AACtBV,WAAKI,qBAAWO,aAAX,CAAyBP,qBAAWQ,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLb,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BO,iBAAS,IADoB;AAE7BX,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAdH,EAeEO,wBAfF;AAiBAZ,MAAImB,IAAJ,CACE,MADF,EAEEC,mBAFF,EAGE,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOS,MAAP,IAAiB,CAArB,EAAwB;AACtBX,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BO,iBAAS,IADoB;AAE7BX,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WAAKI,qBAAWO,aAAX,CAAyBP,qBAAWQ,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEL,wBAfF;AAiBAZ,MAAIqB,GAAJ,CACE,SADF,EAEEC,sBAFF,EAGE,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOS,MAAP,IAAiB,CAArB,EAAwB;AACtBX,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BO,iBAAS,IADoB;AAE7BX,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WAAKI,qBAAWO,aAAX,CAAyBP,qBAAWQ,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEL,wBAfF;AAiBA,SAAOZ,GAAP;AACD,C","file":"visitType.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport {\n  selectStatement,\n  addVisit,\n  updateVisit,\n  deleteVisitType\n} from \"../model/visitType\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.delete(\n    \"/delete\",\n    deleteVisitType,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json(result);\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get\",\n    selectStatement,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n  api.post(\n    \"/add\",\n    addVisit,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  api.put(\n    \"/update\",\n    updateVisit,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  return api;\n};\n"]}