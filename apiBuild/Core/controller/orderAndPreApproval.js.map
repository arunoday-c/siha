{"version":3,"sources":["../../../src/controller/orderAndPreApproval.js"],"names":["config","db","api","post","generateDbConnection","insertOrderedServices","insertLadOrderedServices","insertRadOrderedServices","req","res","next","connection","commit","error","rollback","result","records","status","httpStatus","ok","json","success","releaseConnection","get","getPreAprovalList","put","updatePreApproval","selectOrderServices","getOrderServices","updateOrderedServices","updateOrderedServicesBilled"],"mappings":"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","file":"orderAndPreApproval.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection, generateDbConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nimport { debugLog } from \"../utils/logging\";\nimport {\n  insertOrderedServices,\n  getPreAprovalList,\n  updatePreApproval,\n  selectOrderServices,\n  updateOrderedServices,\n  updateOrderedServicesBilled,\n  getOrderServices\n} from \"../model/orderAndPreApproval\";\nimport { insertRadOrderedServices } from \"../model/radiology\";\nimport { insertLadOrderedServices } from \"../model/laboratory\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan: to  insertOrderedServices\n  api.post(\n    \"/insertOrderedServices\",\n    generateDbConnection,\n    insertOrderedServices,\n    insertLadOrderedServices,\n    insertRadOrderedServices,\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error\", error);\n        debugLog(\"commit error\", error);\n        if (error) {\n          debugLog(\"roll error\", error);\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          let result = req.records;\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  // created by irfan : to fetch pre approval list\n  api.get(\n    \"/getPreAprovalList\",\n    getPreAprovalList,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  //created by irfan :to update preApproal\n  api.put(\n    \"/updatePreApproval\",\n    updatePreApproval,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Nowshad :to get Ordered Services which to bill\n  api.get(\n    \"/selectOrderServices\",\n    selectOrderServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Nowshad :to get Ordered Services to Display\n  api.get(\n    \"/getOrderServices\",\n    getOrderServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan :to update OrderedServices\n  api.put(\n    \"/updateOrderedServices\",\n    updateOrderedServices,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Nowshad :to update OrderedServices as billed\n  api.put(\n    \"/updateOrderedServicesBilled\",\n    updateOrderedServicesBilled,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}