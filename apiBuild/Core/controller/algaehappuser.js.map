{"version":3,"sources":["../../../src/controller/algaehappuser.js"],"names":["config","db","api","get","selectAppUsers","req","res","next","result","records","length","httpStatus","generateError","notFound","status","ok","json","success","releaseConnection","selectLoginUser","validUser","selectAppGroup","selectRoles","post","createUserLogin","getLoginUserMaster"],"mappings":"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","file":"algaehappuser.js","sourcesContent":["import { Router } from \"express\";\nimport {\n  selectAppUsers,\n  selectLoginUser,\n  selectAppGroup,\n  selectRoles,\n  createUserLogin,\n  getLoginUserMaster\n} from \"../model/algaehappuser\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.get(\n    \"/selectAppUsers\",\n    selectAppUsers,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/selectLoginUser\",\n    selectLoginUser,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/selectAppGroup\",\n    selectAppGroup,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/selectRoles\",\n    selectRoles,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.post(\n    \"/createUserLogin\",\n    createUserLogin,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/getLoginUserMaster\",\n    getLoginUserMaster,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}