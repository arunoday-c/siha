{"version":3,"sources":["../../../src/controller/opBillCancellation.js"],"names":["config","db","api","post","generateDbConnection","ReceiptPaymentInsert","addOpBillCancellation","updateOPBilling","req","res","next","connection","commit","error","rollback","releaseDBConnection","status","httpStatus","ok","json","success","records","body","releaseConnection","get","getBillCancellation","getReceiptEntry","_receptEntry","receptEntry","_billing","result"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;AAMA;;AACA;;AACA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CACE,wBADF,EAEEC,2BAFF,EAGEC,kCAHF,EAIEC,yCAJF,EAKEC,mCALF,EAME,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,UAAIC,KAAJ,EAAW;AACTF,mBAAWG,QAAX,CAAoB,YAAM;AACxBC,8BAAoBd,EAApB,EAAwBU,UAAxB;AACAD,eAAKG,KAAL;AACD,SAHD;AAID,OALD,MAKO;AACLJ,YAAIO,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASb,IAAIc;AAFgB,SAA/B;AAIAZ;AACD;AACF,KAbD;AAcD,GAtBH,EAuBEa,wBAvBF;;AA0BArB,MAAIsB,GAAJ,CACE,sBADF,EAEEpB,2BAFF,EAGEqB,uCAHF,EAIEC,6BAJF,EAKE,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT,EAAmB,MAAnB;AACA,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,6BAAS,SAAT,EAAoBC,KAApB;AACA,UAAIA,KAAJ,EAAW;AACTF,mBAAWG,QAAX,CAAoB,YAAM;AACxBJ,eAAKG,KAAL;AACD,SAFD;AAGD,OAJD,MAIO;AACL,+BAAS,SAAT,EAAoBL,IAAIa,OAAxB;AACA,YAAIM,eAAenB,IAAIoB,WAAvB;AACA,YAAIC,WAAWrB,IAAIa,OAAnB;;AAEA,YAAIS,sBAAcH,YAAd,EAA+BE,QAA/B,CAAJ;;AAEA,eAAOrB,IAAIoB,WAAX;AACA,+BAAS,cAAT,EAAyBE,MAAzB;AACArB,YAAIO,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASS;AAFoB,SAA/B;AAIApB;AACD;AACF,KArBD;AAsBD,GA9BH,EA+BEa,wBA/BF;;AAkCA;AACA,SAAOrB,GAAP;AACD,C","file":"opBillCancellation.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection, generateDbConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\nimport {\n  addOpBillCancellation,\n  getBillCancellation,\n  updateOPBilling\n} from \"../model/opBillCancellation\";\n\nimport { debugFunction, debugLog } from \"../utils/logging\";\nimport { getReceiptEntry, ReceiptPaymentInsert } from \"../model/receiptentry\";\nimport extend from \"extend\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by Nowshad : to save opBilling\n  api.post(\n    \"/addOpBillCancellation\",\n    generateDbConnection,\n    ReceiptPaymentInsert,\n    addOpBillCancellation,\n    updateOPBilling,\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        } else {\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: req.body\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getBillCancellation\",\n    generateDbConnection,\n    getBillCancellation,\n    getReceiptEntry,\n    (req, res, next) => {\n      debugLog(\"test: \", \"test\");\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error: \", error);\n        if (error) {\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          debugLog(\"result:\", req.records);\n          let _receptEntry = req.receptEntry;\n          let _billing = req.records;\n\n          let result = { ..._receptEntry, ..._billing };\n\n          delete req.receptEntry;\n          debugLog(\"OP result : \", result);\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  /////\n  return api;\n};\n"]}