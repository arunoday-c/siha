{"version":3,"sources":["../../../src/controller/opCreditSettlement.js"],"names":["config","db","api","post","generateDbConnection","ReceiptPaymentInsert","addCreidtSettlement","updateOPBilling","req","res","next","connection","commit","error","rollback","releaseDBConnection","result","records","status","httpStatus","ok","json","success","releaseConnection","get","getCreidtSettlement","getReceiptEntry","_receptEntry","receptEntry","_billing","getPatientwiseBill","length","generateError","notFound"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;AAOA;;AACA;;AACA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CACE,sBADF,EAEEC,2BAFF,EAGEC,kCAHF,EAIEC,uCAJF,EAKEC,mCALF,EAME,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,UAAIC,KAAJ,EAAW;AACTF,mBAAWG,QAAX,CAAoB,YAAM;AACxBC,8BAAoBd,EAApB,EAAwBU,UAAxB;AACAD,eAAKG,KAAL;AACD,SAHD;AAID,OALD,MAKO;AACL,YAAIG,SAASR,IAAIS,OAAjB;AACAR,YAAIS,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BL,mBAASD;AAFoB,SAA/B;AAIAN;AACD;AACF,KAdD;AAeD,GAvBH,EAwBEa,wBAxBF;;AA2BArB,MAAIsB,GAAJ,CACE,sBADF,EAEEpB,2BAFF,EAGEqB,uCAHF,EAIEC,6BAJF,EAKE,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT,EAAmB,MAAnB;AACA,QAAIC,aAAaH,IAAIG,UAArB;AACAA,eAAWC,MAAX,CAAkB,iBAAS;AACzB,6BAAS,SAAT,EAAoBC,KAApB;AACA,UAAIA,KAAJ,EAAW;AACTF,mBAAWG,QAAX,CAAoB,YAAM;AACxBJ,eAAKG,KAAL;AACD,SAFD;AAGD,OAJD,MAIO;AACL,+BAAS,SAAT,EAAoBL,IAAIS,OAAxB;AACA,YAAIU,eAAenB,IAAIoB,WAAvB;AACA,YAAIC,WAAWrB,IAAIS,OAAnB;;AAEA,YAAID,sBAAcW,YAAd,EAA+BE,QAA/B,CAAJ;;AAEA,eAAOrB,IAAIoB,WAAX;AACA,+BAAS,cAAT,EAAyBZ,MAAzB;AACAP,YAAIS,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BL,mBAASD;AAFoB,SAA/B;AAIAN;AACD;AACF,KArBD;AAsBD,GA9BH,EA+BEa,wBA/BF;;AAkCArB,MAAIsB,GAAJ,CACE,qBADF,EAEEM,sCAFF,EAGE,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIM,SAASR,IAAIS,OAAjB;AACA,QAAID,OAAOe,MAAP,IAAiB,CAArB,EAAwB;AACtBrB,WAAKS,qBAAWa,aAAX,CAAyBb,qBAAWc,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLxB,UAAIS,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BL,iBAASD;AAFoB,OAA/B;AAID;AACDN;AACD,GAdH,EAeEa,wBAfF;;AAkBA;AACA,SAAOrB,GAAP;AACD,C","file":"opCreditSettlement.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection, generateDbConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\nimport {\n  addCreidtSettlement,\n  getCreidtSettlement,\n  updateOPBilling,\n  getPatientwiseBill\n} from \"../model/opCreditSettlement\";\n\nimport { debugFunction, debugLog } from \"../utils/logging\";\nimport { getReceiptEntry, ReceiptPaymentInsert } from \"../model/receiptentry\";\nimport extend from \"extend\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by Nowshad : to save opBilling\n  api.post(\n    \"/addCreidtSettlement\",\n    generateDbConnection,\n    ReceiptPaymentInsert,\n    addCreidtSettlement,\n    updateOPBilling,\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        } else {\n          let result = req.records;\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getCreidtSettlement\",\n    generateDbConnection,\n    getCreidtSettlement,\n    getReceiptEntry,\n    (req, res, next) => {\n      debugLog(\"test: \", \"test\");\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error: \", error);\n        if (error) {\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          debugLog(\"result:\", req.records);\n          let _receptEntry = req.receptEntry;\n          let _billing = req.records;\n\n          let result = { ..._receptEntry, ..._billing };\n\n          delete req.receptEntry;\n          debugLog(\"OP result : \", result);\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getPatientwiseBill\",\n    getPatientwiseBill,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  /////\n  return api;\n};\n"]}