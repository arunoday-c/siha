{"version":3,"sources":["../../../src/controller/department.js"],"names":["config","db","api","post","addDepartment","req","res","next","resultTables","records","status","httpStatus","ok","json","success","releaseConnection","put","updateDepartment","resultSelect","length","generateError","notFound","get","selectDepartment","result","selectSubDepartment","addSubDepartment","updateSubDepartment","results","delete","deleteSubDepartment","makeSubDepartmentInActive","makeDepartmentInActive","deleteDepartment","selectdoctors","departmets","departments","doctors","dept_Obj","Array","doc_Obj","d_keys","Object","keys","forEach","item","index","firstItem","LINQ","FirstOrDefault","subDept","department_id","sub_department_id","sub_department_name","department_type","arabic_sub_department_name","push","doc_keys","doc","employee_id","full_name","arabic_name","services_id","selectDoctorsAndClinic","sub_dept_id","provider_id"],"mappings":"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","file":"department.js","sourcesContent":["import { Router } from \"express\";\nimport {\n  addDepartment,\n  updateDepartment,\n  selectDepartment,\n  selectSubDepartment,\n  addSubDepartment,\n  updateSubDepartment,\n  deleteDepartment,\n  selectdoctors,\n  selectDoctorsAndClinic,\n  deleteSubDepartment,\n  makeSubDepartmentInActive,\n  makeDepartmentInActive\n} from \"../model/department\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/add\",\n    addDepartment,\n    (req, res, next) => {\n      let resultTables = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultTables\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateDepartment\",\n    updateDepartment,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get\",\n    selectDepartment,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get/subdepartment\",\n    selectSubDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.post(\n    \"/add/subdepartment\",\n    addSubDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateSubDepartment\",\n    updateSubDepartment,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by:irfan\n  api.delete(\n    \"/deleteSubDepartment\",\n    deleteSubDepartment,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by:irfan\n  api.put(\n    \"/makeSubDepartmentInActive\",\n    makeSubDepartmentInActive,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by:irfan makeDepartmentInActive\n  api.put(\n    \"/makeDepartmentInActive\",\n    makeDepartmentInActive,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.delete(\n    \"/deleteDepartment\",\n    deleteDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json(result);\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get/get_All_Doctors_DepartmentWise\",\n    selectdoctors,\n    (req, res, next) => {\n      let result = req.records;\n      let departmets = result.departments;\n      let doctors = result.doctors;\n      let dept_Obj = new Array();\n      let doc_Obj = new Array();\n      let d_keys = Object.keys(departmets);\n      d_keys.forEach((item, index) => {\n        let firstItem = new LINQ(departmets[item]).FirstOrDefault();\n        let subDept = new Object();\n        subDept[\"department_id\"] = firstItem.department_id;\n        subDept[\"sub_department_id\"] = firstItem.sub_department_id;\n        subDept[\"sub_department_name\"] = firstItem.sub_department_name;\n        subDept[\"department_type\"] = firstItem.department_type;\n        subDept[\"arabic_sub_department_name\"] =\n          firstItem.arabic_sub_department_name;\n        subDept[\"doctors\"] = departmets[item];\n        dept_Obj.push(subDept);\n      });\n\n      let doc_keys = Object.keys(doctors);\n      doc_keys.forEach((item, index) => {\n        let firstItem = new LINQ(doctors[item]).FirstOrDefault();\n        let doc = new Object();\n        doc[\"employee_id\"] = firstItem.employee_id;\n        doc[\"full_name\"] = firstItem.full_name;\n        doc[\"arabic_name\"] = firstItem.arabic_name;\n        doc[\"services_id\"] = firstItem.services_id;\n        doc[\"departments\"] = doctors[item];\n        doc_Obj.push(doc);\n      });\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: {\n          departmets: dept_Obj,\n          doctors: doc_Obj\n        }\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by:irfan to get sub departments doctors and clinic\n  api.get(\n    \"/selectDoctorsAndClinic\",\n    selectDoctorsAndClinic,\n    (req, res, next) => {\n      let result = req.records;\n      let departmets = result.departments;\n      let doctors = result.doctors;\n      let dept_Obj = new Array();\n      let doc_Obj = new Array();\n      let d_keys = Object.keys(departmets);\n      d_keys.forEach((item, index) => {\n        let firstItem = new LINQ(departmets[item]).FirstOrDefault();\n        let subDept = new Object();\n        subDept[\"department_id\"] = firstItem.department_id;\n        subDept[\"sub_dept_id\"] = firstItem.sub_dept_id;\n        subDept[\"sub_department_name\"] = firstItem.sub_department_name;\n        subDept[\"arabic_sub_department_name\"] =\n          firstItem.arabic_sub_department_name;\n        subDept[\"doctors\"] = departmets[item];\n        dept_Obj.push(subDept);\n      });\n\n      let doc_keys = Object.keys(doctors);\n      doc_keys.forEach((item, index) => {\n        let firstItem = new LINQ(doctors[item]).FirstOrDefault();\n        let doc = new Object();\n        doc[\"provider_id\"] = firstItem.provider_id;\n        doc[\"full_name\"] = firstItem.full_name;\n        doc[\"arabic_name\"] = firstItem.arabic_name;\n        doc[\"services_id\"] = firstItem.services_id;\n        doc[\"departments\"] = doctors[item];\n        doc_Obj.push(doc);\n      });\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: {\n          departmets: dept_Obj,\n          doctors: doc_Obj\n        }\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}