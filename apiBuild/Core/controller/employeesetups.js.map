{"version":3,"sources":["../../../src/controller/employeesetups.js"],"names":["config","db","api","get","getDesignations","req","res","next","result","records","length","httpStatus","generateError","notFound","status","ok","json","success","releaseConnection","getEmpSpeciality","getEmpCategory","post","addDesignation","delete","deleteDesignation","invalid_input","getOvertimeGroups","addOvertimeGroups","deleteOvertimeGroups","put","updateOvertimeGroups"],"mappings":"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","file":"employeesetups.js","sourcesContent":["import { Router } from \"express\";\nimport {\n  getDesignations,\n  getEmpSpeciality,\n  getEmpCategory,\n  addDesignation,\n  deleteDesignation,\n  getOvertimeGroups,\n  addOvertimeGroups,\n  deleteOvertimeGroups,\n  updateOvertimeGroups\n} from \"../model/employeesetups\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.get(\n    \"/getDesignations\",\n    getDesignations,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmpSpeciality\",\n    getEmpSpeciality,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/getEmpCategory\",\n    getEmpCategory,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by irfan:\n  api.post(\n    \"/addDesignation\",\n    addDesignation,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.delete(\"/deleteDesignation\", deleteDesignation, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  //created by Adnan\n  api.get(\n    \"/getOvertimeGroups\",\n    getOvertimeGroups,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Adnan\n  api.post(\n    \"/addOvertimeGroups\",\n    addOvertimeGroups,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  //created by Adnan\n  api.delete(\n    \"/deleteOvertimeGroups\",\n    deleteOvertimeGroups,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"Please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  //created by Adnan\n  api.put(\"/updateOvertimeGroups\", updateOvertimeGroups, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"Please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  return api;\n};\n"]}