{"version":3,"sources":["../../../src/controller/employee.js"],"names":["config","db","api","post","addEmployee","req","res","next","resultBack","records","length","httpStatus","generateError","notFound","status","ok","json","success","releaseConnection","addEmployeeGroups","put","updateEmployee","result","message","get","getEmployee","getEmployeeDetails","getEmployeeCategory","getDoctorServiceCommission","getDoctorServiceTypeCommission","getEmployeeGroups","updateEmployeeGroup","invalid_input","delete","deleteEmployeeGroup","addEarningDeduction","getEarningDeduction","updateEarningDeduction","deleteEarningDeduction","addLoanMaster","getLoanMaster","updateLoanMaster","deleteLoanMaster","addEmployeeMaster","addEmployeeIdentification","getEmployeeIdentification","updateEmployeeIdentification","deleteEmployeeIdentification","addEmployeeInfo","getEmployeeWorkExperience","deleteEmployeeWorkExperience","addEmployeeWorkExperience","updateEmployeeWorkExperience","getEmployeeEducation","deleteEmployeeEducation","addEmployeeEducation","updateEmployeeEducation"],"mappings":"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","file":"employee.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport {\n  addEmployee,\n  getEmployee,\n  updateEmployee,\n  getEmployeeDetails,\n  getDoctorServiceCommission,\n  getEmployeeCategory,\n  getDoctorServiceTypeCommission,\n  addEmployeeGroups,\n  getEmployeeGroups,\n  updateEmployeeGroup,\n  deleteEmployeeGroup,\n  addEarningDeduction,\n  getEarningDeduction,\n  updateEarningDeduction,\n  deleteEarningDeduction,\n  addEmployeeMaster,\n  addEmployeeIdentification,\n  getEmployeeIdentification,\n  updateEmployeeIdentification,\n  deleteEmployeeIdentification,\n  addEmployeeInfo,\n  addLoanMaster,\n  getLoanMaster,\n  updateLoanMaster,\n  deleteLoanMaster,\n  getEmployeeWorkExperience,\n  addEmployeeWorkExperience,\n  deleteEmployeeWorkExperience,\n  updateEmployeeWorkExperience,\n  updateEmployeeEducation,\n  deleteEmployeeEducation,\n  addEmployeeEducation,\n  getEmployeeEducation\n} from \"../model/employee\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.post(\n    \"/addEmployee\",\n    addEmployee,\n    (req, res, next) => {\n      let resultBack = req.records;\n      if (resultBack.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No record found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultBack\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  api.post(\n    \"/addEmployeeGroups\",\n    addEmployeeGroups,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateEmployee\",\n    updateEmployee,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        message: \"Updated successfully\",\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get\",\n    getEmployee,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmployeeDetails\",\n    getEmployeeDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmployeeCategory\",\n    getEmployeeCategory,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getDoctorServiceCommission\",\n    getDoctorServiceCommission,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getDoctorServiceTypeCommission\",\n    getDoctorServiceTypeCommission,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmployeeGroups\",\n    getEmployeeGroups,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.put(\"/updateEmployeeGroup\", updateEmployeeGroup, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  // created by irfan\n  api.delete(\"/deleteEmployeeGroup\", deleteEmployeeGroup, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  //Start of Payroll Settings\n\n  // created by irfan\n  api.post(\"/addEarningDeduction\", addEarningDeduction, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  api.get(\n    \"/getEarningDeduction\",\n    getEarningDeduction,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.put(\n    \"/updateEarningDeduction\",\n    updateEarningDeduction,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by irfan:\n  api.delete(\n    \"/deleteEarningDeduction\",\n    deleteEarningDeduction,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  //Loan Master created by Adnan\n\n  // created by Adnan\n  api.post(\"/addLoanMaster\", addLoanMaster, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  // created by Adnan\n  api.get(\n    \"/getLoanMaster\",\n    getLoanMaster,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Adnan\n  api.put(\"/updateLoanMaster\", updateLoanMaster, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  // created by Adnan\n  api.delete(\"/deleteLoanMaster\", deleteLoanMaster, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  //Loan Master End created by Adnan\n  //End of Payroll Settings\n\n  api.post(\n    \"/addEmployeeMaster\",\n    addEmployeeMaster,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.post(\n    \"/addEmployeeIdentification\",\n    addEmployeeIdentification,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan\n  api.get(\n    \"/getEmployeeIdentification\",\n    getEmployeeIdentification,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by irfan\n  api.put(\n    \"/updateEmployeeIdentification\",\n    updateEmployeeIdentification,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by irfan\n  api.delete(\n    \"/deleteEmployeeIdentification\",\n    deleteEmployeeIdentification,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  api.post(\n    \"/addEmployeeInfo\",\n    addEmployeeInfo,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Adnan\n  api.get(\n    \"/getEmployeeWorkExperience\",\n    getEmployeeWorkExperience,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by Adnan\n  api.delete(\n    \"/deleteEmployeeWorkExperience\",\n    deleteEmployeeWorkExperience,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by Adnan\n  api.post(\n    \"/addEmployeeWorkExperience\",\n    addEmployeeWorkExperience,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Adnan\n  api.put(\n    \"/updateEmployeeWorkExperience\",\n    updateEmployeeWorkExperience,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by Adnan\n  api.get(\"/getEmployeeEducation\", getEmployeeEducation, (req, res, next) => {\n    let result = req.records;\n    if (result.invalid_input == true) {\n      res.status(httpStatus.ok).json({\n        success: false,\n        records: \"please provide valid input\"\n      });\n    } else {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n    }\n    next();\n  });\n\n  // created by Adnan\n  api.delete(\n    \"/deleteEmployeeEducation\",\n    deleteEmployeeEducation,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  // created by Adnan\n  api.post(\n    \"/addEmployeeEducation\",\n    addEmployeeEducation,\n    (req, res, next) => {\n      let resultBack = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: resultBack\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by Adnan\n  api.put(\n    \"/updateEmployeeEducation\",\n    updateEmployeeEducation,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.invalid_input == true) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: \"please provide valid input\"\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    }\n  );\n\n  return api;\n};\n"]}