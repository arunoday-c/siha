{"version":3,"sources":["../../../src/controller/algaehMasters.js"],"names":["config","db","api","post","addAlgaehGroupMAster","req","res","next","result","records","validUser","status","httpStatus","ok","json","success","releaseConnection","addAlgaehRoleMAster","addAlgaehModule","get","getRoleBaseActiveModules","getRoleBaseInActiveComponents","getAlgaehModules","getAlgaehScreens","addAlgaehScreen","addAlgaehComponent","getAlgaehComponents","addAlgaehScreenElement","getAlgaehScreenElement","getFormulas","addFormula","put","updateFormula","delete","deleteFormula"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;kBAmBe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CACE,uBADF,EAEEC,mCAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAjBH,EAkBES,wBAlBF;AAoBA;AACAd,MAAIC,IAAJ,CACE,sBADF,EAEEc,kCAFF,EAGE,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAjBH,EAkBES,wBAlBF;;AAqBA;AACAd,MAAIC,IAAJ,CACE,kBADF,EAEEe,8BAFF,EAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAjBH,EAkBES,wBAlBF;;AAqBA;AACAd,MAAIiB,GAAJ,CACE,2BADF,EAEEC,uCAFF,EAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWES,wBAXF;;AAcA;AACAd,MAAIiB,GAAJ,CACE,gCADF,EAEEE,4CAFF,EAGE,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH,EAWES,wBAXF;;AAcA;AACAd,MAAIiB,GAAJ,CACE,mBADF,EAEEG,+BAFF,EAGE,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;;AAsBA;AACAd,MAAIiB,GAAJ,CACE,mBADF,EAEEI,+BAFF,EAGE,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;AAqBA;AACAd,MAAIC,IAAJ,CACE,kBADF,EAEEqB,8BAFF,EAGE,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;;AAsBA;AACAd,MAAIC,IAAJ,CACE,qBADF,EAEEsB,iCAFF,EAGE,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;AAqBA;AACAd,MAAIiB,GAAJ,CACE,sBADF,EAEEO,kCAFF,EAGE,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;AAqBA;AACAd,MAAIC,IAAJ,CACE,yBADF,EAEEwB,qCAFF,EAGE,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;AAqBA;AACAd,MAAIiB,GAAJ,CACE,yBADF,EAEES,qCAFF,EAGE,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,SAAP,IAAoB,KAAxB,EAA+B;AAC7BJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,KADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID,KALD,MAKO;AACLF,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BN,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAlBH,EAmBES,wBAnBF;;AAsBA;AACAd,MAAIiB,GAAJ,CACE,cADF,EAEEU,0BAFF,EAGE,UAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;;AAKAD;AACD,GAZH,EAaES,wBAbF;;AAgBA;AACAd,MAAIC,IAAJ,CACE,aADF,EAEE2B,yBAFF,EAGE,UAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;;AAKAD;AACD,GAZH,EAaES,wBAbF;;AAgBA;AACAd,MAAI6B,GAAJ,CACE,gBADF,EAEEC,4BAFF,EAGE,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;;AAKAD;AACD,GAZH,EAaES,wBAbF;;AAgBA;AACAd,MAAI+B,MAAJ,CACE,gBADF,EAEEC,4BAFF,EAGE,UAAC7B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEAH,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BN,eAASD;AAFoB,KAA/B;;AAKAD;AACD,GAZH,EAaES,wBAbF;;AAgBA,SAAOd,GAAP;AACD,C","file":"algaehMasters.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nimport {\n  addAlgaehGroupMAster,\n  addAlgaehRoleMAster,\n  addAlgaehModule,\n  getRoleBaseActiveModules,\n  getRoleBaseInActiveComponents,\n  getAlgaehModules,\n  getAlgaehScreens,\n  addAlgaehScreen,\n  addAlgaehComponent,\n  getAlgaehComponents,\n  addAlgaehScreenElement,\n  getAlgaehScreenElement,\n  getFormulas,\n  addFormula,\n  updateFormula,\n  deleteFormula\n} from \"../model/algaehMasters\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan :to add\n  api.post(\n    \"/addAlgaehGroupMAster\",\n    addAlgaehGroupMAster,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan :to add\n  api.post(\n    \"/addAlgaehRoleMAster\",\n    addAlgaehRoleMAster,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add\n  api.post(\n    \"/addAlgaehModule\",\n    addAlgaehModule,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to\n  api.get(\n    \"/getRoleBaseActiveModules\",\n    getRoleBaseActiveModules,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to add\n  api.get(\n    \"/getRoleBaseInActiveComponents\",\n    getRoleBaseInActiveComponents,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/getAlgaehModules\",\n    getAlgaehModules,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/getAlgaehScreens\",\n    getAlgaehScreens,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan :\n  api.post(\n    \"/addAlgaehScreen\",\n    addAlgaehScreen,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.post(\n    \"/addAlgaehComponent\",\n    addAlgaehComponent,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan :\n  api.get(\n    \"/getAlgaehComponents\",\n    getAlgaehComponents,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan :\n  api.post(\n    \"/addAlgaehScreenElement\",\n    addAlgaehScreenElement,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n  // created by irfan :\n  api.get(\n    \"/getAlgaehScreenElement\",\n    getAlgaehScreenElement,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.validUser == false) {\n        res.status(httpStatus.ok).json({\n          success: false,\n          records: result\n        });\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.get(\n    \"/getFormulas\",\n    getFormulas,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.post(\n    \"/addFormula\",\n    addFormula,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.put(\n    \"/updateFormula\",\n    updateFormula,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :\n  api.delete(\n    \"/deleteFormula\",\n    deleteFormula,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}