{"version":3,"sources":["../../../src/controller/opBilling.js"],"names":["config","db","api","post","generateDbConnection","addOpBIlling","updateOrderedServicesBilled","updateLabOrderedBilled","req","res","next","records","LAB","updateRadOrderedBilled","RAD","connection","commit","error","rollback","releaseDBConnection","status","httpStatus","ok","json","success","body","releaseConnection","get","getPednigBills","result","selectBill","getReceiptEntry","_receptEntry","receptEntry","_billing"],"mappings":"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","file":"opBilling.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection, generateDbConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\nimport { addOpBIlling, selectBill, getPednigBills } from \"../model/opBilling\";\nimport { updateOrderedServicesBilled } from \"../model/orderAndPreApproval\";\nimport { debugFunction, debugLog } from \"../utils/logging\";\nimport { updateRadOrderedBilled } from \"../model/radiology\";\nimport { updateLabOrderedBilled } from \"../model/laboratory\";\nimport { insertRadOrderedServices } from \"../model/radiology\";\nimport { insertLadOrderedServices } from \"../model/laboratory\";\nimport { getReceiptEntry } from \"../model/receiptentry\";\nimport extend from \"extend\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // created by irfan : to save opBilling\n  //TODO change middle ware to promisify function --added by noor\n  api.post(\n    \"/addOpBIlling\",\n    generateDbConnection,\n    addOpBIlling,\n    updateOrderedServicesBilled,\n    updateLabOrderedBilled,\n    (req, res, next) => {\n      if (req.records.LAB != null && req.records.LAB == true) {\n        insertLadOrderedServices(req, res, next);\n      } else {\n        next();\n      }\n    },\n    updateRadOrderedBilled,\n    (req, res, next) => {\n      if (req.records.RAD != null && req.records.RAD == true) {\n        insertRadOrderedServices(req, res, next);\n      } else {\n        next();\n      }\n    },\n\n    (req, res, next) => {\n      let connection = req.connection;\n      connection.commit(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        } else {\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: req.body\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  // created by Nowshad: to  getPednigBills\n  api.get(\n    \"/getPednigBills\",\n    getPednigBills,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get\",\n    generateDbConnection,\n    selectBill,\n    getReceiptEntry,\n    (req, res, next) => {\n      debugLog(\"test: \", \"test\");\n      let connection = req.connection;\n      connection.commit(error => {\n        debugLog(\"error: \", error);\n        if (error) {\n          connection.rollback(() => {\n            next(error);\n          });\n        } else {\n          let _receptEntry = req.receptEntry;\n          let _billing = req.records;\n\n          let result = { ..._receptEntry, ..._billing };\n\n          delete req.receptEntry;\n          debugLog(\"OP result : \", result);\n          res.status(httpStatus.ok).json({\n            success: true,\n            records: result\n          });\n          next();\n        }\n      });\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}