{"version":3,"sources":["../../../src/controller/updateMasters.js"],"names":["api","delete","deleteVisa","req","res","next","result","records","status","httpStatus","ok","json","releaseConnection","post","insertToAppgen","generateError","notModified","success","put","updateToAppgen","addVisa","length","updateVisa"],"mappings":";;;;;;AAAA;;AAOA;;AACA;;AACA;;;;;;kBACe,YAAM;AACnB,MAAIA,MAAM,sBAAV;;AAEAA,MAAIC,MAAJ,CACE,cADF,EAEEC,yBAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+BL,MAA/B;AACAD;AACD,GAPH,EAQEO,wBARF;;AAWAZ,MAAIa,IAAJ,CACE,UADF,EAEEC,6BAFF,EAGE,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,UAAU,IAAd,EAAoB;AAClBD,WACEI,qBAAWM,aAAX,CAAyBN,qBAAWO,WAApC,EAAiD,mBAAjD,CADF;AAGD,KAJD,MAIO;AACLZ,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BM,iBAAS,IADoB;AAE7BV,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAhBH,EAiBEO,wBAjBF;AAmBAZ,MAAIkB,GAAJ,CACE,iBADF,EAEEC,6BAFF,EAGE,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,UAAU,IAAd,EAAoB;AAClBD,WACEI,qBAAWM,aAAX,CAAyBN,qBAAWO,WAApC,EAAiD,mBAAjD,CADF;AAGD,KAJD,MAIO;AACLZ,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BM,iBAAS,IADoB;AAE7BV,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAhBH,EAiBEO,wBAjBF;AAmBAZ,MAAIa,IAAJ,CACE,WADF,EAEEO,sBAFF,EAGE,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOe,MAAP,IAAiB,CAArB,EAAwB;AACtBjB,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BM,iBAAS,IADoB;AAE7BV,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WACEI,qBAAWM,aAAX,CAAyBN,qBAAWO,WAApC,EAAiD,mBAAjD,CADF;AAGD;AACF,GAhBH,EAiBEJ,wBAjBF;;AAoBAZ,MAAIkB,GAAJ,CACE,cADF,EAEEI,yBAFF,EAGE,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOe,MAAP,IAAiB,CAArB,EAAwB;AACtBjB,UAAII,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BM,iBAAS,IADoB;AAE7BV,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WACEI,qBAAWM,aAAX,CAAyBN,qBAAWO,WAApC,EAAiD,mBAAjD,CADF;AAGD;AACF,GAhBH,EAiBEJ,wBAjBF;;AAoBA,SAAOZ,GAAP;AACD,C","file":"updateMasters.js","sourcesContent":["import {\n  insertToAppgen,\n  updateToAppgen,\n  updateVisa,\n  addVisa,\n  deleteVisa\n} from \"../model/mastersUpdate\";\nimport { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default () => {\n  let api = Router();\n\n  api.delete(\n    \"/delete/visa\",\n    deleteVisa,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json(result);\n      next();\n    },\n    releaseConnection\n  );\n\n  api.post(\n    \"/autogen\",\n    insertToAppgen,\n    (req, res, next) => {\n      let result = req.records;\n      if (result == null) {\n        next(\n          httpStatus.generateError(httpStatus.notModified, \"no record updated\")\n        );\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n  api.put(\n    \"/update/autogen\",\n    updateToAppgen,\n    (req, res, next) => {\n      let result = req.records;\n      if (result == null) {\n        next(\n          httpStatus.generateError(httpStatus.notModified, \"no record updated\")\n        );\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n  api.post(\n    \"/add/visa\",\n    addVisa,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(\n          httpStatus.generateError(httpStatus.notModified, \"no record updated\")\n        );\n      }\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/update/visa\",\n    updateVisa,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(\n          httpStatus.generateError(httpStatus.notModified, \"no record updated\")\n        );\n      }\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}