{"version":3,"sources":["../../../src/controller/frontDesk.js"],"names":["config","db","api","post","addFrontDesk","req","res","next","body","patient_Image","patient_code","status","httpStatus","ok","json","success","records","releaseConnection","updateFrontDesk","get","selectFrontDesk","generateError","notFound","query","getCashHandoverDetails","result","put","updateCashHandoverDetails"],"mappings":";;;;;;;AACA;;;AADA;;AAEA;;AACA;;AACA;;AACA;;AAOA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,MADF,EAEEC,uBAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT,EAAmBF,IAAIG,IAAJ,CAASC,aAA5B;AACA,2BAAS,YAAT,EAAuBJ,IAAIG,IAA3B;AACA,QAAIH,IAAIG,IAAJ,CAASC,aAAT,IAA0B,IAA9B,EAAoC;AAClC,6BAAS,mBAAT;AACA,iCACEJ,IAAIG,IAAJ,CAASC,aADX,EAEEJ,IAAIG,IAAJ,CAASE,YAFX,EAGEL,IAAIG,IAAJ,CAASE,YAHX;AAKA,aAAOL,IAAIG,IAAJ,CAASC,aAAhB;AACD;AACDF;AACD,GAhBH,EAiBE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT;;AAEAD,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASX,IAAIG;AAFgB,KAA/B;AAIAD;AACD,GAzBH,EA0BEU,wBA1BF;;AA6BAf,MAAIC,IAAJ,CACE,SADF,EAEEe,0BAFF,EAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASX,IAAIG;AAFgB,KAA/B;AAIAD;AACD,GATH,EAUEU,wBAVF;;AAaAf,MAAIiB,GAAJ,CACE,MADF,EAEEC,0BAFF,EAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIF,IAAIW,OAAJ,IAAe,IAAnB,EAAyB;AACvBT,WAAKK,qBAAWS,aAAX,CAAyBT,qBAAWU,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACL,UAAMb,gBAAgB,8BACpBJ,IAAIkB,KAAJ,CAAUb,YADU,EAEpBL,IAAIkB,KAAJ,CAAUb,YAFU,CAAtB;AAIAJ,UAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,8BAAcX,IAAIW,OAAlB,IAA2BP,eAAeA,aAA1C;AAF6B,OAA/B;AAIAF;AACD;AACF,GAjBH,EAkBEU,wBAlBF;;AAqBA;AACAf,MAAIiB,GAAJ,CACE,yBADF,EAEEK,iCAFF,EAGE,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIkB,SAASpB,IAAIW,OAAjB;AACAV,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASS;AAFoB,KAA/B;AAIAlB;AACD,GAVH,EAWEU,wBAXF;;AAcA;AACAf,MAAIwB,GAAJ,CACE,4BADF,EAEEC,oCAFF,EAGE,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIkB,SAASpB,IAAIW,OAAjB;AACAV,QAAIK,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASS;AAFoB,KAA/B;AAIAlB;AACD,GAVH,EAWEU,wBAXF;;AAcA,SAAOf,GAAP;AACD,C","file":"frontDesk.js","sourcesContent":["import { Router } from \"express\";\n//import extend from \"extend\";\nimport { downloadImage, readFileToBase64 } from \"../utils/images\";\nimport { releaseConnection } from \"../utils\";\nimport { debugLog, debugFunction } from \"../utils/logging\";\nimport {\n  addFrontDesk,\n  updateFrontDesk,\n  selectFrontDesk,\n  getCashHandoverDetails,\n  updateCashHandoverDetails\n} from \"../model/frontDesk\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/add\",\n    addFrontDesk,\n    (req, res, next) => {\n      debugLog(\"Data: \", req.body.patient_Image);\n      debugLog(\"req.body: \", req.body);\n      if (req.body.patient_Image != null) {\n        debugLog(\"Download Image : \");\n        downloadImage(\n          req.body.patient_Image,\n          req.body.patient_code,\n          req.body.patient_code\n        );\n        delete req.body.patient_Image;\n      }\n      next();\n    },\n    (req, res, next) => {\n      debugLog(\"Data1:\");\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.body\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.post(\n    \"/update\",\n    updateFrontDesk,\n    (req, res, next) => {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.body\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get\",\n    selectFrontDesk,\n    (req, res, next) => {\n      if (req.records == null) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        const patient_Image = readFileToBase64(\n          req.query.patient_code,\n          req.query.patient_code\n        );\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: { ...req.records, patient_Image: patient_Image }\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to\n  api.get(\n    \"/getCashHandoverDetails\",\n    getCashHandoverDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  // created by irfan :to\n  api.put(\n    \"/updateCashHandoverDetails\",\n    updateCashHandoverDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}