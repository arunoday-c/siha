{"version":3,"sources":["../../../src/controller/serviceType.js"],"names":["config","db","api","get","getServiceType","req","res","next","status","httpStatus","ok","json","success","records","releaseConnection","getServices","post","addServices","result","length","generateError","notFound","put","updateServices"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;kBAMe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,GAAJ,CACE,GADF,EAEEC,4BAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIE,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASR,IAAIQ;AAFgB,KAA/B;AAIAN;AACD,GATH,EAUEO,wBAVF;;AAaAZ,MAAIC,GAAJ,CACE,aADF,EAEEY,yBAFF,EAIE,UAACV,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIE,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASR,IAAIQ;AAFgB,KAA/B;AAID,GATH;;AAYAX,MAAIc,IAAJ,CACE,cADF,EAEEC,yBAFF,EAGE,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAIQ,OAAjB;AACA,QAAIK,OAAOC,MAAP,IAAiB,CAArB,EAAwB;AACtBb,UAAIE,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASK;AAFoB,OAA/B;AAIAX;AACD,KAND,MAMO;AACLA,WAAKE,qBAAWW,aAAX,CAAyBX,qBAAWY,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEP,wBAfF;;AAkBAZ,MAAIoB,GAAJ,CACE,iBADF,EAEEC,4BAFF,EAGE,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAIQ,OAAjB;AACA,QAAIK,OAAOC,MAAP,IAAiB,CAArB,EAAwB;AACtBb,UAAIE,MAAJ,CAAWC,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASK;AAFoB,OAA/B;AAIAX;AACD,KAND,MAMO;AACLA,WAAKE,qBAAWW,aAAX,CAAyBX,qBAAWY,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH,EAeEP,wBAfF;AAiBA,SAAOZ,GAAP;AACD,C","file":"serviceType.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport {\n  getServiceType,\n  getServices,\n  addServices,\n  updateServices\n} from \"../model/serviceTypes\";\nexport default ({ config, db }) => {\n  let api = Router();\n  api.get(\n    \"/\",\n    getServiceType,\n    (req, res, next) => {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.records\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getService\",\n    getServices,\n\n    (req, res, next) => {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.records\n      });\n    }\n  );\n\n  api.post(\n    \"/addServices\",\n    addServices,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n\n  api.put(\n    \"/updateServices\",\n    updateServices,\n    (req, res, next) => {\n      let result = req.records;\n      if (result.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: result\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  return api;\n};\n"]}