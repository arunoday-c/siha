{"version":3,"sources":["../../src/internal_server.js"],"names":["LocalStrategy","require","Strategy","app","_port","keys","port","use","process","env","NODE_ENV","console","log","express","static","origin","optionsSuccessStatus","server","http","createServer","bodyParser","json","limit","bodyLimit","passport","initialize","usernameField","passwordField","username","password","done","serializeUser","user","deserializeUser","id","msg","set","req","res","next","reqH","headers","reqUser","setHeader","url","header","body","created_by","algaeh_d_app_user_id","updated_by","userIdentity","status","httpStatus","unAuthorized","success","message","dateTime","Date","toLocaleString","requestIdentity","requestClient","requestAPIUser","reqUserIdentity","requestUrl","originalUrl","requestHeader","host","requestMethod","method","logdir","path","join","__dirname","logpath","fs","existsSync","mkdirSync","accessLogStream","size","streamexceptionHandlers","routes","on","logger","warning","error","reason","promise","internalServer","db","connection","_freeConnections","indexOf","rollback","release","sqlMessage","isSql","_error","source","errorDescription","listen","module","exports"],"mappings":"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","file":"internal_server.js","sourcesContent":["import http from \"http\";\n\nimport compression from \"compression\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport routes from \"./routes\";\nimport passport from \"passport\";\nimport cors from \"cors\";\nconst LocalStrategy = require(\"passport-local\").Strategy;\nimport morgan from \"morgan\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport keys from \"./keys/keys\";\nimport rfs from \"rotating-file-stream\";\nimport httpStatus from \"./utils/httpStatus\";\nimport { logger, requestTracking } from \"./utils/logging\";\nimport jwtDecode from \"jwt-decode\";\nimport { decryption } from \"./utils/cryptography\";\n\nlet app = express();\nconst _port = keys.port;\n\napp.use(compression());\nif (process.env.NODE_ENV == \"production\") {\n  console.log(\"Running prod....\" + _port);\n  console.log(process.env.NODE_ENV);\n  app.use(express.static(\"client/build\"));\n}\n\n// app.server = http.createServer(app);\n\n// app.options(\n//   \"*\",\n//   cors({\n//     origin: \"*\",\n//     optionsSuccessStatus: 200\n//   })\n// );\n// app.use(\n//   cors({\n//     origin: \"*\",\n//     optionsSuccessStatus: 200\n//   })\n// );\napp.use(\n  cors({\n    origin: \"*\",\n    optionsSuccessStatus: 200\n  })\n);\napp.server = http.createServer(app);\n\n//parse application json\napp.use(\n  bodyParser.json({\n    limit: keys.bodyLimit\n  })\n);\n\n//passport config\napp.use(passport.initialize());\npassport.use(\n  new LocalStrategy(\n    {\n      usernameField: \"username\",\n      passwordField: \"password\"\n    },\n    (username, password, done) => {\n      return done(null, username);\n    }\n  )\n);\n\npassport.serializeUser((user, done) => {\n  done(null, user);\n});\npassport.deserializeUser((id, done) => {\n  done(null, { msg: \"done\" });\n});\napp.set(\"view cache\", true);\napp.use((req, res, next) => {\n  let reqH = req.headers;\n\n  let reqUser = \"\";\n  res.setHeader(\"connection\", \"keep-alive\");\n  //res.setHeader(\"Transfer-Encoding\", \"gzip\");\n  if (req.url != \"/api/v1/apiAuth\") {\n    if (req.url != \"/api/v1/apiAuth/authUser\") {\n      // res.setHeader(\"Content-Encoding\", \"gzip\");\n      //  res.setHeader(\"connection\", \"keep-alive\");\n    }\n    reqUser = jwtDecode(reqH[\"x-api-key\"]).id;\n    if (req.url != \"/api/v1/apiAuth/authUser\") {\n      let header = req.headers[\"x-app-user-identity\"];\n\n      if (header != null && header != \"\" && header != \"null\") {\n        header = decryption(header);\n\n        req.body.created_by = header.algaeh_d_app_user_id;\n        req.body.updated_by = header.algaeh_d_app_user_id;\n        req.userIdentity = header;\n      } else {\n        res.status(httpStatus.unAuthorized).json({\n          success: false,\n          message: \"unauthorized credentials can not procees..\"\n        });\n      }\n    }\n  }\n\n  requestTracking(\"\", {\n    dateTime: new Date().toLocaleString(),\n    requestIdentity: {\n      requestClient: reqH[\"x-client-ip\"],\n      requestAPIUser: reqUser,\n      reqUserIdentity: req.userIdentity\n    },\n    requestUrl: req.originalUrl,\n    requestHeader: {\n      host: reqH.host,\n      \"user-agent\": reqH[\"user-agent\"],\n      \"cache-control\": reqH[\"cache-control\"],\n      origin: reqH.origin\n    },\n\n    requestMethod: req.method\n  });\n  next();\n});\n\nlet logdir = path.join(__dirname, \"../\" + keys.logpath);\nif (!fs.existsSync(logdir)) {\n  fs.mkdirSync(logdir);\n}\n\n// var accessLogStream = fs.createWriteStream(path.join(logdir, \"access.log\"), {\n//   flags: \"a\"\n// });\n\nvar accessLogStream = rfs(\"access.log\", {\n  size: \"5M\",\n  path: logdir\n});\n\napp.use(morgan(\"combined\", { streamexceptionHandlers: accessLogStream }));\napp.set(\"trust proxy\", true);\n//api routeres v1\napp.use(\"/api/v1\", routes);\n\nprocess.on(\"warning\", warning => {\n  logger.log(\"warn\", warning);\n});\nprocess.on(\"uncaughtException\", error => {\n  logger.log(\"uncatched Exception\", error);\n});\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  logger.error(\"Unhandled rejection\", { reason: reason, promise: promise });\n});\n//Error Handling MiddleWare\napp.use((error, req, res, next) => {\n  error.status = error.status || httpStatus.internalServer;\n  if (req.db != null) {\n    let connection = req.connection;\n    if (connection != null) {\n      if (req.db._freeConnections.indexOf(connection) == -1) {\n        if (typeof connection.rollback == \"function\") {\n          connection.rollback(() => {\n            if (typeof connection.release == \"function\") connection.release();\n\n            res.status(error.status).json({\n              success: false,\n              message:\n                error.sqlMessage != null ? error.sqlMessage : error.message,\n              isSql: error.sqlMessage != null ? true : false\n            });\n          });\n        } else {\n          if (typeof connection.release == \"function\") connection.release();\n          res.status(error.status).json({\n            success: false,\n            message:\n              error.sqlMessage != null ? error.sqlMessage : error.message,\n            isSql: error.sqlMessage != null ? true : false\n          });\n        }\n      } else {\n        res.status(error.status).json({\n          success: false,\n          message: error.sqlMessage != null ? error.sqlMessage : error.message,\n          isSql: error.sqlMessage != null ? true : false\n        });\n      }\n    } else {\n      res.status(error.status).json({\n        success: false,\n        message: error.sqlMessage != null ? error.sqlMessage : error.message,\n        isSql: error.sqlMessage != null ? true : false\n      });\n    }\n  } else {\n    res.status(error.status).json({\n      success: false,\n      message: error.sqlMessage != null ? error.sqlMessage : error.message,\n      isSql: error.sqlMessage != null ? true : false\n    });\n  }\n\n  const _error = {\n    source: req.originalUrl,\n    requestClient: req.headers[\"x-client-ip\"],\n    reqUserIdentity: req.userIdentity,\n    errorDescription: error\n  };\n  logger.log(\"error\", \"%j\", _error);\n});\n\napp.server.listen(_port);\n\nconsole.log(`started on port ${_port}`);\n\nexport default app;\nmodule.exports = app;\n"]}