{"version":3,"sources":["../../../HrManagement/src/models/attendance.js"],"names":["module","exports","processAttendance","req","res","next","_mysql","algaehMysql","yearAndMonth","query","startOfMonth","startOf","format","endOfMonth","endOf","totalMonthDays","daysInMonth","month_name","month_number","year","selectWhere","date_of_joining","exit_date","date_of_joining1","_stringData","hospital_id","sub_department_id","hims_d_employee_id","_appendString","executeQueryWithTransaction","values","_","valuesIn","then","empResult","length","executeQuery","_holidayResult","holidayResult","i","emp_absent_days","emp_total_holidays","total_week_off","paid_leave","unpaid_leave","total_leaves","present_days","paid_days","absentResult","absent_days","other_religion_holidays","chain","filter","obj","weekoff","holiday","holiday_type","religion_id","value","leave_ids","map","leaveAppResult","leave_id","monthlyLeaveResult","_paid_leave","leave_type","first","present_month","_unpaid_leave","parseFloat","Date","userIdentity","algaeh_d_app_user_id","commitTransaction","releaseConnection","records","attDataResult","catch","e"],"mappings":"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","file":"attendance.js","sourcesContent":["import algaehMysql from \"algaeh-mysql\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n//import { LINQ } from \"node-linq\";\n\nmodule.exports = {\n  //created by irfan: to\n  processAttendance: (req, res, next) => {\n    const _mysql = new algaehMysql();\n    let yearAndMonth = req.query.yearAndMonth;\n    delete req.query.yearAndMonth;\n\n    const startOfMonth = moment(yearAndMonth)\n      .startOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n\n    const endOfMonth = moment(yearAndMonth)\n      .endOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n\n    const totalMonthDays = moment(yearAndMonth, \"YYYY-MM\").daysInMonth();\n    const month_name = moment(yearAndMonth).format(\"MMMM\");\n    const month_number = moment(yearAndMonth).format(\"MM\");\n    const year = moment(yearAndMonth).format(\"YYYY\");\n\n    let selectWhere = {\n      date_of_joining: endOfMonth,\n      exit_date: startOfMonth,\n      date_of_joining1: endOfMonth,\n      //   hospital_id: \"ALL\",\n      //   sub_department_id: \"ALL\",\n      //   hims_d_employee_id: \"ALL\",\n      ...req.query\n    };\n    let _stringData = selectWhere.hospital_id != null ? \" hospital_id=? \" : \"\";\n    if (_stringData != \"\" && selectWhere.sub_department_id != null)\n      _stringData += \" AND \";\n    _stringData +=\n      selectWhere.sub_department_id != null ? \" sub_department_id=?\" : \"\";\n    if (_stringData != \"\" && selectWhere.hims_d_employee_id != null)\n      _stringData += \" AND \";\n    _stringData +=\n      selectWhere.hims_d_employee_id != null ? \" hims_d_employee_id=?\" : \"\";\n    const _appendString = _stringData != \"\" ? \" AND \" + _stringData : \"\";\n    _mysql\n      .executeQueryWithTransaction({\n        query:\n          \"select hims_d_employee_id, employee_code,full_name  as employee_name,\\\n      employee_status,date_of_joining ,date_of_resignation ,religion_id,sub_department_id,hospital_id,exit_date from hims_d_employee where employee_status <>'I'\\\n      and (( date(date_of_joining) <= date(?) and date(exit_date) >= date(?)) or \\\n      (date(date_of_joining) <= date(?) and exit_date is null)) and  record_status='A' \" +\n          _appendString,\n        values: _.valuesIn(selectWhere)\n      })\n      .then(empResult => {\n        if (empResult.length > 0) {\n          _mysql\n            .executeQuery({\n              query:\n                \"select hims_d_holiday_id, hospital_id, holiday_date, holiday_description,\\\n          weekoff, holiday, holiday_type, religion_id from \\\n       hims_d_holiday where record_status='A' and  \\\n          date(holiday_date) between date(?) and date(?) \\\n          and (weekoff='Y' or holiday='Y') and hospital_id=?\",\n              values: [startOfMonth, endOfMonth, empResult[0][\"hospital_id\"]]\n            })\n            .then(holidayResult => {\n              try {\n                const _holidayResult = holidayResult;\n                for (let i = 0; i < empResult.length; i++) {\n                  empResult[i][\"defaults\"] = {\n                    emp_absent_days: 0,\n                    emp_total_holidays: 0,\n                    total_week_off: 0,\n                    paid_leave: 0,\n                    unpaid_leave: 0,\n                    total_leaves: 0,\n                    present_days: 0,\n                    paid_days: 0\n                  };\n\n                  //   let emp_absent_days = \"0\";\n                  //   let emp_total_holidays = \"0\";\n                  //   let total_week_off = \"0\";\n                  //   let paid_leave = \"0\";\n                  //   let unpaid_leave = \"0\";\n                  //   let total_leaves = \"0\";\n                  //   let present_days = \"0\";\n                  //   let paid_days = \"0\";\n                  _mysql\n                    .executeQuery({\n                      query:\n                        \"select hims_f_absent_id, employee_id, absent_date, from_session, to_session,\\\n              reason, cancel ,count(employee_id) as absent_days\\\n              from hims_f_absent where record_status='A' and cancel='N' and employee_id=?\\\n              and date(absent_date) between date(?) and date(?) group by  employee_id\",\n                      values: [\n                        empResult[i][\"hims_d_employee_id\"],\n                        startOfMonth,\n                        endOfMonth\n                      ]\n                    })\n                    .then(absentResult => {\n                      if (absentResult.length > 0) {\n                        empResult[i][\"defaults\"].emp_absent_days =\n                          absentResult[0].absent_days;\n                      }\n\n                      //HOLIDAYS CALCULATION------------------------------------------\n                      let other_religion_holidays = _.chain(_holidayResult)\n                        .filter(obj => {\n                          return (\n                            obj.weekoff == \"N\" &&\n                            obj.holiday == \"Y\" &&\n                            obj.holiday_type == \"RS\" &&\n                            obj.religion_id != empResult[i][\"religion_id\"]\n                          );\n                        })\n                        .value();\n\n                      empResult[i][\"defaults\"].emp_total_holidays =\n                        _holidayResult.length - other_religion_holidays.length;\n\n                      //WEEK OFF CALCULATION---------------------------------------------\n                      empResult[i][\"defaults\"].total_week_off = _.filter(\n                        _holidayResult,\n                        obj => {\n                          return (\n                            obj.weekoff === \"Y\" && obj.holiday_type === \"RE\"\n                          );\n                        }\n                      ).length;\n                      absentResult = empResult[i][\"defaults\"].emp_absent_days;\n                      _mysql\n                        .executeQuery({\n                          query:\n                            \"select hims_f_leave_application_id, employee_id, leave_id, leave_type FROM hims_f_leave_application where\\\n                        employee_id =? and authorized= 'Y' and cancelled = 'N' AND\\\n                        ((from_date>= ? and from_date <= ?) or\\\n                        (to_date >= ? and to_date <= ?) or\\\n                        (from_date <= ? and to_date >= ?)) group by leave_id \",\n                          values: [\n                            empResult[i][\"hims_d_employee_id\"],\n                            startOfMonth,\n                            endOfMonth,\n                            startOfMonth,\n                            endOfMonth,\n                            startOfMonth,\n                            endOfMonth\n                          ]\n                        })\n                        .then(leaveAppResult => {\n                          let leave_ids = _.map(leaveAppResult, obj => {\n                            return obj.leave_id;\n                          });\n\n                          if (leave_ids.length > 0) {\n                            _mysql\n                              .executeQuery({\n                                query:\n                                  \"select hims_f_employee_monthly_leave_id, employee_id, year, leave_id,L.leave_type,\\\n                                total_eligible, availed_till_date,\" +\n                                  month_name +\n                                  \" as present_month,close_balance, processed,\\\n                                carry_forward_done, carry_forward_leave, encashment_leave FROM hims_f_employee_monthly_leave ML,hims_d_leave L\\\n                                where  employee_id=? and ML.leave_id=L.hims_d_leave_id and leave_id in (?)\",\n                                values: [\n                                  empResult[i][\"hims_d_employee_id\"],\n                                  leave_ids\n                                ]\n                              })\n                              .then(monthlyLeaveResult => {\n                                if (monthlyLeaveResult.length > 0) {\n                                  const _paid_leave = _.chain(\n                                    monthlyLeaveResult\n                                  )\n                                    .filter(obj => {\n                                      return obj.leave_type == \"P\";\n                                    })\n                                    .first()\n                                    .value();\n                                  empResult[i][\"defaults\"].paid_leave =\n                                    _paid_leave == null\n                                      ? 0\n                                      : _paid_leave.present_month;\n                                  //-------------------------------------------------------------------\n                                  let _unpaid_leave = _.chain(\n                                    monthlyLeaveResult\n                                  )\n                                    .filter(obj => {\n                                      return obj.leave_type == \"U\";\n                                    })\n                                    .first()\n                                    .value();\n\n                                  //---------------\n\n                                  empResult[i][\"defaults\"].unpaid_leave =\n                                    _unpaid_leave == null\n                                      ? 0\n                                      : _unpaid_leave.present_month;\n                                  empResult[i][\"defaults\"].total_leaves =\n                                    empResult[i][\"defaults\"].paid_leave +\n                                    empResult[i][\"defaults\"].unpaid_leave;\n                                }\n                                empResult[i][\"defaults\"].present_days =\n                                  totalMonthDays -\n                                  empResult[i][\"defaults\"].emp_absent_days -\n                                  empResult[i][\"defaults\"].total_leaves -\n                                  empResult[i][\"defaults\"].total_week_off -\n                                  empResult[i][\"defaults\"].emp_total_holidays;\n\n                                empResult[i][\"defaults\"].paid_days =\n                                  parseFloat(\n                                    empResult[i][\"defaults\"].present_days\n                                  ) +\n                                  parseFloat(\n                                    empResult[i][\"defaults\"].paid_leave\n                                  ) +\n                                  parseFloat(\n                                    empResult[i][\"defaults\"].emp_total_holidays\n                                  ) +\n                                  parseFloat(\n                                    empResult[i][\"defaults\"].total_week_off\n                                  );\n                                // _mysql.mysqlQueryFormat(\"UPDATE ?\",{total_days:totalMonthDays,\n                                //   present_days: empResult[i][\"defaults\"].present_days,\n                                //   absent_days:,\n                                //   created_date:,\n                                //   created_by:,\n\n                                // })\n                                _mysql\n                                  .executeQuery({\n                                    query:\n                                      \"INSERT INTO `hims_f_attendance_monthly` (employee_id,year,month,hospital_id,sub_department_id,total_days,present_days,absent_days,\\\n                                    total_work_days,total_weekoff_days,total_holidays,total_leave,paid_leave,unpaid_leave,total_paid_days,created_date,created_by,updated_date,updated_by)\\\n                                    VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE total_days=?,present_days=?,absent_days=?,\\\n                                    total_work_days=?,total_weekoff_days=?,total_holidays=?,total_leave=?,paid_leave=?,unpaid_leave=?,total_paid_days=?,updated_date=?,updated_by=? \",\n                                    values: [\n                                      empResult[i][\"hims_d_employee_id\"],\n                                      year,\n                                      month_number,\n                                      empResult[i][\"hospital_id\"],\n                                      empResult[i][\"sub_department_id\"],\n                                      totalMonthDays,\n                                      empResult[i][\"defaults\"].present_days,\n                                      empResult[i][\"defaults\"].emp_absent_days,\n                                      empResult[i][\"defaults\"].present_days,\n                                      empResult[i][\"defaults\"].total_week_off,\n                                      empResult[i][\"defaults\"]\n                                        .emp_total_holidays,\n                                      empResult[i][\"defaults\"].total_leaves,\n                                      empResult[i][\"defaults\"].paid_leave,\n                                      empResult[i][\"defaults\"].unpaid_leave,\n                                      empResult[i][\"defaults\"].paid_days,\n\n                                      new Date(),\n                                      req.userIdentity.algaeh_d_app_user_id,\n                                      new Date(),\n\n                                      req.userIdentity.algaeh_d_app_user_id,\n                                      totalMonthDays,\n                                      empResult[i][\"defaults\"].present_days,\n                                      empResult[i][\"defaults\"].emp_absent_days,\n                                      empResult[i][\"defaults\"].present_days,\n                                      empResult[i][\"defaults\"].total_week_off,\n                                      empResult[i][\"defaults\"]\n                                        .emp_total_holidays,\n                                      empResult[i][\"defaults\"].total_leaves,\n                                      empResult[i][\"defaults\"].paid_leave,\n                                      empResult[i][\"defaults\"].unpaid_leave,\n                                      empResult[i][\"defaults\"].paid_days,\n                                      new Date(),\n                                      req.userIdentity.algaeh_d_app_user_id\n                                    ]\n                                  })\n                                  .then(finalFesult => {\n                                    if (i == empResult.length - 1) {\n                                      _mysql\n                                        .executeQuery({\n                                          query:\n                                            \"select hims_f_attendance_monthly_id,employee_id,E.employee_code,E.full_name as employee_name,\\\n                                            year,month,AM.hospital_id,AM.sub_department_id,\\\n                                            total_days,present_days,absent_days,total_work_days,total_weekoff_days,total_holidays,\\\n                                            total_leave,paid_leave,unpaid_leave,total_paid_days  from hims_f_attendance_monthly AM \\\n                                            inner join hims_d_employee E on AM.employee_id=E.hims_d_employee_id \\\n                                            where AM.record_status='A' and AM.`year`= ? and AM.`month`=?\",\n                                          values: [year, month_number]\n                                        })\n                                        .then(attDataResult => {\n                                          _mysql.commitTransaction(() => {\n                                            _mysql.releaseConnection();\n                                            req.records = attDataResult;\n                                            next();\n                                          });\n                                        })\n                                        .catch(e => {\n                                          next(e);\n                                        });\n                                    }\n                                  })\n                                  .catch(e => {\n                                    next(e);\n                                  });\n                              })\n                              .catch(e => {\n                                next(e);\n                              });\n                          } else {\n                            empResult[i][\"defaults\"].unpaid_leave = 0;\n                            empResult[i][\"defaults\"].total_leaves =\n                              empResult[i][\"defaults\"].paid_leave +\n                              empResult[i][\"defaults\"].unpaid_leave;\n\n                            empResult[i][\"defaults\"].present_days =\n                              totalMonthDays -\n                              empResult[i][\"defaults\"].emp_absent_days -\n                              empResult[i][\"defaults\"].total_leaves -\n                              empResult[i][\"defaults\"].total_week_off -\n                              empResult[i][\"defaults\"].emp_total_holidays;\n\n                            empResult[i][\"defaults\"].paid_days =\n                              parseFloat(\n                                empResult[i][\"defaults\"].present_days\n                              ) +\n                              parseFloat(empResult[i][\"defaults\"].paid_leave) +\n                              parseFloat(\n                                empResult[i][\"defaults\"].emp_total_holidays\n                              ) +\n                              parseFloat(\n                                empResult[i][\"defaults\"].total_week_off\n                              );\n\n                            _mysql\n                              .executeQuery({\n                                query:\n                                  \"INSERT INTO `hims_f_attendance_monthly` (employee_id,year,month,hospital_id,sub_department_id,total_days,present_days,absent_days,\\\n                              total_work_days,total_weekoff_days,total_holidays,total_leave,paid_leave,unpaid_leave,total_paid_days,created_date,created_by,updated_date,updated_by)\\\n                              VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE total_days=?,present_days=?,absent_days=?,\\\n                              total_work_days=?,total_weekoff_days=?,total_holidays=?,total_leave=?,paid_leave=?,unpaid_leave=?,total_paid_days=?,updated_date=?,updated_by=? \",\n                                values: [\n                                  empResult[i][\"hims_d_employee_id\"],\n                                  year,\n                                  month_number,\n                                  empResult[i][\"hospital_id\"],\n                                  empResult[i][\"sub_department_id\"],\n                                  totalMonthDays,\n                                  empResult[i][\"defaults\"].present_days,\n                                  empResult[i][\"defaults\"].emp_absent_days,\n                                  empResult[i][\"defaults\"].present_days,\n                                  empResult[i][\"defaults\"].total_week_off,\n                                  empResult[i][\"defaults\"].emp_total_holidays,\n                                  empResult[i][\"defaults\"].total_leaves,\n                                  empResult[i][\"defaults\"].paid_leave,\n                                  empResult[i][\"defaults\"].unpaid_leave,\n                                  empResult[i][\"defaults\"].paid_days,\n\n                                  new Date(),\n                                  req.userIdentity.algaeh_d_app_user_id,\n                                  new Date(),\n\n                                  req.userIdentity.algaeh_d_app_user_id,\n                                  totalMonthDays,\n                                  empResult[i][\"defaults\"].present_days,\n                                  empResult[i][\"defaults\"].emp_absent_days,\n                                  empResult[i][\"defaults\"].present_days,\n                                  empResult[i][\"defaults\"].total_week_off,\n                                  empResult[i][\"defaults\"].emp_total_holidays,\n                                  empResult[i][\"defaults\"].total_leaves,\n                                  empResult[i][\"defaults\"].paid_leave,\n                                  empResult[i][\"defaults\"].unpaid_leave,\n                                  empResult[i][\"defaults\"].paid_days,\n                                  new Date(),\n                                  req.userIdentity.algaeh_d_app_user_id\n                                ]\n                              })\n                              .then(finalFesult => {\n                                if (i == empResult.length - 1) {\n                                  _mysql\n                                    .executeQuery({\n                                      query:\n                                        \"select hims_f_attendance_monthly_id,employee_id,E.employee_code,E.full_name as employee_name,\\\n                                      year,month,AM.hospital_id,AM.sub_department_id,\\\n                                      total_days,present_days,absent_days,total_work_days,total_weekoff_days,total_holidays,\\\n                                      total_leave,paid_leave,unpaid_leave,total_paid_days  from hims_f_attendance_monthly AM \\\n                                      inner join hims_d_employee E on AM.employee_id=E.hims_d_employee_id \\\n                                      where AM.record_status='A' and AM.`year`= ? and AM.`month`=?\",\n                                      values: [year, month_number]\n                                    })\n                                    .then(attDataResult => {\n                                      _mysql.commitTransaction(() => {\n                                        _mysql.releaseConnection();\n                                        req.records = attDataResult;\n                                        next();\n                                      });\n                                    })\n                                    .catch(e => {\n                                      next(e);\n                                    });\n                                }\n                              })\n                              .catch(e => {\n                                next(e);\n                              });\n                          }\n                        })\n                        .catch(e => {\n                          next(e);\n                        });\n                    })\n                    .catch(e => {\n                      next(e);\n                    });\n                }\n              } catch (e) {\n                next(e);\n              }\n            })\n            .catch(e => {\n              next(e);\n            });\n        } else {\n          _mysql.commitTransaction(() => {\n            _mysql.releaseConnection();\n            req.records = empResult;\n            next();\n          });\n        }\n      })\n      .catch(e => {\n        next(e);\n      });\n  }\n};\n"]}