{"version":3,"sources":["../src/server.js"],"names":["LocalStrategy","require","Strategy","app","process","env","NODE_ENV","console","log","use","static","server","createServer","json","limit","bodyLimit","initialize","usernameField","passwordField","username","password","done","serializeUser","user","deserializeUser","id","msg","req","res","next","reqH","headers","reqUser","url","header","body","created_by","algaeh_d_app_user_id","updated_by","userIdentity","status","unAuthorized","success","message","dateTime","Date","toLocaleString","requestIdentity","requestClient","requestAPIUser","reqUserIdentity","requestUrl","originalUrl","requestHeader","host","origin","requestMethod","method","logdir","join","__dirname","logpath","existsSync","mkdirSync","accessLogStream","size","path","streamexceptionHandlers","set","on","warning","error","internalServer","sqlMessage","_error","source","errorDescription","listen","port","address","module","exports"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AATA,IAAMA,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;;AAWA,IAAIC,MAAM,wBAAV;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,UAAQC,GAAR,CAAY,kBAAZ;AACAD,UAAQC,GAAR,CAAYJ,QAAQC,GAAR,CAAYC,QAAxB;AACAH,MAAIM,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,cAAf,CAAR;AACD;;AAEDP,IAAIQ,MAAJ,GAAa,eAAKC,YAAL,CAAkBT,GAAlB,CAAb;;AAEAA,IAAIM,GAAJ,CAAQ,qBAAR;AACA;AACAN,IAAIM,GAAJ,CACE,qBAAWI,IAAX,CAAgB;AACdC,SAAO,eAAOC;AADA,CAAhB,CADF;;AAMA;AACAZ,IAAIM,GAAJ,CAAQ,mBAASO,UAAT,EAAR;AACA,mBAASP,GAAT,CACE,IAAIT,aAAJ,CACE;AACEiB,iBAAe,UADjB;AAEEC,iBAAe;AAFjB,CADF,EAKE,UAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA8B;AAC5B,SAAOA,KAAK,IAAL,EAAWF,QAAX,CAAP;AACD,CAPH,CADF;;AAYA,mBAASG,aAAT,CAAuB,UAACC,IAAD,EAAOF,IAAP,EAAgB;AACrCA,OAAK,IAAL,EAAWE,IAAX;AACD,CAFD;AAGA,mBAASC,eAAT,CAAyB,UAACC,EAAD,EAAKJ,IAAL,EAAc;AACrCA,OAAK,IAAL,EAAW,EAAEK,KAAK,MAAP,EAAX;AACD,CAFD;;AAIAvB,IAAIM,GAAJ,CAAQ,UAACkB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIC,OAAOH,IAAII,OAAf;;AAEA,MAAIC,UAAU,EAAd;AACA,MAAIL,IAAIM,GAAJ,IAAW,iBAAf,EAAkC;AAChCD,cAAU,yBAAUF,KAAK,WAAL,CAAV,EAA6BL,EAAvC;AACA,QAAIE,IAAIM,GAAJ,IAAW,0BAAf,EAA2C;AACzC,UAAIC,SAASP,IAAII,OAAJ,CAAY,qBAAZ,CAAb;;AAEA,UAAIG,UAAU,IAAV,IAAkBA,UAAU,EAA5B,IAAkCA,UAAU,MAAhD,EAAwD;AACtDA,iBAAS,8BAAWA,MAAX,CAAT;;AAEAP,YAAIQ,IAAJ,CAASC,UAAT,GAAsBF,OAAOG,oBAA7B;AACAV,YAAIQ,IAAJ,CAASG,UAAT,GAAsBJ,OAAOG,oBAA7B;AACAV,YAAIY,YAAJ,GAAmBL,MAAnB;AACD,OAND,MAMO;AACLN,YAAIY,MAAJ,CAAW,qBAAWC,YAAtB,EAAoC5B,IAApC,CAAyC;AACvC6B,mBAAS,KAD8B;AAEvCC,mBAAS;AAF8B,SAAzC;AAID;AACF;AACF;;AAED,gCAAgB,EAAhB,EAAoB;AAClBC,cAAU,IAAIC,IAAJ,GAAWC,cAAX,EADQ;AAElBC,qBAAiB;AACfC,qBAAelB,KAAK,aAAL,CADA;AAEfmB,sBAAgBjB,OAFD;AAGfkB,uBAAiBvB,IAAIY;AAHN,KAFC;AAOlBY,gBAAYxB,IAAIyB,WAPE;AAQlBC,mBAAe;AACbC,YAAMxB,KAAKwB,IADE;AAEb,oBAAcxB,KAAK,YAAL,CAFD;AAGb,uBAAiBA,KAAK,eAAL,CAHJ;AAIbyB,cAAQzB,KAAKyB;AAJA,KARG;;AAelBC,mBAAe7B,IAAI8B;AAfD,GAApB;;AAkBA5B;AACD,CA3CD;;AA6CA,IAAI6B,SAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAAQ,eAAKC,OAAlC,CAAb;AACA,IAAI,CAAC,aAAGC,UAAH,CAAcJ,MAAd,CAAL,EAA4B;AAC1B,eAAGK,SAAH,CAAaL,MAAb;AACD;;AAED;AACA;AACA;;AAEA,IAAIM,kBAAkB,kCAAI,YAAJ,EAAkB;AACtCC,QAAM,IADgC;AAEtCC,QAAMR;AAFgC,CAAlB,CAAtB;;AAKAvD,IAAIM,GAAJ,CAAQ,sBAAO,UAAP,EAAmB,EAAE0D,yBAAyBH,eAA3B,EAAnB,CAAR;AACA7D,IAAIiE,GAAJ,CAAQ,aAAR,EAAuB,IAAvB;;AAEA;AACAjE,IAAIM,GAAJ,CAAQ,SAAR;;AAEAL,QAAQiE,EAAR,CAAW,SAAX,EAAsB,mBAAW;AAC/B,kBAAO7D,GAAP,CAAW,MAAX,EAAmB8D,OAAnB;AACD,CAFD;AAGAlE,QAAQiE,EAAR,CAAW,mBAAX,EAAgC,iBAAS;AACvC,kBAAO7D,GAAP,CAAW,OAAX,EAAoB+D,KAApB;AACD,CAFD;AAGA;AACApE,IAAIM,GAAJ,CAAQ,UAAC8D,KAAD,EAAQ5C,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjC0C,QAAM/B,MAAN,GAAe+B,MAAM/B,MAAN,IAAgB,qBAAWgC,cAA1C;AACA5C,MAAIY,MAAJ,CAAW+B,MAAM/B,MAAjB,EAAyB3B,IAAzB,CAA8B;AAC5B6B,aAAS,KADmB;AAE5BC,aAAS4B,MAAME,UAAN,IAAoB,IAApB,GAA2BF,MAAME,UAAjC,GAA8CF,MAAM5B;AAFjC,GAA9B;AAIA,MAAM+B,SAAS;AACbC,YAAQhD,IAAIyB,WADC;AAEbJ,mBAAerB,IAAII,OAAJ,CAAY,aAAZ,CAFF;AAGbmB,qBAAiBvB,IAAIY,YAHR;AAIbqC,sBAAkBL;AAJL,GAAf;AAMA,kBAAO/D,GAAP,CAAW,OAAX,EAAoB,IAApB,EAA0BkE,MAA1B;AACD,CAbD;;AAeAvE,IAAIQ,MAAJ,CAAWkE,MAAX,CAAkB,eAAOC,IAAzB;AACAvE,QAAQC,GAAR,sBAA+BL,IAAIQ,MAAJ,CAAWoE,OAAX,GAAqBD,IAApD;;kBAEe3E,G;;AACf6E,OAAOC,OAAP,GAAiB9E,GAAjB","file":"server.js","sourcesContent":["import http from \"http\";\r\nimport express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport config from \"./keys/keys\";\r\nimport routes from \"./routes\";\r\nimport passport from \"passport\";\r\nimport cors from \"cors\";\r\nconst LocalStrategy = require(\"passport-local\").Strategy;\r\nimport morgan from \"morgan\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport keys from \"./keys/keys\";\r\nimport rfs from \"rotating-file-stream\";\r\nimport httpStatus from \"./utils/httpStatus\";\r\nimport { logger, requestTracking } from \"./utils/logging\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { decryption } from \"./utils/cryptography\";\r\n\r\nlet app = express();\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running prod....\");\r\n  console.log(process.env.NODE_ENV);\r\n  app.use(express.static(\"client/build\"));\r\n}\r\n\r\napp.server = http.createServer(app);\r\n\r\napp.use(cors());\r\n//parse application json\r\napp.use(\r\n  bodyParser.json({\r\n    limit: config.bodyLimit\r\n  })\r\n);\r\n\r\n//passport config\r\napp.use(passport.initialize());\r\npassport.use(\r\n  new LocalStrategy(\r\n    {\r\n      usernameField: \"username\",\r\n      passwordField: \"password\"\r\n    },\r\n    (username, password, done) => {\r\n      return done(null, username);\r\n    }\r\n  )\r\n);\r\n\r\npassport.serializeUser((user, done) => {\r\n  done(null, user);\r\n});\r\npassport.deserializeUser((id, done) => {\r\n  done(null, { msg: \"done\" });\r\n});\r\n\r\napp.use((req, res, next) => {\r\n  let reqH = req.headers;\r\n\r\n  let reqUser = \"\";\r\n  if (req.url != \"/api/v1/apiAuth\") {\r\n    reqUser = jwtDecode(reqH[\"x-api-key\"]).id;\r\n    if (req.url != \"/api/v1/apiAuth/authUser\") {\r\n      let header = req.headers[\"x-app-user-identity\"];\r\n\r\n      if (header != null && header != \"\" && header != \"null\") {\r\n        header = decryption(header);\r\n\r\n        req.body.created_by = header.algaeh_d_app_user_id;\r\n        req.body.updated_by = header.algaeh_d_app_user_id;\r\n        req.userIdentity = header;\r\n      } else {\r\n        res.status(httpStatus.unAuthorized).json({\r\n          success: false,\r\n          message: \"unauthorized credentials can not procees..\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  requestTracking(\"\", {\r\n    dateTime: new Date().toLocaleString(),\r\n    requestIdentity: {\r\n      requestClient: reqH[\"x-client-ip\"],\r\n      requestAPIUser: reqUser,\r\n      reqUserIdentity: req.userIdentity\r\n    },\r\n    requestUrl: req.originalUrl,\r\n    requestHeader: {\r\n      host: reqH.host,\r\n      \"user-agent\": reqH[\"user-agent\"],\r\n      \"cache-control\": reqH[\"cache-control\"],\r\n      origin: reqH.origin\r\n    },\r\n\r\n    requestMethod: req.method\r\n  });\r\n\r\n  next();\r\n});\r\n\r\nlet logdir = path.join(__dirname, \"../\" + keys.logpath);\r\nif (!fs.existsSync(logdir)) {\r\n  fs.mkdirSync(logdir);\r\n}\r\n\r\n// var accessLogStream = fs.createWriteStream(path.join(logdir, \"access.log\"), {\r\n//   flags: \"a\"\r\n// });\r\n\r\nvar accessLogStream = rfs(\"access.log\", {\r\n  size: \"5M\",\r\n  path: logdir\r\n});\r\n\r\napp.use(morgan(\"combined\", { streamexceptionHandlers: accessLogStream }));\r\napp.set(\"trust proxy\", true);\r\n\r\n//api routeres v1\r\napp.use(\"/api/v1\", routes);\r\n\r\nprocess.on(\"warning\", warning => {\r\n  logger.log(\"warn\", warning);\r\n});\r\nprocess.on(\"uncaughtException\", error => {\r\n  logger.log(\"error\", error);\r\n});\r\n//Error Handling MiddleWare\r\napp.use((error, req, res, next) => {\r\n  error.status = error.status || httpStatus.internalServer;\r\n  res.status(error.status).json({\r\n    success: false,\r\n    message: error.sqlMessage != null ? error.sqlMessage : error.message\r\n  });\r\n  const _error = {\r\n    source: req.originalUrl,\r\n    requestClient: req.headers[\"x-client-ip\"],\r\n    reqUserIdentity: req.userIdentity,\r\n    errorDescription: error\r\n  };\r\n  logger.log(\"error\", \"%j\", _error);\r\n});\r\n\r\napp.server.listen(config.port);\r\nconsole.log(`started on port ${app.server.address().port}`);\r\n\r\nexport default app;\r\nmodule.exports = app;\r\n"]}