{"version":3,"sources":["../../src/model/patientRegistration.js"],"names":["addPatientToRegisteration","req","res","next","db","dataBaseNotInitilizedError","getConnection","error","connection","errror","insertData","result","release","records","e","updatePatientRegistrstion","updateData","insertPatientData","body","inputparam","hims_d_patient_id","patient_code","registration_date","title_id","first_name","middle_name","last_name","gender","religion_id","date_of_birth","age","marital_status","address1","address2","contact_number","secondary_contact_number","email","emergency_contact_name","emergency_contact_number","relationship_with_patient","visa_type_id","nationality_id","postal_code","primary_identity_id","primary_id_no","secondary_identity_id","secondary_id_no","photo_file","primary_id_file","secondary_id_file","vat_applicable","created_by","userIdentity","algaeh_d_app_user_id","updated_by","city_id","state_id","country_id","documents","Date","options","query","full_name","arabic_name","patient_type","rollback","onFailure","patient_id","insertId","onSuccess","dataBase","callBack","isCommited","patientModel","optionString","callback","patientSelect","selectData","patientWhereCondition","where","condition","values","module","exports"],"mappings":"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","file":"patientRegistration.js","sourcesContent":["import extend from \"extend\";\r\nimport {\r\n  whereCondition,\r\n  releaseDBConnection,\r\n  checkIsNull,\r\n  uploadFile\r\n} from \"../utils\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nimport { logger, debugLog, debugFunction } from \"../utils/logging\";\r\n\r\nlet addPatientToRegisteration = (req, res, next) => {\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (errror) {\r\n        next(error);\r\n      }\r\n      insertData(connection, req, res, (error, result) => {\r\n        connection.release();\r\n        if (error) {\r\n          next(error);\r\n        }\r\n        req.records = result;\r\n        next();\r\n      });\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\nlet updatePatientRegistrstion = (req, res, next) => {\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      updateData(connection, req, (error, result) => {\r\n        connection.release();\r\n        if (error) {\r\n          next(error);\r\n        }\r\n        req.records = result;\r\n        next();\r\n      });\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n//Added by noor New Method\r\n\r\nlet insertPatientData = (req, res, next) => {\r\n  try {\r\n    debugFunction(\"Insert Patient Registration\");\r\n    debugLog(\"Insert Patient Registration\", req.body);\r\n\r\n    let inputparam = extend(\r\n      {\r\n        hims_d_patient_id: null,\r\n        patient_code: null,\r\n        registration_date: null,\r\n        title_id: null,\r\n        first_name: null,\r\n        middle_name: null,\r\n        last_name: null,\r\n        gender: null,\r\n        religion_id: null,\r\n        date_of_birth: null,\r\n        age: null,\r\n        marital_status: null,\r\n        address1: null,\r\n        address2: null,\r\n        contact_number: null,\r\n        secondary_contact_number: null,\r\n        email: null,\r\n        emergency_contact_name: \"\",\r\n        emergency_contact_number: \"\",\r\n        relationship_with_patient: \"\",\r\n        visa_type_id: null,\r\n        nationality_id: null,\r\n        postal_code: null,\r\n        primary_identity_id: null,\r\n        primary_id_no: null,\r\n        secondary_identity_id: \"\",\r\n        secondary_id_no: \"\",\r\n        photo_file: \"\",\r\n        primary_id_file: \"\",\r\n        secondary_id_file: \"\",\r\n        vat_applicable: \"N\",\r\n        created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n        updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n        city_id: null,\r\n        state_id: null,\r\n        country_id: null,\r\n        documents: null\r\n      },\r\n      req.body\r\n    );\r\n    inputparam.registration_date = new Date();\r\n\r\n    let options = req.options;\r\n\r\n    let db = options == null ? req.db : options.db;\r\n\r\n    db.query(\r\n      \"INSERT INTO `hims_f_patient` (`patient_code`, `registration_date`\\\r\n    , `title_id`, `first_name`, `middle_name`, `last_name`, `full_name`, `arabic_name`, `gender`, `religion_id`\\\r\n    , `date_of_birth`, `age`, `marital_status`, `address1`, `address2`, `contact_number`\\\r\n    , `secondary_contact_number`, `email`, `emergency_contact_name`, `emergency_contact_number`\\\r\n    , `relationship_with_patient`, `visa_type_id`, `nationality_id`, `postal_code`\\\r\n    , `primary_identity_id`, `primary_id_no`, `secondary_identity_id`, `secondary_id_no`\\\r\n    , `photo_file`, `primary_id_file`, `secondary_id_file`, `patient_type`,`vat_applicable`, `created_by`, `created_date`\\\r\n    ,`city_id`,`state_id`,`country_id`)\\\r\n     VALUES (?,?,?,?, ?, ?, ?, ?, ?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?);\",\r\n      [\r\n        inputparam.patient_code,\r\n        inputparam.registration_date,\r\n        inputparam.title_id,\r\n        inputparam.first_name,\r\n        inputparam.middle_name,\r\n        inputparam.last_name,\r\n        inputparam.full_name,\r\n        inputparam.arabic_name,\r\n        inputparam.gender,\r\n        inputparam.religion_id,\r\n        inputparam.date_of_birth,\r\n        inputparam.age,\r\n        inputparam.marital_status,\r\n        inputparam.address1,\r\n        inputparam.address2,\r\n        inputparam.contact_number,\r\n        inputparam.secondary_contact_number,\r\n        inputparam.email,\r\n        inputparam.emergency_contact_name,\r\n        inputparam.emergency_contact_number,\r\n        inputparam.relationship_with_patient,\r\n        inputparam.visa_type_id,\r\n        inputparam.nationality_id,\r\n        inputparam.postal_code,\r\n        inputparam.primary_identity_id,\r\n        inputparam.primary_id_no,\r\n        inputparam.secondary_identity_id,\r\n        inputparam.secondary_id_no,\r\n        inputparam.photo_file,\r\n        inputparam.primary_id_file,\r\n        inputparam.secondary_id_file,\r\n        inputparam.patient_type,\r\n        inputparam.vat_applicable,\r\n        inputparam.created_by,\r\n        new Date(),\r\n        inputparam.city_id,\r\n        inputparam.state_id,\r\n        inputparam.country_id\r\n      ],\r\n      (error, result) => {\r\n        if (error) {\r\n          if (options == null) {\r\n            db.rollback(() => {\r\n              next(error);\r\n            });\r\n          } else {\r\n            options.onFailure(error);\r\n          }\r\n        } else {\r\n          inputparam.patient_id = result.insertId;\r\n          req.patient_id = result.insertId;\r\n          req.body.patient_id = req.patient_id;\r\n          if (options != null) options.onSuccess(result);\r\n          else {\r\n            req.records = result;\r\n            connection.release();\r\n            next();\r\n          }\r\n\r\n          //     let optionString =\r\n          //       \"SELECT `algaeh_d_app_config_id`, `param_name`, `param_value` FROM `algaeh_d_app_config` WHERE `record_status` ='A' AND \\\r\n          //      param_category='DOCUMENTS' AND param_name='PATIENT_DOC_PATH';\";\r\n          //     db.query(\r\n          //       \"SELECT `hims_d_patient_id`, `patient_code`, `registration_date`\\\r\n          // , `title_id`, `first_name`, `middle_name`, `last_name`, `full_name`, `arabic_name`, `gender`, `religion_id`\\\r\n          // , `date_of_birth`, `age`, `marital_status`, `address1`, `address2`, `contact_number`\\\r\n          // , `secondary_contact_number`, `email`, `emergency_contact_name`, `emergency_contact_number`\\\r\n          // , `relationship_with_patient`, `visa_type_id`, `nationality_id`, `postal_code`\\\r\n          // , `primary_identity_id`, `primary_id_no`, `secondary_identity_id`, `secondary_id_no`\\\r\n          // , `photo_file`, `primary_id_file`, `secondary_id_file` FROM `hims_f_patient`\\\r\n          //  WHERE `record_status`='A' AND hims_d_patient_id=? ;\" +\r\n          //         optionString,\r\n          //       [inputparam.patient_id],\r\n          //       (error, records) => {\r\n          //         if (error) {\r\n          //           if (options != null) options.omFailure(error);\r\n          //           else {\r\n          //             db.rollback(() => {\r\n          //               next(error);\r\n          //             });\r\n          //           }\r\n          //         }\r\n          //         req[\"folderPath\"] =\r\n          //           records[1][0][\"param_value\"] +\r\n          //           \"/\" +\r\n          //           records[0][0][\"patient_code\"];\r\n          //         req[\"fileName\"] = records[0][0][\"patient_code\"];\r\n          //         if (options != null) {\r\n          //           options.onSuccess(records);\r\n          //         } else {\r\n          //           req.records = records;\r\n          //           next();\r\n          //         }\r\n          //       }\r\n          //     );\r\n        }\r\n      }\r\n    );\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\n//End New Method\r\n\r\nlet insertData = (dataBase, req, res, callBack, isCommited, next) => {\r\n  let patientModel = {\r\n    hims_d_patient_id: null,\r\n    patient_code: null,\r\n    registration_date: null,\r\n    title_id: null,\r\n    first_name: null,\r\n    middle_name: null,\r\n    last_name: null,\r\n    gender: null,\r\n    religion_id: null,\r\n    date_of_birth: null,\r\n    age: null,\r\n    marital_status: null,\r\n    address1: null,\r\n    address2: null,\r\n    contact_number: null,\r\n    secondary_contact_number: null,\r\n    email: null,\r\n    emergency_contact_name: \"\",\r\n    emergency_contact_number: \"\",\r\n    relationship_with_patient: \"\",\r\n    visa_type_id: null,\r\n    nationality_id: null,\r\n    postal_code: null,\r\n    primary_identity_id: null,\r\n    primary_id_no: null,\r\n    secondary_identity_id: \"\",\r\n    secondary_id_no: \"\",\r\n    photo_file: \"\",\r\n    primary_id_file: \"\",\r\n    secondary_id_file: \"\",\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    city_id: null,\r\n    state_id: null,\r\n    country_id: null,\r\n    documents: null /*{\r\n                        patientImage:{base64String:\"\",fileExtention:\"\"},\r\n                        patientPrimaryID:{base64String:\"\",fileExtention:\"\"},\r\n                        patientSecondaryID:{base64String:\"\",fileExtention:\"\"}\r\n                      }\r\n    */\r\n  };\r\n  isCommited = isCommited || false;\r\n  try {\r\n    debugFunction(\"Insert Patient Registration\");\r\n    let inputparam = extend(patientModel, req.body);\r\n    inputparam.registration_date = new Date();\r\n    dataBase.query(\r\n      \"INSERT INTO `hims_f_patient` (`patient_code`, `registration_date`\\\r\n    , `title_id`, `first_name`, `middle_name`, `last_name`, `full_name`, `arabic_name`, `gender`, `religion_id`\\\r\n    , `date_of_birth`, `age`, `marital_status`, `address1`, `address2`, `contact_number`\\\r\n    , `secondary_contact_number`, `email`, `emergency_contact_name`, `emergency_contact_number`\\\r\n    , `relationship_with_patient`, `vat_applicable`,`visa_type_id`, `nationality_id`, `postal_code`\\\r\n    , `primary_identity_id`, `primary_id_no`, `secondary_identity_id`, `secondary_id_no`\\\r\n    , `photo_file`, `primary_id_file`, `secondary_id_file`, `created_by`, `created_date`\\\r\n    ,`city_id`,`state_id`,`country_id`)\\\r\n     VALUES (?,?,?,?, ?, ?, ?, ?, ?,?,?, ,? ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?);\",\r\n      [\r\n        inputparam.patient_code,\r\n        inputparam.registration_date,\r\n        inputparam.title_id,\r\n        inputparam.first_name,\r\n        inputparam.middle_name,\r\n        inputparam.last_name,\r\n        inputparam.full_name,\r\n        inputparam.arabic_name,\r\n        inputparam.gender,\r\n        inputparam.religion_id,\r\n        inputparam.date_of_birth,\r\n        inputparam.age,\r\n        inputparam.marital_status,\r\n        inputparam.address1,\r\n        inputparam.address2,\r\n        inputparam.contact_number,\r\n        inputparam.secondary_contact_number,\r\n        inputparam.email,\r\n        inputparam.emergency_contact_name,\r\n        inputparam.emergency_contact_number,\r\n        inputparam.relationship_with_patient,\r\n        inputparam.vat_applicable,\r\n        // checkIsNull(inputparam.contact_number, 0),\r\n        // checkIsNull(inputparam.secondary_contact_number, 0),\r\n        // checkIsNull(inputparam.email, \"\"),\r\n        // checkIsNull(inputparam.emergency_contact_name, \"\"),\r\n        // checkIsNull(inputparam.emergency_contact_number, 0),\r\n        // checkIsNull(inputparam.relationship_with_patient, \"\"),\r\n        inputparam.visa_type_id,\r\n        inputparam.nationality_id,\r\n        inputparam.postal_code,\r\n        inputparam.primary_identity_id,\r\n        inputparam.primary_id_no,\r\n        inputparam.secondary_identity_id,\r\n        inputparam.secondary_id_no,\r\n        inputparam.photo_file,\r\n        inputparam.primary_id_file,\r\n        inputparam.secondary_id_file,\r\n        // checkIsNull(inputparam.secondary_identity_id, 1),\r\n        // checkIsNull(inputparam.secondary_id_no, \"\"),\r\n        // checkIsNull(inputparam.photo_file, \"\"),\r\n        // checkIsNull(inputparam.primary_id_file, \"\"),\r\n        // checkIsNull(inputparam.secondary_id_file, \"\"),\r\n        inputparam.created_by,\r\n        new Date(),\r\n        inputparam.city_id,\r\n        inputparam.state_id,\r\n        inputparam.country_id\r\n      ],\r\n      (error, result) => {\r\n        debugLog(\"Insert Query executed\");\r\n        if (error) {\r\n          if (isCommited) {\r\n            dataBase.rollback(() => {\r\n              connection.release();\r\n              next(error);\r\n            });\r\n          } else {\r\n            connection.release();\r\n            next(error);\r\n          }\r\n        }\r\n        if (result) {\r\n          let insertId = result.insertId;\r\n          debugLog(\"insertId : \" + insertId);\r\n          inputparam.patient_id = insertId;\r\n          let optionString =\r\n            \"SELECT `algaeh_d_app_config_id`, `param_name`, `param_value` FROM `algaeh_d_app_config` WHERE `record_status` ='A' AND \\\r\n             param_category='DOCUMENTS' AND param_name='PATIENT_DOC_PATH';\";\r\n          dataBase.query(\r\n            \"SELECT `hims_d_patient_id`, `patient_code`, `registration_date`\\\r\n      , `title_id`, `first_name`, `middle_name`, `last_name`, `full_name`, `arabic_name`, `gender`, `religion_id`\\\r\n      , `date_of_birth`, `age`, `marital_status`, `address1`, `address2`, `contact_number`\\\r\n      , `secondary_contact_number`, `email`, `emergency_contact_name`, `emergency_contact_number`\\\r\n      , `relationship_with_patient`, `visa_type_id`, `nationality_id`, `postal_code`\\\r\n      , `primary_identity_id`, `primary_id_no`, `secondary_identity_id`, `secondary_id_no`\\\r\n      , `photo_file`, `primary_id_file`, `secondary_id_file` FROM `hims_f_patient`\\\r\n       WHERE `record_status`='A' AND hims_d_patient_id=? ;\" +\r\n              optionString,\r\n            [insertId],\r\n            (error, records) => {\r\n              if (!error) {\r\n                req[\"folderPath\"] =\r\n                  records[1][0][\"param_value\"] +\r\n                  \"/\" +\r\n                  records[0][0][\"patient_code\"];\r\n                req[\"fileName\"] = records[0][0][\"patient_code\"];\r\n              }\r\n              if (typeof callBack == \"function\") {\r\n                callBack(error, records);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\nlet updateData = (dataBase, req, callBack) => {\r\n  let patientModel = {\r\n    hims_d_patient_id: null,\r\n    patient_code: null,\r\n    registration_date: null,\r\n    title_id: null,\r\n    first_name: null,\r\n    middle_name: null,\r\n    last_name: null,\r\n    gender: null,\r\n    religion_id: null,\r\n    date_of_birth: null,\r\n    age: null,\r\n    marital_status: null,\r\n    address1: null,\r\n    address2: null,\r\n    contact_number: null,\r\n    secondary_contact_number: null,\r\n    email: null,\r\n    emergency_contact_name: \"\",\r\n    emergency_contact_number: \"\",\r\n    relationship_with_patient: \"\",\r\n    visa_type_id: null,\r\n    nationality_id: null,\r\n    postal_code: null,\r\n    primary_identity_id: null,\r\n    primary_id_no: null,\r\n    secondary_identity_id: \"\",\r\n    secondary_id_no: \"\",\r\n    photo_file: \"\",\r\n    primary_id_file: \"\",\r\n    secondary_id_file: \"\",\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    city_id: null,\r\n    state_id: null,\r\n    country_id: null,\r\n    documents: null /*{\r\n                        patientImage:{base64String:\"\",fileExtention:\"\"},\r\n                        patientPrimaryID:{base64String:\"\",fileExtention:\"\"},\r\n                        patientSecondaryID:{base64String:\"\",fileExtention:\"\"}\r\n                      }\r\n    */\r\n  };\r\n\r\n  try {\r\n    let inputparam = extend(patientModel, req.body);\r\n    dataBase.query(\r\n      \"UPDATE `hims_f_patient`\\\r\n  SET  `title_id`=?, `first_name`=?, `middle_name`=?, `last_name`=?, `full_name`=?, `arabic_name`=?, \\\r\n  `gender`=?, `religion_id`=?, `date_of_birth`=?, `age`=?, `marital_status`=?, `address1`=?, \\\r\n  `address2`=?, `contact_number`=?, `secondary_contact_number`=?, `email`=?, \\\r\n  `emergency_contact_name`=?, `emergency_contact_number`=?, `relationship_with_patient`=?,\\\r\n  `visa_type_id`=?, `nationality_id`=?, `postal_code`=?, `primary_identity_id`=?, \\\r\n  `primary_id_no`=?, `secondary_identity_id`=?, `secondary_id_no`=?, `photo_file`=?, \\\r\n  `primary_id_file`=?, `secondary_id_file`=?, `updated_by`=?, `updated_date`=?\\\r\n  WHERE `hims_d_patient_id`=?;\",\r\n      [\r\n        inputparam.title_id,\r\n        inputparam.first_name,\r\n        inputparam.middle_name,\r\n        inputparam.last_name,\r\n        inputparam.full_name,\r\n        inputparam.arabic_name,\r\n        inputparam.gender,\r\n        inputparam.religion_id,\r\n        inputparam.date_of_birth,\r\n        inputparam.age,\r\n        inputparam.marital_status,\r\n        inputparam.address1,\r\n        inputparam.address2,\r\n        inputparam.contact_number,\r\n        inputparam.secondary_contact_number,\r\n        inputparam.email,\r\n        inputparam.emergency_contact_name,\r\n        inputparam.emergency_contact_number,\r\n        inputparam.relationship_with_patient,\r\n        inputparam.visa_type_id,\r\n        inputparam.nationality_id,\r\n        inputparam.postal_code,\r\n        inputparam.primary_identity_id,\r\n        inputparam.primary_id_no,\r\n        inputparam.secondary_identity_id,\r\n        inputparam.secondary_id_no,\r\n        inputparam.photo_file,\r\n        inputparam.primary_id_file,\r\n        inputparam.secondary_id_file,\r\n        inputparam.updated_by,\r\n        new Date(),\r\n        inputparam.hims_d_patient_id\r\n      ],\r\n      (error, result) => {\r\n        if (typeof callBack == \"function\") callback(error, result);\r\n      }\r\n    );\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\nlet patientSelect = (req, res, next) => {\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      selectData(connection, req, (error, result) => {\r\n        connection.release();\r\n        if (error) {\r\n          releaseDBConnection(db, connection);\r\n          next(error);\r\n        }\r\n        req.records = result;\r\n        next();\r\n      });\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nlet selectData = (dataBase, req, callBack) => {\r\n  let patientWhereCondition = {\r\n    patient_code: \"ALL\",\r\n    contact_number: \"ALL\",\r\n    gender: \"ALL\"\r\n  };\r\n\r\n  try {\r\n    let where = whereCondition(extend(patientWhereCondition, req.query));\r\n    dataBase.query(\r\n      \"SELECT `hims_d_patient_id`, `patient_code`, `registration_date`\\\r\n  , `title_id`, `first_name`, `middle_name`, `last_name`, arabic_name,full_name,`gender`, `religion_id`\\\r\n  , `date_of_birth`, `age`, `marital_status`, `address1`, `address2`, `contact_number`\\\r\n  , `secondary_contact_number`, `email`, `emergency_contact_name`, `emergency_contact_number`\\\r\n  , `relationship_with_patient`, `visa_type_id`, `nationality_id`, `postal_code`\\\r\n  , `primary_identity_id`, `primary_id_no`, `secondary_identity_id`, `secondary_id_no`\\\r\n  , `photo_file`, `primary_id_file`, `secondary_id_file`,`city_id`,`state_id`,`country_id`,`vat_applicable` \\\r\n   FROM `hims_f_patient`\\\r\n   WHERE `record_status`='A' and \" +\r\n        where.condition,\r\n      where.values,\r\n      (error, result) => {\r\n        if (typeof callBack == \"function\") {\r\n          callBack(error, result);\r\n        }\r\n      }\r\n    );\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  addPatientToRegisteration,\r\n  updatePatientRegistrstion,\r\n  patientSelect,\r\n  insertData,\r\n  updateData,\r\n  selectData,\r\n  insertPatientData\r\n};\r\n"]}