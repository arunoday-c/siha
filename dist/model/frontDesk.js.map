{"version":3,"sources":["../../src/model/frontDesk.js"],"names":["addFrontDesk","req","res","next","db","dataBaseNotInitilizedError","query","JSON","parse","body","getConnection","error","connection","beginTransaction","rollback","records","newNumber","length","patient_code","result","patient_id","patResults","completeNum","visit_code","resultdata","commit","e","selectWhere","hims_d_patient_id","selectFrontDesk","where","condition","values","showresult","resultFields","patientRegistration","visitDetails","module","exports"],"mappings":"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","file":"frontDesk.js","sourcesContent":["import { insertData } from \"../model/patientRegistration\";\nimport { insertVisitData } from \"../model/visit\";\nimport {\n  whereCondition,\n  runningNumber,\n  releaseDBConnection,\n  createFolder\n} from \"../utils\";\nimport extend from \"extend\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { debugLog, debugFunction } from \"../utils/logging\";\nlet addFrontDesk = (req, res, next) => {\n  debugFunction(\"addFrontDesk\");\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    if (req.query != null) {\n      req.query = JSON.parse(req.query[\"data\"]);\n      req.body = req.query;\n    }\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.beginTransaction(error => {\n        if (error) {\n          connection.rollback(() => {\n            releaseDBConnection(db, connection);\n            next(error);\n          });\n        }\n        runningNumber(\n          connection,\n          1,\n          \"PATCODE_NUMGEN\",\n          (error, records, newNumber) => {\n            debugLog(\"newNumber:\" + newNumber);\n            if (error) {\n              connection.rollback(() => {\n                releaseDBConnection(db, connection);\n                next(error);\n              });\n            }\n            if (records.length != 0) {\n              connection.beginTransaction(error => {\n                if (error) {\n                  connection.rollback(() => {\n                    releaseDBConnection(db, connection);\n                    next(error);\n                  });\n                }\n                req.query.patient_code = newNumber;\n                req.body.patient_code = newNumber;\n                insertData(\n                  connection,\n                  req,\n                  res,\n                  (error, result) => {\n                    if (error) {\n                      connection.rollback(() => {\n                        releaseDBConnection(db, connection);\n                        next(error);\n                      });\n                    }\n                    if (result != null && result.length != 0) {\n                      req.query.patient_id = result[0][0][\"hims_d_patient_id\"];\n                      req.body.patient_id = result[0][0][\"hims_d_patient_id\"];\n                      debugLog(\n                        \"req.body.patient_id:\" +\n                          result[0][0][\"hims_d_patient_id\"]\n                      );\n                      runningNumber(\n                        connection,\n                        2,\n                        \"VISIT_NUMGEN\",\n                        (error, patResults, completeNum) => {\n                          if (error) {\n                            connection.rollback(() => {\n                              releaseDBConnection(db, connection);\n                              next(error);\n                            });\n                          }\n                          req.query.visit_code = completeNum;\n                          req.body.visit_code = completeNum;\n                          debugLog(\"req.body.visit_code : \" + completeNum);\n                          insertVisitData(\n                            connection,\n                            req,\n                            res,\n                            (error, resultdata) => {\n                              if (error) {\n                                connection.rollback(() => {\n                                  releaseDBConnection(db, connection);\n                                  next(error);\n                                });\n                              }\n                              connection.commit(error => {\n                                releaseDBConnection(db, connection);\n                                if (error) {\n                                  connection.rollback(() => {\n                                    next(error);\n                                  });\n                                }\n                                debugLog(\n                                  \"patient_code : \" + req.body.patient_code\n                                );\n                                resultdata[\"patient_code\"] =\n                                  req.body.patient_code;\n                                resultdata[\"visit_code\"] = req.body.visit_code;\n                                req.records = resultdata;\n                                //Upload Images to server.\n                                createFolder(req, res);\n                                next();\n                                return;\n                              });\n                            }\n                          );\n                        }\n                      );\n                    } else {\n                      connection.commit(error => {\n                        releaseDBConnection(db, connection);\n                        if (error) {\n                          connection.rollback(() => {\n                            next(error);\n                          });\n                        }\n                        req.records = result;\n                        next();\n                      });\n                    }\n                  },\n                  true,\n                  next\n                );\n              });\n            }\n          }\n        );\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nlet selectWhere = {\n  patient_code: \"ALL\",\n  hims_d_patient_id: \"ALL\"\n};\nlet selectFrontDesk = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let where = whereCondition(extend(selectWhere, req.query));\n      connection.query(\n        \"SELECT `hims_d_patient_id`, `patient_code`\\\n      , `registration_date`, `title_id`,`first_name`, `middle_name`, `last_name`\\\n      , `gender`, `religion_id`,`date_of_birth`, `age`, `marital_status`, `address1`\\\n      , `address2`,`contact_number`, `secondary_contact_number`, `email`\\\n      , `emergency_contact_name`,`emergency_contact_number`, `relationship_with_patient`\\\n      , `visa_type_id`,`nationality_id`, `postal_code`, `primary_identity_id`\\\n      , `primary_id_no`,`secondary_identity_id`, `secondary_id_no`, `photo_file`\\\n      , `primary_id_file`,`secondary_id_file` FROM `hims_f_patient` \\\n       WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          if (error) {\n            releaseDBConnection(db, connection);\n            next(error);\n          }\n          let showresult;\n          if (result.length != 0) {\n            let hims_d_patient_id = result[0][\"hims_d_patient_id\"];\n            connection.query(\n              \"SELECT `hims_f_patient_visit_id`, `patient_id`\\\n            , `visit_type`, `visit_date`, `department_id`, `sub_department_id`\\\n            , `doctor_id`, `maternity_patient`, `is_mlc`, `mlc_accident_reg_no`\\\n            , `mlc_police_station`, `mlc_wound_certified_date`\\\n             FROM `hims_f_patient_visit` WHERE `record_status`='A' AND \\\n             patient_id=? ORDER BY hims_f_patient_visit_id desc \",\n              [hims_d_patient_id],\n              (error, resultFields) => {\n                if (error) {\n                  releaseDBConnection(db, connection);\n                  next(error);\n                }\n                showresult = {\n                  patientRegistration: result[0],\n                  visitDetails: resultFields\n                };\n                req.records = showresult;\n                next();\n              }\n            );\n          } else {\n            req.records = showresult;\n            next();\n          }\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nmodule.exports = {\n  addFrontDesk,\n  selectFrontDesk\n};\n"]}