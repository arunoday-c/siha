{"version":3,"sources":["../../src/model/visit.js"],"names":["visitDetails","hims_f_patient_visit_id","patient_id","visit_type","visit_date","visit_code","department_id","sub_department_id","doctor_id","maternity_patient","is_mlc","mlc_accident_reg_no","mlc_police_station","mlc_wound_certified_date","created_by","created_date","updated_by","updated_date","record_status","patient_message","is_critical_message","message_active_till","addVisit","req","res","next","db","dataBaseNotInitilizedError","getConnection","error","connection","beginTransaction","rollback","insertVisitData","result","commit","records","e","dataBase","callBack","inputParam","body","query","Date","release","patient_visit_id","insertId","resultData","updateVisit","updateData","module","exports"],"mappings":"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","file":"visit.js","sourcesContent":["import extend from \"extend\";\nimport httpStatus from \"../utils/httpStatus\";\nlet visitDetails = {\n  hims_f_patient_visit_id: null,\n  patient_id: null,\n  visit_type: null,\n  visit_date: null,\n  visit_code: null,\n  department_id: null,\n  sub_department_id: null,\n  doctor_id: null,\n  maternity_patient: null,\n  is_mlc: null,\n  mlc_accident_reg_no: null,\n  mlc_police_station: null,\n  mlc_wound_certified_date: null,\n  created_by: null,\n  created_date: null,\n  updated_by: null,\n  updated_date: null,\n  record_status: null,\n  patient_message: null,\n  is_critical_message: null,\n  message_active_till: null\n};\nlet addVisit = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.beginTransaction(error => {\n        if (error) {\n          connection.rollback(() => {\n            next(error);\n          });\n        }\n        insertVisitData(connection, req, res, (error, result) => {\n          if (error) {\n            connection.rollback(() => {\n              next(error);\n            });\n          }\n          connection.commit(error => {\n            if (error) {\n              connection.rollback(() => {\n                next(error);\n              });\n            }\n            req.records = result;\n            next();\n          });\n        });\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nlet insertVisitData = (dataBase, req, res, callBack) => {\n  try {\n    let inputParam = extend(visitDetails, req.body);\n\n    dataBase.query(\n      \"INSERT INTO `hims_f_patient_visit` (`patient_id`, `visit_type`, \\\n        `visit_date`, `department_id`, `sub_department_id`, `doctor_id`, `maternity_patient`,\\\n         `is_mlc`, `mlc_accident_reg_no`, `mlc_police_station`, `mlc_wound_certified_date`, \\\n         `created_by`, `created_date`,`visit_code`)\\\n        VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?);\",\n      [\n        inputParam.patient_id,\n        inputParam.visit_type,\n        inputParam.visit_date,\n        inputParam.department_id,\n        inputParam.sub_department_id,\n        inputParam.doctor_id,\n        inputParam.maternity_patient,\n        inputParam.is_mlc,\n        inputParam.mlc_accident_reg_no,\n        inputParam.mlc_police_station,\n        null, //inputParam.mlc_wound_certified_date\n        inputParam.created_by,\n        new Date(),\n        inputParam.visit_code\n      ],\n      (error, result) => {\n        if (error) {\n          dataBase.rollback(() => {\n            dataBase.release();\n            next(error);\n          });\n        }\n        let patient_visit_id = result.insertId;\n        dataBase.query(\n          \"INSERT INTO `hims_f_patient_visit_message` (`patient_visit_id`\\\n      , `patient_message`, `is_critical_message`, `message_active_till`, `created_by`, `created_date`\\\n      ) VALUES ( ?, ?, ?, ?, ?, ?);\",\n          [\n            patient_visit_id,\n            inputParam.patient_message,\n            inputParam.is_critical_message,\n            inputParam.message_active_till,\n            inputParam.created_by,\n            new Date()\n          ],\n          (error, resultData) => {\n            if (typeof callBack == \"function\") {\n              callBack(error, resultData);\n            }\n          }\n        );\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\nlet updateVisit = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      updateData(connection, req, (error, result) => {\n        connection.release();\n        if (error) {\n          next(error);\n        }\n        req.records = result;\n        next();\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet updateData = (dataBase, req, callBack) => {\n  try {\n    let inputParam = extend(visitDetails, req.body);\n    dataBase.query(\n      \"UPDATE `hims_f_patient_visit`\\\n    SET `visit_type`=?, `visit_date`=?, `department_id`=?, `sub_department_id`=?\\\n    ,`doctor_id`=?, `maternity_patient`=?, `is_mlc`=?, `mlc_accident_reg_no`=?,\\\n    `mlc_police_station`=?, `mlc_wound_certified_date`=?, `updated_by`=?, `updated_date`=?\\\n    WHERE `hims_f_patient_visit_id`=?;\",\n      [\n        inputParam.visit_type,\n        inputParam.visit_date,\n        inputParam.department_id,\n        inputParam.sub_department_id,\n        inputParam.doctor_id,\n        inputParam.maternity_patient,\n        inputParam.is_mlc,\n        inputParam.mlc_accident_reg_no,\n        inputParam.mlc_police_station,\n        inputParam.mlc_wound_certified_date,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.hims_f_patient_visit_id\n      ],\n      (error, result) => {\n        if (typeof callBack == \"function\") {\n          callBack(error, result);\n        }\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\nmodule.exports = {\n  addVisit,\n  updateVisit,\n  insertVisitData\n};\n"]}