{"version":3,"sources":["../../src/model/visit.js"],"names":["addVisit","req","res","next","db","dataBaseNotInitilizedError","getConnection","error","connection","beginTransaction","rollback","patient_id","body","query","visit_code","insertVisitData","result","commit","records","generateError","numUpdate","completeNumber","e","dataBase","callBack","visitDetails","hims_f_patient_visit_id","visit_type","visit_date","age_in_years","age_in_months","age_in_days","insured","sec_insured","department_id","sub_department_id","doctor_id","maternity_patient","is_mlc","mlc_accident_reg_no","mlc_police_station","mlc_wound_certified_date","created_by","created_date","updated_by","updated_date","record_status","patient_message","is_critical_message","message_active_till","visit_expiery_date","inputParam","record","release","log","add","length","parseInt","_d","Date","visit_id","insertId","patient_visit_id","resultData","updateVisit","updateData","checkVisitExists","module","exports"],"mappings":"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","file":"visit.js","sourcesContent":["import extend from \"extend\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { debugLog, debugFunction, logger } from \"../utils/logging\";\nimport { whereCondition, runningNumber, releaseDBConnection } from \"../utils\";\nimport moment from \"moment\";\n\nlet addVisit = (req, res, next) => {\n  try {\n    debugFunction(\"addVisit\");\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.beginTransaction(error => {\n        if (error) {\n          connection.rollback(() => {\n            next(error);\n          });\n        }\n\n        let patient_id =\n          req.body.patient_id != null\n            ? req.body.patient_id\n            : req.query.patient_id;\n        let visit_code =\n          req.body.visit_code != null\n            ? req.body.visit_code\n            : req.query.visit_code;\n        if (visit_code != \"\" && patient_id != null) {\n          insertVisitData(connection, req, res, (error, result) => {\n            if (error) {\n              connection.rollback(() => {\n                next(error);\n              });\n            }\n            connection.commit(error => {\n              if (error) {\n                connection.rollback(() => {\n                  next(error);\n                });\n              }\n              req.records = result;\n              next();\n            });\n          });\n        } else {\n          if (patient_id == null) {\n            next(\n              httpStatus.generateError(400, \"Patient Code is not generated\")\n            );\n          } else {\n            runningNumber(\n              connection,\n              2,\n              \"VISIT_NUMGEN\",\n              (error, numUpdate, completeNumber) => {\n                if (error) {\n                  connection.rollback(() => {\n                    releaseDBConnection(db, connection);\n                    next(error);\n                  });\n                }\n                req.query.visit_code = completeNumber;\n                req.body.visit_code = completeNumber;\n                debugLog(\"req.body.visit_code : \" + completeNumber);\n                insertVisitData(connection, req, res, (error, result) => {\n                  if (error) {\n                    connection.rollback(() => {\n                      next(error);\n                    });\n                  }\n                  connection.commit(error => {\n                    if (error) {\n                      connection.rollback(() => {\n                        next(error);\n                      });\n                    }\n                    req.records = result;\n                    next();\n                  });\n                });\n              }\n            );\n          }\n        }\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet insertVisitData = (dataBase, req, res, callBack) => {\n  let visitDetails = {\n    hims_f_patient_visit_id: null,\n    patient_id: null,\n    visit_type: null,\n    visit_date: null,\n    visit_code: null,\n    age_in_years: null,\n    age_in_months: null,\n    age_in_days: null,\n    insured: null,\n    sec_insured: null,\n    department_id: null,\n    sub_department_id: null,\n    doctor_id: null,\n    maternity_patient: null,\n    is_mlc: null,\n    mlc_accident_reg_no: null,\n    mlc_police_station: null,\n    mlc_wound_certified_date: null,\n    created_by: null,\n    created_date: null,\n    updated_by: null,\n    updated_date: null,\n    record_status: null,\n    patient_message: null,\n    is_critical_message: null,\n    message_active_till: null,\n    visit_expiery_date: null\n  };\n  try {\n    debugFunction(\"insertVisitData\");\n    let inputParam = extend(\n      visitDetails,\n      req.query[\"data\"] == null ? req.body : req.query\n    );\n\n    dataBase.query(\n      \"SELECT param_value from algaeh_d_app_config WHERE param_name=?\",\n      [\"VISITEXPERIDAY\"],\n      (error, record) => {\n        if (error) {\n          dataBase.rollback(() => {\n            dataBase.release();\n            logger.log(\"error\", \"Add new visit %j\", error);\n          });\n        }\n        inputParam.visit_expiery_date = moment(inputParam.visit_date).add(\n          record != null && record.length != 0\n            ? parseInt(record[0][\"param_value\"])\n            : 0,\n          \"days\"\n        )._d;\n        dataBase.query(\n          \"INSERT INTO `hims_f_patient_visit` (`patient_id`, `visit_type`, \\\n          `age_in_years`, `age_in_months`, `age_in_days`, `insured`,`sec_insured`,\\\n        `visit_date`, `department_id`, `sub_department_id`, `doctor_id`, `maternity_patient`,\\\n         `is_mlc`, `mlc_accident_reg_no`, `mlc_police_station`, `mlc_wound_certified_date`, \\\n         `created_by`, `created_date`,`visit_code`,`visit_expiery_date`)\\\n        VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\",\n          [\n            inputParam.patient_id,\n            inputParam.visit_type,\n            inputParam.age_in_years,\n            inputParam.age_in_months,\n            inputParam.age_in_days,\n            inputParam.insured,\n            inputParam.sec_insured,\n            inputParam.visit_date,\n            inputParam.department_id,\n            inputParam.sub_department_id,\n            inputParam.doctor_id,\n            inputParam.maternity_patient,\n            inputParam.is_mlc,\n            inputParam.mlc_accident_reg_no,\n            inputParam.mlc_police_station,\n            inputParam.mlc_wound_certified_date,\n            inputParam.created_by,\n            new Date(),\n            inputParam.visit_code,\n            inputParam.visit_expiery_date\n          ],\n          (error, result) => {\n            if (error) {\n              dataBase.rollback(() => {\n                dataBase.release();\n                logger.log(\"error\", \"Add new visit %j\", error);\n              });\n            }\n            req.visit_id = result.insertId;\n            let patient_visit_id = result.insertId;\n\n            debugLog(\"patient_visit_id : \" + patient_visit_id);\n\n            if (patient_visit_id != null) {\n              dataBase.query(\n                \"INSERT INTO `hims_f_patient_visit_message` (`patient_visit_id`\\\n      , `patient_message`, `is_critical_message`, `message_active_till`, `created_by`, `created_date`\\\n      ) VALUES ( ?, ?, ?, ?, ?, ?);\",\n                [\n                  patient_visit_id,\n                  inputParam.patient_message,\n                  inputParam.is_critical_message,\n                  inputParam.message_active_till,\n                  inputParam.created_by,\n                  new Date()\n                ],\n                (error, resultData) => {\n                  if (typeof callBack == \"function\") {\n                    callBack(error, result);\n                  }\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\nlet updateVisit = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      updateData(connection, req, (error, result) => {\n        connection.release();\n        if (error) {\n          next(error);\n        }\n        req.records = result;\n        next();\n      });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet updateData = (dataBase, req, callBack) => {\n  let visitDetails = {\n    hims_f_patient_visit_id: null,\n    patient_id: null,\n    visit_type: null,\n    visit_date: null,\n    visit_code: null,\n    department_id: null,\n    sub_department_id: null,\n    doctor_id: null,\n    maternity_patient: null,\n    is_mlc: null,\n    mlc_accident_reg_no: null,\n    mlc_police_station: null,\n    mlc_wound_certified_date: null,\n    created_by: null,\n    created_date: null,\n    updated_by: null,\n    updated_date: null,\n    record_status: null,\n    patient_message: null,\n    is_critical_message: null,\n    message_active_till: null,\n    visit_expiery_date: null\n  };\n\n  try {\n    let inputParam = extend(visitDetails, req.body);\n    dataBase.query(\n      \"UPDATE `hims_f_patient_visit`\\\n    SET `visit_type`=?, `visit_date`=?, `department_id`=?, `sub_department_id`=?\\\n    ,`doctor_id`=?, `maternity_patient`=?, `is_mlc`=?, `mlc_accident_reg_no`=?,\\\n    `mlc_police_station`=?, `mlc_wound_certified_date`=?, `updated_by`=?, `updated_date`=?\\\n    WHERE `hims_f_patient_visit_id`=?;\",\n      [\n        inputParam.visit_type,\n        inputParam.visit_date,\n        inputParam.department_id,\n        inputParam.sub_department_id,\n        inputParam.doctor_id,\n        inputParam.maternity_patient,\n        inputParam.is_mlc,\n        inputParam.mlc_accident_reg_no,\n        inputParam.mlc_police_station,\n        inputParam.mlc_wound_certified_date,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.hims_f_patient_visit_id\n      ],\n      (error, result) => {\n        if (typeof callBack == \"function\") {\n          callBack(error, result);\n        }\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet checkVisitExists = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let inputParam = extend(\n      {\n        sub_department_id: null,\n        doctor_id: null,\n        patient_id: null\n      },\n      req.body\n    );\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      db.query(\n        \"select visit_code from hims_d_sub_department,hims_f_patient_visit where \\\n      hims_f_patient_visit.sub_department_id=hims_d_sub_department.hims_d_sub_department_id \\\n      and hims_d_sub_department.record_status='A' and hims_f_patient_visit.record_status='A' \\\n      and hims_f_patient_visit.visit_date =DATE(now()) and hims_d_sub_department.hims_d_sub_department_id=?\\\n      and hims_f_patient_visit.doctor_id=? and patient_id =? \\\n      \",\n        [\n          inputParam.sub_department_id,\n          inputParam.doctor_id,\n          inputParam.patient_id\n        ],\n        (error, records) => {\n          connection.release();\n          if (error) {\n            next(error);\n          }\n          req.records = records;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  addVisit,\n  updateVisit,\n  insertVisitData,\n  checkVisitExists\n};\n"]}