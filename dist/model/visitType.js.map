{"version":3,"sources":["../../src/model/visitType.js"],"names":["selectStatement","req","res","next","whereStatement","hims_d_visit_type_id","visit_type_code","visit_type_desc","db","dataBaseNotInitilizedError","getConnection","error","connection","where","query","condition","values","result","records","e","addVisit","visitType","consultation","created_by","created_date","updated_by","updated_date","record_status","visit_status","inputParam","body","arabic_visit_type_desc","Date","updateVisit","deleteVisitType","tableName","id","module","exports"],"mappings":"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","file":"visitType.js","sourcesContent":["import extend from \"extend\";\nimport { whereCondition, releaseDBConnection, deleteRecord } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\n\nlet selectStatement = (req, res, next) => {\n  let whereStatement = {\n    hims_d_visit_type_id: \"ALL\",\n    visit_type_code: \"ALL\",\n    visit_type_desc: \"ALL\"\n  };\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      let where = whereCondition(extend(whereStatement, req.query));\n      connection.query(\n        \"SELECT `hims_d_visit_type_id`, `visit_type_code`, `visit_type_desc`,`visit_status`,`arabic_visit_type_desc`\\\n       , `consultation`, `created_by`, `created_date`, `updated_by`, `updated_date` FROM `hims_d_visit_type`  \\\n       WHERE record_status='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet addVisit = (req, res, next) => {\n  let visitType = {\n    hims_d_visit_type_id: null,\n    visit_type_code: null,\n    visit_type_desc: null,\n    consultation: null,\n    created_by: null,\n    created_date: null,\n    updated_by: null,\n    updated_date: null,\n    record_status: null,\n    visit_status: \"A\"\n  };\n\n  if (req.db == null) {\n    next(httpStatus.dataBaseNotInitilizedError());\n  }\n  let db = req.db;\n  db.getConnection((error, connection) => {\n    if (error) {\n      next(error);\n    }\n    let inputParam = extend(visitType, req.body);\n    connection.query(\n      \"INSERT INTO `hims_d_visit_type` (`visit_type_code`, `visit_type_desc`,`arabic_visit_type_desc`, `consultation` \\\n      , `created_by` ,`created_date`,`visit_status`) \\\n   VALUES ( ?, ?, ?, ?, ?,?)\",\n      [\n        inputParam.visit_type_code,\n        inputParam.visit_type_desc,\n        inputParam.arabic_visit_type_desc,\n        inputParam.consultation,\n        inputParam.created_by,\n        new Date(),\n        inputParam.visit_status\n      ],\n      (error, result) => {\n        releaseDBConnection(db, connection);\n        if (error) {\n          next(error);\n        }\n        req.records = result;\n        next();\n      }\n    );\n  });\n};\n\nlet updateVisit = (req, res, next) => {\n  let visitType = {\n    hims_d_visit_type_id: null,\n    visit_type_code: null,\n    visit_type_desc: null,\n    consultation: null,\n    created_by: null,\n    created_date: null,\n    updated_by: null,\n    updated_date: null,\n    record_status: null,\n    visit_status: \"A\"\n  };\n  if (req.db == null) {\n    next(httpStatus.dataBaseNotInitilizedError());\n  }\n  let db = req.db;\n  db.getConnection((error, connection) => {\n    if (error) {\n      next(error);\n    }\n    let inputParam = extend(visitType, req.body);\n    connection.query(\n      \"UPDATE `hims_d_visit_type` \\\n     SET `visit_type_desc`=?,  `arabic_visit_type_desc`=?,`consultation`=?, `updated_by`=?, `updated_date`=?,visit_status=? \\\n     WHERE `record_status`='A' and `hims_d_visit_type_id`=?\",\n      [\n        inputParam.visit_type_desc,\n        inputParam.arabic_visit_type_desc,\n        inputParam.consultation,\n        inputParam.updated_by,\n        new Date(),\n        inputParam.visit_status,\n        inputParam.hims_d_visit_type_id\n      ],\n      (error, result) => {\n        releaseDBConnection(db, connection);\n        if (error) {\n          next(error);\n        }\n        req.records = result;\n        next();\n      }\n    );\n  });\n};\nlet deleteVisitType = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    deleteRecord(\n      {\n        db: req.db,\n        tableName: \"hims_d_visit_type\",\n        id: req.body.hims_d_visit_type_id,\n        query:\n          \"UPDATE hims_d_visit_type SET  record_status='I', \\\n         updated_by=?,updated_date=? WHERE hims_d_visit_type_id=?\",\n        values: [req.body.updated_by, new Date(), req.body.hims_d_visit_type_id]\n      },\n      result => {\n        req.records = result;\n        next();\n      },\n      error => {\n        next(error);\n      }\n    );\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  selectStatement,\n  addVisit,\n  updateVisit,\n  deleteVisitType\n};\n"]}