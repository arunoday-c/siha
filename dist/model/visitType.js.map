{"version":3,"sources":["../../src/model/visitType.js"],"names":["selectStatement","req","res","next","whereStatement","hims_d_visit_type_id","visit_type_code","visit_type_desc","db","dataBaseNotInitilizedError","getConnection","error","connection","where","query","condition","values","result","records","e","addVisit","visitType","consultation","created_by","userIdentity","algaeh_d_app_user_id","updated_by","visit_status","inputParam","body","arabic_visit_type_desc","Date","updateVisit","deleteVisitType","tableName","id","module","exports"],"mappings":"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","file":"visitType.js","sourcesContent":["import extend from \"extend\";\r\nimport { whereCondition, releaseDBConnection, deleteRecord } from \"../utils\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\n\r\nlet selectStatement = (req, res, next) => {\r\n  let whereStatement = {\r\n    hims_d_visit_type_id: \"ALL\",\r\n    visit_type_code: \"ALL\",\r\n    visit_type_desc: \"ALL\"\r\n  };\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      let where = whereCondition(extend(whereStatement, req.query));\r\n      connection.query(\r\n        \"SELECT `hims_d_visit_type_id`, `visit_type_code`, `visit_type_desc`,`visit_status`,`arabic_visit_type_desc`\\\r\n       , `consultation`, `created_by`, `created_date`, `updated_by`, `updated_date` FROM `hims_d_visit_type`  \\\r\n       WHERE record_status='A' AND \" +\r\n          where.condition,\r\n        where.values,\r\n        (error, result) => {\r\n          releaseDBConnection(db, connection);\r\n          if (error) {\r\n            next(error);\r\n          }\r\n          req.records = result;\r\n          next();\r\n        }\r\n      );\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nlet addVisit = (req, res, next) => {\r\n  let visitType = {\r\n    hims_d_visit_type_id: null,\r\n    visit_type_code: null,\r\n    visit_type_desc: null,\r\n    consultation: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    visit_status: \"A\"\r\n  };\r\n\r\n  if (req.db == null) {\r\n    next(httpStatus.dataBaseNotInitilizedError());\r\n  }\r\n  let db = req.db;\r\n  db.getConnection((error, connection) => {\r\n    if (error) {\r\n      next(error);\r\n    }\r\n    let inputParam = extend(visitType, req.body);\r\n    connection.query(\r\n      \"INSERT INTO `hims_d_visit_type` (`visit_type_code`, `visit_type_desc`,`arabic_visit_type_desc`, `consultation` \\\r\n      , `created_by` ,`created_date`,`visit_status`) \\\r\n   VALUES ( ?, ?, ?, ?, ?, ?, ?)\",\r\n      [\r\n        inputParam.visit_type_code,\r\n        inputParam.visit_type_desc,\r\n        inputParam.arabic_visit_type_desc,\r\n        inputParam.consultation,\r\n        inputParam.created_by,\r\n        new Date(),\r\n        inputParam.visit_status\r\n      ],\r\n      (error, result) => {\r\n        releaseDBConnection(db, connection);\r\n        if (error) {\r\n          next(error);\r\n        }\r\n        req.records = result;\r\n        next();\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nlet updateVisit = (req, res, next) => {\r\n  let visitType = {\r\n    hims_d_visit_type_id: null,\r\n    visit_type_code: null,\r\n    visit_type_desc: null,\r\n    consultation: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    visit_status: \"A\"\r\n  };\r\n  if (req.db == null) {\r\n    next(httpStatus.dataBaseNotInitilizedError());\r\n  }\r\n  let db = req.db;\r\n  db.getConnection((error, connection) => {\r\n    if (error) {\r\n      next(error);\r\n    }\r\n    let inputParam = extend(visitType, req.body);\r\n    connection.query(\r\n      \"UPDATE `hims_d_visit_type` \\\r\n     SET `visit_type_desc`=?,  `arabic_visit_type_desc`=?,`consultation`=?, `updated_by`=?, `updated_date`=?,visit_status=? \\\r\n     WHERE `record_status`='A' and `hims_d_visit_type_id`=?\",\r\n      [\r\n        inputParam.visit_type_desc,\r\n        inputParam.arabic_visit_type_desc,\r\n        inputParam.consultation,\r\n        inputParam.updated_by,\r\n        new Date(),\r\n        inputParam.visit_status,\r\n        inputParam.hims_d_visit_type_id\r\n      ],\r\n      (error, result) => {\r\n        releaseDBConnection(db, connection);\r\n        if (error) {\r\n          next(error);\r\n        }\r\n        req.records = result;\r\n        next();\r\n      }\r\n    );\r\n  });\r\n};\r\nlet deleteVisitType = (req, res, next) => {\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    deleteRecord(\r\n      {\r\n        db: req.db,\r\n        tableName: \"hims_d_visit_type\",\r\n        id: req.body.hims_d_visit_type_id,\r\n        query:\r\n          \"UPDATE hims_d_visit_type SET  record_status='I', \\\r\n         updated_by=?,updated_date=? WHERE hims_d_visit_type_id=?\",\r\n        values: [req.body.updated_by, new Date(), req.body.hims_d_visit_type_id]\r\n      },\r\n      result => {\r\n        req.records = result;\r\n        next();\r\n      },\r\n      error => {\r\n        next(error);\r\n      },\r\n      true\r\n    );\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  selectStatement,\r\n  addVisit,\r\n  updateVisit,\r\n  deleteVisitType\r\n};\r\n"]}