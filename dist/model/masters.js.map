{"version":3,"sources":["../../src/model/masters.js"],"names":["titleWhere","his_d_title_id","title","titleMaster","req","res","next","db","dataBaseNotInitilizedError","where","query","getConnection","error","connection","condition","values","result","records","e","countryWhere","hims_d_country_id","country_code","country_name","status","countryMaster","stateWhere","hims_d_state_id","state_code","state_name","country_id","stateMaster","cityWhere","hims_d_city_id","city_code","city_name","state_id","cityMaster","nationalityWhere","hims_d_nationality_id","nationality_code","nationality","nationalityMaster","religionWhere","hims_d_religion_id","religion_code","religion_name","relegionMaster","auogenWhere","hims_f_app_numgen_id","numgen_code","module_desc","autoGenMaster","visaWhere","hims_d_visa_type_id","visa_type_code","visa_desc","visa_type","visaMaster","release","module","exports"],"mappings":"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","file":"masters.js","sourcesContent":["import { whereCondition, releaseDBConnection } from \"../utils\";\nimport extend from \"extend\";\nimport httpStatus from \"../utils/httpStatus\";\nlet titleWhere = {\n  his_d_title_id: \"ALL\",\n  title: \"ALL\"\n};\nlet titleMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(titleWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      db.query(\n        \"SELECT `his_d_title_id`, `title` FROM `hims_d_title` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet countryWhere = {\n  hims_d_country_id: \"ALL\",\n  country_code: \"ALL\",\n  country_name: \"ALL\",\n  status: \"ALL\"\n};\nlet countryMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(countryWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_d_country_id`, `country_code`, `country_name`, `status` FROM `hims_d_country` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet stateWhere = {\n  hims_d_state_id: \"ALL\",\n  state_code: \"ALL\",\n  state_name: \"ALL\",\n  country_id: \"ALL\"\n};\nlet stateMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(stateWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_d_state_id`, `state_code`, `state_name`, `country_id` FROM `hims_d_state` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\nlet cityWhere = {\n  hims_d_city_id: \"ALL\",\n  city_code: \"ALL\",\n  city_name: \"ALL\",\n  state_id: \"ALL\"\n};\nlet cityMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(cityWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_d_city_id`, `city_code`, `city_name`, `state_id` FROM `hims_d_city` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet nationalityWhere = {\n  hims_d_nationality_id: \"ALL\",\n  nationality_code: \"ALL\",\n  nationality: \"ALL\"\n};\nlet nationalityMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(nationalityWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      db.query(\n        \"SELECT `hims_d_nationality_id`, `nationality_code`, `nationality` FROM `hims_d_nationality` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet religionWhere = {\n  hims_d_religion_id: \"ALL\",\n  religion_code: \"ALL\",\n  religion_name: \"ALL\"\n};\nlet relegionMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(religionWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_d_religion_id`, `religion_code`, `religion_name` FROM `hims_d_religion` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet auogenWhere = {\n  hims_f_app_numgen_id: \"ALL\",\n  numgen_code: \"ALL\",\n  module_desc: \"ALL\"\n};\nlet autoGenMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(auogenWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_f_app_numgen_id`, `numgen_code`, `module_desc`, `prefix`, `intermediate_series`, `postfix`, `length`, `increment_by`, `numgen_seperator`, `postfix_start`, `postfix_end`, `current_num`, `pervious_num` FROM `hims_f_app_numgen` WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          releaseDBConnection(db, connection);\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nlet visaWhere = {\n  hims_d_visa_type_id: \"ALL\",\n  visa_type_code: \"ALL\",\n  visa_desc: \"ALL\",\n  visa_type: \"ALL\"\n};\nlet visaMaster = (req, res, next) => {\n  try {\n    if (req.db == null) {\n      next(httpStatus.dataBaseNotInitilizedError());\n    }\n    let db = req.db;\n    let where = whereCondition(extend(visaWhere, req.query));\n    db.getConnection((error, connection) => {\n      if (error) {\n        next(error);\n      }\n      connection.query(\n        \"SELECT `hims_d_visa_type_id`, `visa_type_code`, `visa_type`, `visa_desc`, `created_by`, \\\n        `created_date`, `updated_by`, `updated_date`, `visa_status` FROM `hims_d_visa_type` \\\n         WHERE `record_status`='A' AND \" +\n          where.condition,\n        where.values,\n        (error, result) => {\n          connection.release();\n          if (error) {\n            next(error);\n          }\n          req.records = result;\n          next();\n        }\n      );\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n\nmodule.exports = {\n  titleMaster,\n  countryMaster,\n  stateMaster,\n  cityMaster,\n  relegionMaster,\n  nationalityMaster,\n  autoGenMaster,\n  visaMaster\n};\n"]}