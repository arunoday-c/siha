{"version":3,"sources":["../../src/model/mastersUpdate.js"],"names":["insertToAppgen","req","res","next","modelAppGen","hims_f_app_numgen_id","numgen_code","module_desc","prefix","intermediate_series","postfix","length","increment_by","numgen_seperator","postfix_start","postfix_end","current_num","pervious_num","created_by","userIdentity","algaeh_d_app_user_id","updated_by","db","dataBaseNotInitilizedError","getConnection","error","connection","inputParam","body","query","Date","result","records","e","updateToAppgen","addVisa","visaType","hims_d_visa_type_id","visa_type_code","visa_type","visa_desc","visa_status","updateVisa","arabic_visa_type","deleteVisa","tableName","id","values","module","exports"],"mappings":"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","file":"mastersUpdate.js","sourcesContent":["import { runningNumber, releaseDBConnection, deleteRecord } from \"../utils\";\r\nimport extend from \"extend\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nimport { deleteFromCache } from \"../utils/caching\";\r\n\r\nlet insertToAppgen = (req, res, next) => {\r\n  let modelAppGen = {\r\n    hims_f_app_numgen_id: null,\r\n    numgen_code: null,\r\n    module_desc: null,\r\n    prefix: null,\r\n    intermediate_series: null,\r\n    postfix: null,\r\n    length: null,\r\n    increment_by: null,\r\n    numgen_seperator: null,\r\n    postfix_start: null,\r\n    postfix_end: null,\r\n    current_num: null,\r\n    pervious_num: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id\r\n  };\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      let inputParam = extend(modelAppGen, req.body);\r\n      connection.query(\r\n        \"INSERT INTO `hims_f_app_numgen` (`numgen_code`, `module_desc`\\\r\n      , `prefix`, `intermediate_series`, `postfix`, `length`, `increment_by`\\\r\n      , `numgen_seperator`, `postfix_start`, `postfix_end`, `current_num`\\\r\n      , `pervious_num`, `created_by`, `created_date`)\\\r\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\",\r\n        [\r\n          inputParam.numgen_code,\r\n          inputParam.module_desc,\r\n          inputParam.prefix,\r\n          inputParam.intermediate_series,\r\n          inputParam.postfix,\r\n          inputParam.length,\r\n          inputParam.increment_by,\r\n          inputParam.numgen_seperator,\r\n          inputParam.postfix_start,\r\n          inputParam.postfix_end,\r\n          inputParam.current_num,\r\n          inputParam.pervious_num,\r\n          inputParam.created_by,\r\n          new Date()\r\n        ],\r\n        (error, result) => {\r\n          releaseDBConnection(db, connection);\r\n          if (error) {\r\n            next(error);\r\n          }\r\n          req.records = result;\r\n          next();\r\n        }\r\n      );\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\nlet updateToAppgen = (req, res, next) => {\r\n  let modelAppGen = {\r\n    hims_f_app_numgen_id: null,\r\n    numgen_code: null,\r\n    module_desc: null,\r\n    prefix: null,\r\n    intermediate_series: null,\r\n    postfix: null,\r\n    length: null,\r\n    increment_by: null,\r\n    numgen_seperator: null,\r\n    postfix_start: null,\r\n    postfix_end: null,\r\n    current_num: null,\r\n    pervious_num: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id\r\n  };\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      let inputParam = extend(modelAppGen, req.body);\r\n      connection.query(\r\n        \"UPDATE `hims_f_app_numgen` \\\r\n          SET  `numgen_code`=?, `module_desc`=?, `prefix`=?, \\\r\n          `intermediate_series`=?, `postfix`=?, `length`=?, `increment_by`=?,\\\r\n          `numgen_seperator`=?, `postfix_start`=?, `postfix_end`=?, \\\r\n          `current_num`=?, `pervious_num`=?,  `updated_by`=?, `updated_date`=? \\\r\n          WHERE  `record_status`='A' AND `hims_f_app_numgen_id`=?\",\r\n        [\r\n          inputParam.numgen_code,\r\n          inputParam.module_desc,\r\n          inputParam.prefix,\r\n          inputParam.intermediate_series,\r\n          inputParam.postfix,\r\n          inputParam.length,\r\n          inputParam.increment_by,\r\n          inputParam.numgen_seperator,\r\n          inputParam.postfix_start,\r\n          inputParam.postfix_end,\r\n          inputParam.current_num,\r\n          inputParam.pervious_num,\r\n          inputParam.updated_by,\r\n          new Date(),\r\n          inputParam.hims_f_app_numgen_id\r\n        ],\r\n        (error, result) => {\r\n          releaseDBConnection(db, connection);\r\n          if (error) {\r\n            next(error);\r\n          }\r\n          req.records = result;\r\n          next();\r\n        }\r\n      );\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nlet addVisa = (req, res, next) => {\r\n  let visaType = {\r\n    hims_d_visa_type_id: null,\r\n    visa_type_code: null,\r\n    visa_type: null,\r\n    visa_desc: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    visa_status: \"A\"\r\n  };\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      let inputParam = extend(visaType, req.body);\r\n      connection.query(\r\n        \"INSERT INTO `hims_d_visa_type` ( `visa_type_code`, `visa_type`, `visa_desc`, `created_by`, `created_date`,`visa_status`) \\\r\n     VALUES (?, ?, ?, ?, ?,?)\",\r\n        [\r\n          inputParam.visa_type_code,\r\n          inputParam.visa_type,\r\n          inputParam.visa_desc,\r\n          inputParam.created_by,\r\n          new Date(),\r\n          inputParam.visa_status\r\n        ],\r\n        (error, result) => {\r\n          releaseDBConnection(db, connection);\r\n          if (error) {\r\n            next(error);\r\n          }\r\n          req.records = result;\r\n          next();\r\n        }\r\n      );\r\n\r\n      deleteFromCache(\"visa\");\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nlet updateVisa = (req, res, next) => {\r\n  let visaType = {\r\n    hims_d_visa_type_id: null,\r\n    visa_type_code: null,\r\n    visa_type: null,\r\n    visa_desc: null,\r\n    created_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    updated_by: req.userIdentity.algaeh_d_app_user_id,\r\n\r\n    visa_status: \"A\"\r\n  };\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    let db = req.db;\r\n    db.getConnection((error, connection) => {\r\n      if (error) {\r\n        next(error);\r\n      }\r\n      let inputParam = extend(visaType, req.body);\r\n      connection.query(\r\n        \"UPDATE `hims_d_visa_type` \\\r\n        SET `visa_type`=?, `arabic_visa_type` = ?, `updated_by`=?, `updated_date`=? \\\r\n        ,`visa_status` =? \\\r\n        WHERE `record_status`='A' and `hims_d_visa_type_id`=?\",\r\n        [\r\n          inputParam.visa_type,\r\n          inputParam.arabic_visa_type,\r\n          inputParam.updated_by,\r\n          new Date(),\r\n          inputParam.visa_status,\r\n          inputParam.hims_d_visa_type_id\r\n        ],\r\n        (error, result) => {\r\n          releaseDBConnection(db, connection);\r\n          if (error) {\r\n            next(error);\r\n          }\r\n          req.records = result;\r\n          next();\r\n        }\r\n      );\r\n      deleteFromCache(\"visa\");\r\n    });\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nlet deleteVisa = (req, res, next) => {\r\n  try {\r\n    if (req.db == null) {\r\n      next(httpStatus.dataBaseNotInitilizedError());\r\n    }\r\n    deleteRecord(\r\n      {\r\n        db: req.db,\r\n        tableName: \"hims_d_visa_type\",\r\n        id: req.body.hims_d_visa_type_id,\r\n        query:\r\n          \"UPDATE hims_d_visa_type SET  record_status='I', \\\r\n          updated_by=?,updated_date=? WHERE hims_d_visa_type_id=?\",\r\n        values: [req.body.updated_by, new Date(), req.body.hims_d_visa_type_id]\r\n      },\r\n      result => {\r\n        req.records = result;\r\n        next();\r\n      },\r\n      error => {\r\n        next(error);\r\n      }\r\n    );\r\n    deleteFromCache(\"visa\");\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  insertToAppgen,\r\n  updateToAppgen,\r\n  updateVisa,\r\n  addVisa,\r\n  deleteVisa\r\n};\r\n"]}