{"version":3,"sources":["../../src/utils/logging.js"],"names":["rotatingDate","require","tsFormat","Date","format","logDirectory","join","__dirname","logpath","logger","Logger","transports","filename","timestamp","datePattern","logFileDatePatter","prepend","maxSize","logFileSize","level","logLevel","showLevel","eol","debugFunction","debugLog","functionName","message","obj","log","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,eAAeC,QAAQ,2BAAR,CAArB;AACA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACrB,SAAO,sBAAO,IAAIC,IAAJ,EAAP,EAAmBC,MAAnB,CAA0B,qBAA1B,CAAP;AACD,CAFD,C,CAEG;AACH,IAAIC,eAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAAW,eAAKC,OAArC,CAAnB;;AAEA,IAAMC,SAAS,IAAI,kBAAQC,MAAZ,CAAmB;AAChCC,cAAY,CACV,IAAIX,YAAJ,CAAiB;AACfY,cAAaP,YAAb,yBADe;AAEfQ,eAAWX,QAFI;AAGfY,iBAAa,eAAKC,iBAHH;AAIfC,aAAS,IAJM;AAKfC,aAAS,eAAKC,WALC;AAMfC,WAAO,eAAKC,QANG;AAOfC,eAAW,IAPI;AAQfC,SAAK;AARU,GAAjB,CADU;AADoB,CAAnB,CAAf;AAcA,IAAIC,gBAAgB,SAAhBA,aAAgB,eAAgB;AAClCC,WAAS,qBAAqBC,YAA9B;AACD,CAFD;AAGA,IAAID,WAAW,SAAXA,QAAW,CAACE,OAAD,EAAUC,GAAV,EAAkB;AAC/BA,QAAMA,OAAO,IAAb;AACA,MAAIA,OAAO,IAAX,EAAiB;AACf,QAAI,QAAOD,OAAP,yCAAOA,OAAP,MAAkB,QAAtB,EAAgCjB,OAAOmB,GAAP,CAAW,OAAX,EAAoB,IAApB,EAA0BF,OAA1B,EAAhC,KACKjB,OAAOmB,GAAP,CAAW,OAAX,EAAoB,IAApB,EAA0BF,OAA1B;AACN,GAHD,MAGO;AACL,QAAI,QAAOC,GAAP,yCAAOA,GAAP,MAAc,QAAlB,EAA4BlB,OAAOmB,GAAP,CAAW,OAAX,EAAoBF,UAAU,IAA9B,EAAoCC,GAApC,EAA5B,KACKlB,OAAOmB,GAAP,CAAW,OAAX,EAAoBF,UAAU,IAA9B,EAAoCC,GAApC;AACN;AACF,CATD;;AAWA;AACAE,OAAOC,OAAP,GAAiB,EAAErB,cAAF,EAAUe,kBAAV,EAAoBD,4BAApB,EAAjB","file":"logging.js","sourcesContent":["import winston from \"winston\";\nimport keys from \"../keys/keys\";\nimport path from \"path\";\nimport moment from \"moment\";\nconst rotatingDate = require(\"winston-daily-rotate-file\");\nconst tsFormat = () => {\n  return moment(new Date()).format(\"DD-MM-YYYY HH:mm:ss\");\n}; //new Date().toLocaleTimeString();\nlet logDirectory = path.join(__dirname, \"../../\" + keys.logpath);\n\nconst logger = new winston.Logger({\n  transports: [\n    new rotatingDate({\n      filename: `${logDirectory}/hims-app-%DATE%.log`,\n      timestamp: tsFormat,\n      datePattern: keys.logFileDatePatter,\n      prepend: true,\n      maxSize: keys.logFileSize,\n      level: keys.logLevel,\n      showLevel: true,\n      eol: \"\\r\\n\"\n    })\n  ]\n});\nlet debugFunction = functionName => {\n  debugLog(\"Function Name : \" + functionName);\n};\nlet debugLog = (message, obj) => {\n  obj = obj || null;\n  if (obj == null) {\n    if (typeof message != \"object\") logger.log(\"debug\", \"%s\", message);\n    else logger.log(\"debug\", \"%j\", message);\n  } else {\n    if (typeof obj != \"object\") logger.log(\"debug\", message + \"%s\", obj);\n    else logger.log(\"debug\", message + \"%j\", obj);\n  }\n};\n\n//winston.add(winston.transports.Http, rotatingDate);\nmodule.exports = { logger, debugLog, debugFunction };\n"]}