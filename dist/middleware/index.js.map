{"version":3,"sources":["../../src/middleware/index.js"],"names":["db","api","use","req","res","next","url","token","body","query","headers","verify","SECRETKey","err","decoded","json","success","message","status"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;kBAEe,gBAAY;AAAA,MAATA,EAAS,QAATA,EAAS;;AACzB,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BF,QAAIH,EAAJ,GAASA,EAAT;AACA,QAAIG,IAAIG,GAAJ,IAAW,UAAf,EAA2B;AACzBD;AACD,KAFD,MAEO;AACL,UAAIE,QAAQJ,IAAIK,IAAJ,CAASD,KAAT,IAAkBJ,IAAIM,KAAJ,CAAUF,KAA5B,IAAqCJ,IAAIO,OAAJ,CAAY,WAAZ,CAAjD;AACA,UAAIH,KAAJ,EAAW;AACT,+BAAII,MAAJ,CAAWJ,KAAX,EAAkB,eAAOK,SAAzB,EAAoC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACpD,cAAID,GAAJ,EAAS;AACP,mBAAOT,IAAIW,IAAJ,CAAS;AACdC,uBAAS,KADK;AAEdC,uBAAS;AAFK,aAAT,CAAP;AAID,WALD,MAKO;AACLd,gBAAIW,OAAJ,GAAcA,OAAd;AACAT;AACD;AACF,SAVD;AAWD,OAZD,MAYO;AACL,eAAOD,IAAIc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;AACF;AACF,GAzBD;AA0BA,SAAOhB,GAAP;AACD,C","file":"index.js","sourcesContent":["import { Router } from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport config from \"../keys/keys\";\n\nexport default ({ db }) => {\n  let api = Router();\n\n  //add middleware\n  api.use((req, res, next) => {\n    req.db = db;\n    if (req.url == \"/apiAuth\") {\n      next();\n    } else {\n      var token = req.body.token || req.query.token || req.headers[\"x-api-key\"];\n      if (token) {\n        jwt.verify(token, config.SECRETKey, (err, decoded) => {\n          if (err) {\n            return res.json({\n              success: false,\n              message: \"Authentication failed\"\n            });\n          } else {\n            req.decoded = decoded;\n            next();\n          }\n        });\n      } else {\n        return res.status(400).json({\n          success: false,\n          message: \"no token provided\"\n        });\n      }\n    }\n  });\n  return api;\n};\n"]}