{"version":3,"sources":["../../src/controller/masters.js"],"names":["api","get","req","res","next","key","result","status","ok","json","success","records","value","resultData","masterDir","join","__dirname","existsSync","JSON","parse","readFileSync","length","SelectMany","hims_d_country_id","items","country_name","arabic_country_name","states","Where","state","country_id","Select","hims_d_state_id","s","state_name","cities","c","state_id","ToArray"],"mappings":";;;;;;AAAA;;AAYA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;kBACe,YAAM;AACnB,MAAIA,MAAM,sBAAV;;AAEAA,MAAIC,GAAJ,CACE,gCADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,+BAAa,EAAEC,KAAK,+BAAP,EAAb,EAAuD,kBAAU;AAC/D,UAAIC,UAAU,IAAd,EAAoB;AAClBH,YAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASL;AAFoB,SAA/B;AAID,OALD,MAKO;AACLF;AACD;AACF,KATD;AAUD,GAbH,mCAeE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACA,+BACE;AACEN,WAAK,+BADP;AAEEO,aAAON;AAFT,KADF,EAKE,sBAAc;AACZH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASE;AAFoB,OAA/B;AAIAT;AACD,KAXH;AAaD,GA9BH;;AAkCAJ,MAAIC,GAAJ,CACE,OADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,+BAAa,EAAEC,KAAK,MAAP,EAAb,EAA8B,kBAAU;AACtC,UAAIC,UAAU,IAAd,EAAoB;AAClBH,YAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASL;AAFoB,SAA/B;AAID,OALD,MAKO;AACLF;AACD;AACF,KATD;AAUD,GAbH,uBAeE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACA,+BACE;AACEN,WAAK,MADP;AAEEO,aAAON;AAFT,KADF,EAKE,sBAAc;AACZH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASE;AAFoB,OAA/B;AAIAT;AACD,KAXH;AAaD,GA9BH;;AAkCAJ,MAAIC,GAAJ,CACE,QADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,+BAAa,EAAEC,KAAK,OAAP,EAAb,EAA+B,kBAAU;AACvC,UAAIC,UAAU,IAAd,EAAoB;AAClBH,YAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASL;AAFoB,SAA/B;AAID,OALD,MAKO;AACLF;AACD;AACF,KATD;AAUD,GAbH,wBAeE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;;AAEA,+BACE;AACEN,WAAK,OADP;AAEEO,aAAON;AAFT,KADF,EAKE,sBAAc;AACZH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASE;AAFoB,OAA/B;AAIAT;AACD,KAXH;AAaD,GA/BH;AAkCAJ,MAAIC,GAAJ,CACE,UADF,0BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACAR,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASL;AAFoB,KAA/B;AAIAF;AACD,GAVH;;AAcAJ,MAAIC,GAAJ,CACE,QADF,wBAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACAR,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASL;AAFoB,KAA/B;AAIAF;AACD,GAVH;;AAcAJ,MAAIC,GAAJ,CACE,OADF,uBAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACAR,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASL;AAFoB,KAA/B;AAIAF;AACD,GAVH;AAaAJ,MAAIC,GAAJ,CACE,mBADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAMU,YAAY,eAAKC,IAAL,CAChBC,SADgB,EAEhB,qCAFgB,CAAlB;AAIA,QAAI,aAAGC,UAAH,CAAcH,SAAd,CAAJ,EAA8B;AAC5BX,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BE,iBAASO,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBN,SAAhB,CAAX,CADoB;AAE7BJ,iBAAS;AAFoB,OAA/B;AAID,KALD,MAKO;AACL,qCAAiBR,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B;AACD;AACF,GAfH,EAgBE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,eAAJ;AACA,QAAIJ,IAAIS,OAAJ,IAAe,IAAnB,EAAyB;AACvB,UAAIT,IAAIS,OAAJ,CAAYU,MAAZ,IAAsB,CAA1B,EAA6B;AAC3Bf,iBAAS,mBAASJ,IAAIS,OAAJ,CAAY,CAAZ,CAAT,EACNW,UADM,CACK,iBAAS;AACnB,iBAAO;AACLC,+BAAmBC,MAAMD,iBADpB;AAELE,0BAAcD,MAAMC,YAFf;AAGLC,iCAAqBF,MAAME,mBAHtB;AAILC,oBAAQ,mBAASzB,IAAIS,OAAJ,CAAY,CAAZ,CAAT,EACLiB,KADK,CACC;AAAA,qBAASC,MAAMC,UAAN,IAAoBN,MAAMD,iBAAnC;AAAA,aADD,EAELQ,MAFK,CAEE,aAAK;AACX,qBAAO;AACLC,iCAAiBC,EAAED,eADd;AAELE,4BAAYD,EAAEC,UAFT;AAGLJ,4BAAYG,EAAEH,UAHT;AAILK,wBAAQ,mBAASjC,IAAIS,OAAJ,CAAY,CAAZ,CAAT,EACLiB,KADK,CACC;AAAA,yBAAKQ,EAAEC,QAAF,IAAcJ,EAAED,eAArB;AAAA,iBADD,EAELM,OAFK;AAJH,eAAP;AAQD,aAXK,EAYLA,OAZK;AAJH,WAAP;AAkBD,SApBM,EAqBNA,OArBM,EAAT;AAsBD;AACD,8BAAY,kBAAZ,EAAgChC,MAAhC;AACAH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BE,iBAASL,MADoB;AAE7BI,iBAAS;AAFoB,OAA/B;AAIAN;AACD;AACF,GAlDH;AAqDAJ,MAAIC,GAAJ,CACE,WADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,+BAAa,EAAEC,KAAK,UAAP,EAAb,EAAkC,kBAAU;AAC1C,UAAIC,UAAU,IAAd,EAAoB;AAClBH,YAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASL;AAFoB,SAA/B;AAID,OALD,MAKO;AACLF;AACD;AACF,KATD;AAUD,GAbH,2BAeE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;;AAEA,+BACE;AACEN,WAAK,UADP;AAEEO,aAAON;AAFT,KADF,EAKE,sBAAc;AACZH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASE;AAFoB,OAA/B;AAIAT;AACD,KAXH;AAaD,GA/BH;;AAmCAJ,MAAIC,GAAJ,CACE,cADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,+BAAa,EAAEC,KAAK,aAAP,EAAb,EAAqC,kBAAU;AAC7C,UAAIC,UAAU,IAAd,EAAoB;AAClBH,YAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,mBAAS,IADoB;AAE7BC,mBAASL;AAFoB,SAA/B;AAID,OALD,MAKO;AACLF;AACD;AACF,KATD;AAUD,GAbH,8BAeE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACA,+BACE;AACEN,WAAK,aADP;AAEEO,aAAON;AAFT,KADF,EAKE,sBAAc;AACZH,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASE;AAFoB,OAA/B;AAIAT;AACD,KAXH;AAaD,GA9BH;AAiCAJ,MAAIC,GAAJ,CACE,UADF,0BAIE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIE,SAASJ,IAAIS,OAAjB;AACAR,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASL;AAFoB,KAA/B;AAIAF;AACD,GAXH;AAcA,SAAOJ,GAAP;AACD,C","file":"masters.js","sourcesContent":["import {\r\n  titleMaster,\r\n  countryMaster,\r\n  stateMaster,\r\n  cityMaster,\r\n  relegionMaster,\r\n  nationalityMaster,\r\n  autoGenMaster,\r\n  visaMaster,\r\n  clinicalNonClinicalAll,\r\n  countryStateCity\r\n} from \"../model/masters\";\r\nimport { Router } from \"express\";\r\nimport { releaseConnection, bulkMasters } from \"../utils\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nimport { LINQ } from \"node-linq\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport { getCacheData, setCacheData } from \"../utils/caching\";\r\nimport { debugLog } from \"../utils/logging\";\r\nexport default () => {\r\n  let api = Router();\r\n\r\n  api.get(\r\n    \"/subDeptClinicalNonClinicalAll\",\r\n    (req, res, next) => {\r\n      getCacheData({ key: \"subDeptClinicalNonClinicalAll\" }, result => {\r\n        if (result != null) {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: result\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    },\r\n    clinicalNonClinicalAll,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      setCacheData(\r\n        {\r\n          key: \"subDeptClinicalNonClinicalAll\",\r\n          value: result\r\n        },\r\n        resultData => {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: resultData\r\n          });\r\n          next();\r\n        }\r\n      );\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/visa\",\r\n    (req, res, next) => {\r\n      getCacheData({ key: \"visa\" }, result => {\r\n        if (result != null) {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: result\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    },\r\n    visaMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      setCacheData(\r\n        {\r\n          key: \"visa\",\r\n          value: result\r\n        },\r\n        resultData => {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: resultData\r\n          });\r\n          next();\r\n        }\r\n      );\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/title\",\r\n    (req, res, next) => {\r\n      getCacheData({ key: \"title\" }, result => {\r\n        if (result != null) {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: result\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    },\r\n    titleMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n\r\n      setCacheData(\r\n        {\r\n          key: \"title\",\r\n          value: result\r\n        },\r\n        resultData => {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: resultData\r\n          });\r\n          next();\r\n        }\r\n      );\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/country\",\r\n    countryMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/state\",\r\n    stateMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/city\",\r\n    cityMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/countryStateCity\",\r\n    (req, res, next) => {\r\n      const masterDir = path.join(\r\n        __dirname,\r\n        \"../../Masters/countryStateCity.json\"\r\n      );\r\n      if (fs.existsSync(masterDir)) {\r\n        res.status(httpStatus.ok).json({\r\n          records: JSON.parse(fs.readFileSync(masterDir)),\r\n          success: true\r\n        });\r\n      } else {\r\n        countryStateCity(req, res, next);\r\n      }\r\n    },\r\n    (req, res, next) => {\r\n      let result;\r\n      if (req.records != null) {\r\n        if (req.records.length != 0) {\r\n          result = new LINQ(req.records[0])\r\n            .SelectMany(items => {\r\n              return {\r\n                hims_d_country_id: items.hims_d_country_id,\r\n                country_name: items.country_name,\r\n                arabic_country_name: items.arabic_country_name,\r\n                states: new LINQ(req.records[1])\r\n                  .Where(state => state.country_id == items.hims_d_country_id)\r\n                  .Select(s => {\r\n                    return {\r\n                      hims_d_state_id: s.hims_d_state_id,\r\n                      state_name: s.state_name,\r\n                      country_id: s.country_id,\r\n                      cities: new LINQ(req.records[2])\r\n                        .Where(c => c.state_id == s.hims_d_state_id)\r\n                        .ToArray()\r\n                    };\r\n                  })\r\n                  .ToArray()\r\n              };\r\n            })\r\n            .ToArray();\r\n        }\r\n        bulkMasters(\"countryStateCity\", result);\r\n        res.status(httpStatus.ok).json({\r\n          records: result,\r\n          success: true\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/relegion\",\r\n    (req, res, next) => {\r\n      getCacheData({ key: \"relegion\" }, result => {\r\n        if (result != null) {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: result\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    },\r\n    relegionMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n\r\n      setCacheData(\r\n        {\r\n          key: \"relegion\",\r\n          value: result\r\n        },\r\n        resultData => {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: resultData\r\n          });\r\n          next();\r\n        }\r\n      );\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/nationality\",\r\n    (req, res, next) => {\r\n      getCacheData({ key: \"nationality\" }, result => {\r\n        if (result != null) {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: result\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    },\r\n    nationalityMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      setCacheData(\r\n        {\r\n          key: \"nationality\",\r\n          value: result\r\n        },\r\n        resultData => {\r\n          res.status(httpStatus.ok).json({\r\n            success: true,\r\n            records: resultData\r\n          });\r\n          next();\r\n        }\r\n      );\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/autogen\",\r\n\r\n    autoGenMaster,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  return api;\r\n};\r\n"]}