{"version":3,"sources":["../../src/controller/identity.js"],"names":["config","db","api","delete","req","res","next","result","records","status","ok","json","post","length","generateError","notFound","success","put","get"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAMA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEAA,MAAIC,MAAJ,CACE,SADF,4BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+BJ,MAA/B;AACAD;AACD,GAPH;;AAWAJ,MAAIU,IAAJ,CACE,MADF,yBAGE,UAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBP,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLV,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAdH;AAiBAJ,MAAIe,GAAJ,CACE,SADF,4BAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBP,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLV,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAdH;;AAkBAJ,MAAIgB,GAAJ,CACE,MADF,4BAGE,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBP,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLV,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAdH;;AAkBA,SAAOJ,GAAP;AACD,C","file":"identity.js","sourcesContent":["import { Router } from \"express\";\r\nimport { releaseConnection } from \"../utils\";\r\nimport {\r\n  addIdentity,\r\n  updateIdentity,\r\n  selectIdentity,\r\n  deleteIdentity\r\n} from \"../model/identity\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n\r\n  api.delete(\r\n    \"/delete\",\r\n    deleteIdentity,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json(result);\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.post(\r\n    \"/add\",\r\n    addIdentity,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.put(\r\n    \"/update\",\r\n    updateIdentity,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/get\",\r\n    selectIdentity,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  return api;\r\n};\r\n"]}