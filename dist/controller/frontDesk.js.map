{"version":3,"sources":["../../src/controller/frontDesk.js"],"names":["config","db","api","post","req","res","next","body","patient_Image","patient_code","status","ok","json","success","records","get","generateError","notFound","query"],"mappings":";;;;;;;AACA;;;AADA;;AAEA;;AACA;;AACA;;AACA;;AAKA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,MADF,2BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT,EAAmBF,IAAIG,IAAJ,CAASC,aAA5B;AACA,2BAAS,YAAT,EAAuBJ,IAAIG,IAA3B;AACA,QAAIH,IAAIG,IAAJ,CAASC,aAAT,IAA0B,IAA9B,EAAoC;AAClC,6BAAS,mBAAT;AACA,iCACEJ,IAAIG,IAAJ,CAASC,aADX,EAEEJ,IAAIG,IAAJ,CAASE,YAFX,EAGEL,IAAIG,IAAJ,CAASE,YAHX;AAKA,aAAOL,IAAIG,IAAJ,CAASC,aAAhB;AACD;AACDF;AACD,GAhBH,EAiBE,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,2BAAS,QAAT;AACAD,QAAIK,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASV,IAAIG;AAFgB,KAA/B;AAIAD;AACD,GAxBH;;AA4BAJ,MAAIC,IAAJ,CACE,SADF,8BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIK,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASV,IAAIG;AAFgB,KAA/B;AAIAD;AACD,GATH;;AAaAJ,MAAIa,GAAJ,CACE,MADF,8BAGE,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIF,IAAIU,OAAJ,IAAe,IAAnB,EAAyB;AACvBR,WAAK,qBAAWU,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACL,UAAMT,gBAAgB,8BACpBJ,IAAIc,KAAJ,CAAUT,YADU,EAEpBL,IAAIc,KAAJ,CAAUT,YAFU,CAAtB;AAIAJ,UAAIK,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,8BAAcV,IAAIU,OAAlB,IAA2BN,eAAeA,aAA1C;AAF6B,OAA/B;AAIAF;AACD;AACF,GAjBH;;AAqBA,SAAOJ,GAAP;AACD,C","file":"frontDesk.js","sourcesContent":["import { Router } from \"express\";\r\n//import extend from \"extend\";\r\nimport { downloadImage, readFileToBase64 } from \"../utils/images\";\r\nimport { releaseConnection } from \"../utils\";\r\nimport { debugLog, debugFunction } from \"../utils/logging\";\r\nimport {\r\n  addFrontDesk,\r\n  updateFrontDesk,\r\n  selectFrontDesk\r\n} from \"../model/frontDesk\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n  api.post(\r\n    \"/add\",\r\n    addFrontDesk,\r\n    (req, res, next) => {\r\n      debugLog(\"Data: \", req.body.patient_Image);\r\n      debugLog(\"req.body: \", req.body);\r\n      if (req.body.patient_Image != null) {\r\n        debugLog(\"Download Image : \");\r\n        downloadImage(\r\n          req.body.patient_Image,\r\n          req.body.patient_code,\r\n          req.body.patient_code\r\n        );\r\n        delete req.body.patient_Image;\r\n      }\r\n      next();\r\n    },\r\n    (req, res, next) => {\r\n      debugLog(\"Data1:\");\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: req.body\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.post(\r\n    \"/update\",\r\n    updateFrontDesk,\r\n    (req, res, next) => {\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: req.body\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/get\",\r\n    selectFrontDesk,\r\n    (req, res, next) => {\r\n      if (req.records == null) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        const patient_Image = readFileToBase64(\r\n          req.query.patient_code,\r\n          req.query.patient_code\r\n        );\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: { ...req.records, patient_Image: patient_Image }\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  return api;\r\n};\r\n"]}