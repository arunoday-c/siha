{"version":3,"sources":["../../src/controller/frontDesk.js"],"names":["config","db","api","post","req","res","next","status","ok","json","success","records","body","get","generateError","notFound"],"mappings":";;;;;;AAAA;;AACA;;;;AAEA;;AACA;;AAKA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,MADF,2BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIE,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASP,IAAIQ;AAFgB,KAA/B;AAIAN;AACD,GATH;;AAaAJ,MAAIC,IAAJ,CACE,SADF,8BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClBD,QAAIE,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BC,eAASP,IAAIQ;AAFgB,KAA/B;AAIAN;AACD,GATH;;AAaAJ,MAAIW,GAAJ,CACE,MADF,8BAGE,UAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIF,IAAIO,OAAJ,IAAe,IAAnB,EAAyB;AACvBL,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLV,UAAIE,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BC,iBAASP,IAAIO;AAFgB,OAA/B;AAIAL;AACD;AACF,GAbH;;AAiBA,SAAOJ,GAAP;AACD,C","file":"frontDesk.js","sourcesContent":["import { Router } from \"express\";\nimport extend from \"extend\";\n\nimport { releaseConnection } from \"../utils\";\nimport {\n  addFrontDesk,\n  updateFrontDesk,\n  selectFrontDesk\n} from \"../model/frontDesk\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/add\",\n    addFrontDesk,\n    (req, res, next) => {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.body\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.post(\n    \"/update\",\n    updateFrontDesk,\n    (req, res, next) => {\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: req.body\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get\",\n    selectFrontDesk,\n    (req, res, next) => {\n      if (req.records == null) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: req.records\n        });\n        next();\n      }\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}