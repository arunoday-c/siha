{"version":3,"sources":["../../src/controller/visitType.js"],"names":["config","db","api","delete","req","res","next","result","records","status","ok","json","get","length","generateError","notFound","success","post","put"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAMA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEAA,MAAIC,MAAJ,CACE,SADF,8BAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+BJ,MAA/B;AACAD;AACD,GAPH;;AAWAJ,MAAIU,GAAJ,CACE,MADF,8BAGE,UAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBP,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLV,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAID;AACDD;AACD,GAdH;AAiBAJ,MAAIe,IAAJ,CACE,MADF,uBAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBR,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH;AAiBAb,MAAIgB,GAAJ,CACE,SADF,0BAGE,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOM,MAAP,IAAiB,CAArB,EAAwB;AACtBR,UAAII,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BK,iBAAS,IADoB;AAE7BR,iBAASD;AAFoB,OAA/B;AAIAD;AACD,KAND,MAMO;AACLA,WAAK,qBAAWQ,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD;AACF,GAdH;AAiBA,SAAOb,GAAP;AACD,C","file":"visitType.js","sourcesContent":["import { Router } from \"express\";\r\nimport { releaseConnection } from \"../utils\";\r\nimport {\r\n  selectStatement,\r\n  addVisit,\r\n  updateVisit,\r\n  deleteVisitType\r\n} from \"../model/visitType\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n\r\n  api.delete(\r\n    \"/delete\",\r\n    deleteVisitType,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json(result);\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/get\",\r\n    selectStatement,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n      }\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.post(\r\n    \"/add\",\r\n    addVisit,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length != 0) {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      } else {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.put(\r\n    \"/update\",\r\n    updateVisit,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length != 0) {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      } else {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  return api;\r\n};\r\n"]}