{"version":3,"sources":["../../src/controller/department.js"],"names":["config","db","api","post","req","res","next","resultTables","records","length","status","ok","json","success","generateError","notFound","put","resultSelect","get","result","results","delete","departmets","departments","doctors","dept_Obj","Array","doc_Obj","d_keys","Object","keys","forEach","item","index","firstItem","FirstOrDefault","subDept","department_id","sub_department_id","sub_department_name","arabic_sub_department_name","push","doc_keys","doc","employee_id","full_name","arabic_name","services_id"],"mappings":"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","file":"department.js","sourcesContent":["import { Router } from \"express\";\nimport {\n  addDepartment,\n  updateDepartment,\n  selectDepartment,\n  selectSubDepartment,\n  addSubDepartment,\n  updateSubDepartment,\n  deleteDepartment,\n  selectdoctors\n} from \"../model/department\";\nimport { releaseConnection } from \"../utils\";\nimport httpStatus from \"../utils/httpStatus\";\nimport { LINQ } from \"node-linq\";\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/add\",\n    addDepartment,\n    (req, res, next) => {\n      let resultTables = req.records;\n      if (resultTables.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultTables\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No more records\"));\n      }\n    },\n    releaseConnection\n  );\n  api.put(\n    \"/update\",\n    updateDepartment,\n    (req, res, next) => {\n      let resultSelect = req.records;\n      if (resultSelect.length != 0) {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultSelect\n        });\n        next();\n      } else {\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\n      }\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get\",\n    selectDepartment,\n    (req, res, next) => {\n      let result = req.records;\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get/subdepartment\",\n    selectSubDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.post(\n    \"/add/subdepartment\",\n    addSubDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.put(\n    \"/update/subdepartment\",\n    updateSubDepartment,\n    (req, res, next) => {\n      let results = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: results\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.delete(\n    \"/delete\",\n    deleteDepartment,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json(result);\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/get/get_All_Doctors_DepartmentWise\",\n    selectdoctors,\n    (req, res, next) => {\n      let result = req.records;\n      let departmets = result.departments;\n      let doctors = result.doctors;\n      let dept_Obj = new Array();\n      let doc_Obj = new Array();\n      let d_keys = Object.keys(departmets);\n      d_keys.forEach((item, index) => {\n        let firstItem = new LINQ(departmets[item]).FirstOrDefault();\n        let subDept = new Object();\n        subDept[\"department_id\"] = firstItem.department_id;\n        subDept[\"sub_department_id\"] = firstItem.sub_department_id;\n        subDept[\"sub_department_name\"] = firstItem.sub_department_name;\n        subDept[\"arabic_sub_department_name\"] =\n          firstItem.arabic_sub_department_name;\n        subDept[\"doctors\"] = departmets[item];\n        dept_Obj.push(subDept);\n      });\n\n      let doc_keys = Object.keys(doctors);\n      doc_keys.forEach((item, index) => {\n        let firstItem = new LINQ(doctors[item]).FirstOrDefault();\n        let doc = new Object();\n        doc[\"employee_id\"] = firstItem.employee_id;\n        doc[\"full_name\"] = firstItem.full_name;\n        doc[\"arabic_name\"] = firstItem.arabic_name;\n        doc[\"services_id\"] = firstItem.services_id;\n        doc[\"departments\"] = doctors[item];\n        doc_Obj.push(doc);\n      });\n\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: {\n          departmets: dept_Obj,\n          doctors: doc_Obj\n        }\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}