{"version":3,"sources":["../../src/controller/department.js"],"names":["config","db","api","post","req","res","next","resultTables","records","length","status","ok","json","success","generateError","notFound","put","resultSelect","get","result","results","delete","departmets","departments","doctors","dept_Obj","Array","doc_Obj","d_keys","Object","keys","forEach","item","index","firstItem","FirstOrDefault","subDept","department_id","sub_department_id","sub_department_name","arabic_sub_department_name","push","doc_keys","doc","employee_id","full_name","arabic_name","services_id","sub_dept_id","provider_id"],"mappings":"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","file":"department.js","sourcesContent":["import { Router } from \"express\";\r\nimport {\r\n  addDepartment,\r\n  updateDepartment,\r\n  selectDepartment,\r\n  selectSubDepartment,\r\n  addSubDepartment,\r\n  updateSubDepartment,\r\n  deleteDepartment,\r\n  selectdoctors,\r\n  selectDoctorsAndClinic\r\n} from \"../model/department\";\r\nimport { releaseConnection } from \"../utils\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nimport { LINQ } from \"node-linq\";\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n  api.post(\r\n    \"/add\",\r\n    addDepartment,\r\n    (req, res, next) => {\r\n      let resultTables = req.records;\r\n      if (resultTables.length != 0) {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: resultTables\r\n        });\r\n        next();\r\n      } else {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No more records\"));\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.put(\r\n    \"/update\",\r\n    updateDepartment,\r\n    (req, res, next) => {\r\n      let resultSelect = req.records;\r\n      if (resultSelect.length != 0) {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: resultSelect\r\n        });\r\n        next();\r\n      } else {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/get\",\r\n    selectDepartment,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/get/subdepartment\",\r\n    selectSubDepartment,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.post(\r\n    \"/add/subdepartment\",\r\n    addSubDepartment,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.put(\r\n    \"/update/subdepartment\",\r\n    updateSubDepartment,\r\n    (req, res, next) => {\r\n      let results = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: results\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.delete(\r\n    \"/delete\",\r\n    deleteDepartment,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json(result);\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  api.get(\r\n    \"/get/get_All_Doctors_DepartmentWise\",\r\n    selectdoctors,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      let departmets = result.departments;\r\n      let doctors = result.doctors;\r\n      let dept_Obj = new Array();\r\n      let doc_Obj = new Array();\r\n      let d_keys = Object.keys(departmets);\r\n      d_keys.forEach((item, index) => {\r\n        let firstItem = new LINQ(departmets[item]).FirstOrDefault();\r\n        let subDept = new Object();\r\n        subDept[\"department_id\"] = firstItem.department_id;\r\n        subDept[\"sub_department_id\"] = firstItem.sub_department_id;\r\n        subDept[\"sub_department_name\"] = firstItem.sub_department_name;\r\n        subDept[\"arabic_sub_department_name\"] =\r\n          firstItem.arabic_sub_department_name;\r\n        subDept[\"doctors\"] = departmets[item];\r\n        dept_Obj.push(subDept);\r\n      });\r\n\r\n      let doc_keys = Object.keys(doctors);\r\n      doc_keys.forEach((item, index) => {\r\n        let firstItem = new LINQ(doctors[item]).FirstOrDefault();\r\n        let doc = new Object();\r\n        doc[\"employee_id\"] = firstItem.employee_id;\r\n        doc[\"full_name\"] = firstItem.full_name;\r\n        doc[\"arabic_name\"] = firstItem.arabic_name;\r\n        doc[\"services_id\"] = firstItem.services_id;\r\n        doc[\"departments\"] = doctors[item];\r\n        doc_Obj.push(doc);\r\n      });\r\n\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: {\r\n          departmets: dept_Obj,\r\n          doctors: doc_Obj\r\n        }\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  //created by:irfan to get sub departments doctors and clinic\r\n  api.get(\r\n    \"/selectDoctorsAndClinic\",\r\n    selectDoctorsAndClinic,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      let departmets = result.departments;\r\n      let doctors = result.doctors;\r\n      let dept_Obj = new Array();\r\n      let doc_Obj = new Array();\r\n      let d_keys = Object.keys(departmets);\r\n      d_keys.forEach((item, index) => {\r\n        let firstItem = new LINQ(departmets[item]).FirstOrDefault();\r\n        let subDept = new Object();\r\n        subDept[\"department_id\"] = firstItem.department_id;\r\n        subDept[\"sub_dept_id\"] = firstItem.sub_dept_id;\r\n        subDept[\"sub_department_name\"] = firstItem.sub_department_name;\r\n        subDept[\"arabic_sub_department_name\"] =\r\n          firstItem.arabic_sub_department_name;\r\n        subDept[\"doctors\"] = departmets[item];\r\n        dept_Obj.push(subDept);\r\n      });\r\n\r\n      let doc_keys = Object.keys(doctors);\r\n      doc_keys.forEach((item, index) => {\r\n        let firstItem = new LINQ(doctors[item]).FirstOrDefault();\r\n        let doc = new Object();\r\n        doc[\"provider_id\"] = firstItem.provider_id;\r\n        doc[\"full_name\"] = firstItem.full_name;\r\n        doc[\"arabic_name\"] = firstItem.arabic_name;\r\n        doc[\"services_id\"] = firstItem.services_id;\r\n        doc[\"departments\"] = doctors[item];\r\n        doc_Obj.push(doc);\r\n      });\r\n\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: {\r\n          departmets: dept_Obj,\r\n          doctors: doc_Obj\r\n        }\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n\r\n  return api;\r\n};\r\n"]}