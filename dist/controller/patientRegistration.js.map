{"version":3,"sources":["../../src/controller/patientRegistration.js"],"names":["config","db","api","post","req","res","next","result","records","length","generateError","notFound","status","ok","json","success","put","get"],"mappings":";;;;;;AAAA;;AACA;;AAKA;;AACA;;AACA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,MADF,kDAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACA,QAAID,OAAOE,MAAP,IAAiB,CAArB,EAAwB;AACtBH,WAAK,qBAAWI,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,kBAA9C,CAAL;AACD,KAFD,MAEO;AACLN,UAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BP,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAdH;AAiBAJ,MAAIc,GAAJ,CACE,SADF,kDAGE,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASD;AAFoB,KAA/B;AAIAD;AACD,GAVH;AAaAJ,MAAIe,GAAJ,CACE,MADF,sCAGE,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,SAASH,IAAII,OAAjB;;AAEA,QAAID,OAAOE,MAAP,IAAiB,CAArB,EAAwB;AACtBH,WAAK,qBAAWI,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,iBAA9C,CAAL;AACD,KAFD,MAEO;AACLN,UAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BP,iBAASD;AAFoB,OAA/B;AAIAD;AACD;AACF,GAfH;AAkBA,SAAOJ,GAAP;AACD,C","file":"patientRegistration.js","sourcesContent":["import { Router } from \"express\";\r\nimport {\r\n  addPatientToRegisteration,\r\n  updatePatientRegistrstion,\r\n  patientSelect\r\n} from \"../model/patientRegistration\";\r\nimport { releaseConnection } from \"../utils\";\r\nimport { CLIENT_RENEG_WINDOW } from \"tls\";\r\nimport httpStatus from \"../utils/httpStatus\";\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n  api.post(\r\n    \"/add\",\r\n    addPatientToRegisteration,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No records found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.put(\r\n    \"/update\",\r\n    updatePatientRegistrstion,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n      res.status(httpStatus.ok).json({\r\n        success: true,\r\n        records: result\r\n      });\r\n      next();\r\n    },\r\n    releaseConnection\r\n  );\r\n  api.get(\r\n    \"/get\",\r\n    patientSelect,\r\n    (req, res, next) => {\r\n      let result = req.records;\r\n\r\n      if (result.length == 0) {\r\n        next(httpStatus.generateError(httpStatus.notFound, \"No record found\"));\r\n      } else {\r\n        res.status(httpStatus.ok).json({\r\n          success: true,\r\n          records: result\r\n        });\r\n        next();\r\n      }\r\n    },\r\n    releaseConnection\r\n  );\r\n  return api;\r\n};\r\n"]}