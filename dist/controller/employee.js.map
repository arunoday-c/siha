{"version":3,"sources":["../../src/controller/employee.js"],"names":["config","db","api","post","req","res","next","resultBack","records","length","generateError","notFound","status","ok","json","success","put","result","message","get"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AASA;;;;;;kBACe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEAA,MAAIC,IAAJ,CACE,cADF,yBAGE,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIC,aAAaH,IAAII,OAArB;AACA,QAAID,WAAWE,MAAX,IAAqB,CAAzB,EAA4B;AAC1BH,WAAK,qBAAWI,aAAX,CAAyB,qBAAWC,QAApC,EAA8C,iBAA9C,CAAL;AACD,KAFD,MAEO;AACLN,UAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,iBAAS,IADoB;AAE7BP,iBAASD;AAFoB,OAA/B;AAID;;AAEDD;AACD,GAfH;AAkBAJ,MAAIc,GAAJ,CACE,iBADF,4BAGE,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BG,eAAS,sBAFoB;AAG7BV,eAASS;AAHoB,KAA/B;AAKAX;AACD,GAXH;AAcAJ,MAAIiB,GAAJ,CACE,MADF,yBAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASS;AAFoB,KAA/B;AAIAX;AACD,GAVH;;AAcAJ,MAAIiB,GAAJ,CACE,qBADF,gCAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASS;AAFoB,KAA/B;AAIAX;AACD,GAVH;;AAcAJ,MAAIiB,GAAJ,CACE,sBADF,iCAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASS;AAFoB,KAA/B;AAIAX;AACD,GAVH;;AAcAJ,MAAIiB,GAAJ,CACE,6BADF,wCAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASS;AAFoB,KAA/B;AAIAX;AACD,GAVH;;AAcAJ,MAAIiB,GAAJ,CACE,iCADF,4CAGE,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,QAAIW,SAASb,IAAII,OAAjB;AACAH,QAAIO,MAAJ,CAAW,qBAAWC,EAAtB,EAA0BC,IAA1B,CAA+B;AAC7BC,eAAS,IADoB;AAE7BP,eAASS;AAFoB,KAA/B;AAIAX;AACD,GAVH;;AAcA,SAAOJ,GAAP;AACD,C","file":"employee.js","sourcesContent":["import { Router } from \"express\";\nimport { releaseConnection } from \"../utils\";\nimport {\n  addEmployee,\n  getEmployee,\n  updateEmployee,\n  getEmployeeDetails,\n  getDoctorServiceCommission,\n  getEmployeeCategory,\n  getDoctorServiceTypeCommission\n} from \"../model/employee\";\nimport httpStatus from \"../utils/httpStatus\";\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.post(\n    \"/addEmployee\",\n    addEmployee,\n    (req, res, next) => {\n      let resultBack = req.records;\n      if (resultBack.length == 0) {\n        next(httpStatus.generateError(httpStatus.notFound, \"No record found\"));\n      } else {\n        res.status(httpStatus.ok).json({\n          success: true,\n          records: resultBack\n        });\n      }\n\n      next();\n    },\n    releaseConnection\n  );\n  api.put(\n    \"/updateEmployee\",\n    updateEmployee,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        message: \"Updated successfully\",\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n  api.get(\n    \"/get\",\n    getEmployee,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmployeeDetails\",\n    getEmployeeDetails,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getEmployeeCategory\",\n    getEmployeeCategory,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getDoctorServiceCommission\",\n    getDoctorServiceCommission,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  api.get(\n    \"/getDoctorServiceTypeCommission\",\n    getDoctorServiceTypeCommission,\n    (req, res, next) => {\n      let result = req.records;\n      res.status(httpStatus.ok).json({\n        success: true,\n        records: result\n      });\n      next();\n    },\n    releaseConnection\n  );\n\n  return api;\n};\n"]}